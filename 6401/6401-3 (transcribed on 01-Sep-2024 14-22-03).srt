1
00:00:00,000 --> 00:00:10,000
 All right, so before I start the lecture today, I wish to draw your attention to these two

2
00:00:10,000 --> 00:00:14,920
 announcements, which was made earlier last week.

3
00:00:14,920 --> 00:00:19,400
 As I mentioned last week, we have two CAs, Continuous Assessment for this course.

4
00:00:19,400 --> 00:00:23,800
 One will be conducted by me, the other one will be conducted by Prof. Lin in the second

5
00:00:23,800 --> 00:00:24,800
 part.

6
00:00:24,800 --> 00:00:26,040
 But the forms are different.

7
00:00:26,040 --> 00:00:29,840
 I don't know why there were some students still raise the question.

8
00:00:29,840 --> 00:00:31,400
 I think I made them clear last time.

9
00:00:31,400 --> 00:00:37,200
 But please read the announcements, if you're not very clear about the two CAs.

10
00:00:37,200 --> 00:00:40,000
 Basically, I will give you homework.

11
00:00:40,000 --> 00:00:42,200
 So homework is not a quiz.

12
00:00:42,200 --> 00:00:44,200
 You will do that at home.

13
00:00:44,200 --> 00:00:46,400
 So you don't have to come here.

14
00:00:46,400 --> 00:00:49,120
 You will have more than three weeks' time.

15
00:00:49,120 --> 00:00:53,320
 So the homework will be made available to you in week three.

16
00:00:53,320 --> 00:00:55,440
 So this is actually, this is already week three.

17
00:00:55,440 --> 00:00:58,080
 So actually, did I say week three or week four?

18
00:00:58,080 --> 00:00:59,800
 Like week four, sorry, week four.

19
00:00:59,800 --> 00:01:02,960
 So it will be made available to you next week, next Friday.

20
00:01:02,960 --> 00:01:07,200
 The reason is like you need the knowledge, which we are going to learn starting from

21
00:01:07,200 --> 00:01:08,920
 next week to do the homework.

22
00:01:08,920 --> 00:01:11,320
 So even if I announce now, it doesn't really help.

23
00:01:11,320 --> 00:01:12,320
 All right.

24
00:01:12,320 --> 00:01:18,120
 But the one way you have enough time to do it, because the due date will be the Friday

25
00:01:18,120 --> 00:01:19,480
 of the recess week.

26
00:01:19,480 --> 00:01:22,920
 In other words, you should have how many weeks?

27
00:01:22,920 --> 00:01:25,120
 Five, six, seven.

28
00:01:25,120 --> 00:01:28,880
 So even if you count the recess week, there should be four weeks to do it.

29
00:01:28,880 --> 00:01:30,480
 So you should have enough time.

30
00:01:30,480 --> 00:01:33,280
 So you can use your textbook.

31
00:01:33,280 --> 00:01:35,200
 You can even search online if you want.

32
00:01:35,200 --> 00:01:41,320
 But mainly those questions for you, like a checkpoint for you to fully, make sure you

33
00:01:41,320 --> 00:01:46,240
 fully understand all of those concepts we cover in my part.

34
00:01:46,240 --> 00:01:50,200
 And you will find the questions under the assignment.

35
00:01:50,200 --> 00:01:53,760
 So I don't know how many of you have checked the NT Learner side.

36
00:01:54,720 --> 00:02:01,520
 If you go to the NT Learner page, for the content, this is where you can find the slides,

37
00:02:01,520 --> 00:02:02,960
 lecture slides.

38
00:02:02,960 --> 00:02:06,080
 And later I'm going to create an item under here.

39
00:02:06,080 --> 00:02:07,920
 I mean, this was the old one, I think.

40
00:02:07,920 --> 00:02:08,920
 But anyway, I'll update.

41
00:02:08,920 --> 00:02:09,920
 But this was the old one.

42
00:02:09,920 --> 00:02:12,720
 You will be able to find the assignment.

43
00:02:12,720 --> 00:02:15,080
 So you can download the question there.

44
00:02:15,080 --> 00:02:18,520
 And then you can also submit your answer sheets there.

45
00:02:18,520 --> 00:02:22,040
 In other words, you don't have to give me the hard copy.

46
00:02:22,040 --> 00:02:27,079
 You do it, you can either type set it, like you can use a late act to type it or a word.

47
00:02:27,079 --> 00:02:28,359
 Or you can just write it.

48
00:02:28,359 --> 00:02:30,359
 I mean, you can do handwritten submission.

49
00:02:30,359 --> 00:02:37,000
 But if you choose to write your answers by hand, make sure those answers can be read.

50
00:02:37,000 --> 00:02:41,040
 Because if I cannot understand your handwriting, I cannot give you marks.

51
00:02:41,040 --> 00:02:42,840
 It's very fair.

52
00:02:42,840 --> 00:02:43,959
 So it's your choice.

53
00:02:43,959 --> 00:02:50,160
 You can choose to type set it, like use words or maybe late act to do it, which is completely

54
00:02:50,160 --> 00:02:53,680
 safe because I can definitely read those typeset answer sheets.

55
00:02:53,680 --> 00:02:59,079
 But if you choose to write it down on papers, and then you can scan it, you can take a photo,

56
00:02:59,079 --> 00:03:03,120
 scan it, submit, make sure those answers can be read.

57
00:03:03,120 --> 00:03:05,400
 Because I'm not sure about everybody's handwriting.

58
00:03:05,400 --> 00:03:09,960
 But if your handwriting is terrible, you have to make it clear.

59
00:03:09,960 --> 00:03:12,480
 Because if I don't understand it, I cannot give you marks.

60
00:03:12,480 --> 00:03:16,359
 So it's your job to make the handwriting clear.

61
00:03:16,359 --> 00:03:18,320
 So this is for my part.

62
00:03:18,320 --> 00:03:20,600
 My part, the CA is not a quiz.

63
00:03:20,600 --> 00:03:21,600
 It's a homework.

64
00:03:21,600 --> 00:03:25,040
 I hope I clarified this already.

65
00:03:25,040 --> 00:03:30,640
 But for Puffling, let's go to the announcement.

66
00:03:30,640 --> 00:03:34,359
 So if you look at the announcement, Puffling also make another announcement.

67
00:03:34,359 --> 00:03:38,640
 So for his part, he's going to give you a quiz.

68
00:03:38,640 --> 00:03:39,840
 It's also 20%.

69
00:03:39,840 --> 00:03:41,000
 But he's going to give you a quiz.

70
00:03:41,000 --> 00:03:46,640
 In other words, for his part, it's going to be a close book quiz which is conducted in

71
00:03:46,640 --> 00:03:47,640
 the lecture.

72
00:03:47,640 --> 00:03:52,760
 I mean, I don't know whether it's in the lecture, but it's going to conduct it physically here.

73
00:03:52,760 --> 00:03:54,200
 So he's going to tell you more details.

74
00:03:54,200 --> 00:03:57,000
 But the forms is different.

75
00:03:57,000 --> 00:03:58,160
 For my part, it's homework.

76
00:03:58,160 --> 00:04:00,279
 For Puffling's part, it's a quiz.

77
00:04:00,279 --> 00:04:05,720
 Don't get me confused, because I do have some people ask me how many homeworks do I have?

78
00:04:05,720 --> 00:04:06,720
 Only one homework.

79
00:04:06,720 --> 00:04:07,720
 That's for me.

80
00:04:07,720 --> 00:04:09,959
 The quiz is from Puffling.

81
00:04:09,959 --> 00:04:12,480
 And my part will only focus on part one.

82
00:04:12,480 --> 00:04:14,480
 I will not touch the part two.

83
00:04:14,480 --> 00:04:18,120
 I don't speak for Puffling, but I think he's going to focus on part two, right?

84
00:04:18,120 --> 00:04:21,000
 Because this is actually how we separate the scope.

85
00:04:21,000 --> 00:04:22,640
 Is it clear?

86
00:04:22,640 --> 00:04:24,159
 Because I do receive some emails.

87
00:04:24,159 --> 00:04:25,159
 Keep asking me this.

88
00:04:25,159 --> 00:04:29,760
 But if you are not clear, you have any question, please ask me no.

89
00:04:29,760 --> 00:04:34,000
 Because if you email me, I could get delayed, because I may not reply you on time.

90
00:04:34,000 --> 00:04:35,000
 So don't complain.

91
00:04:35,000 --> 00:04:37,920
 If you have a better way to do it, just ask me no.

92
00:04:37,920 --> 00:04:41,039
 I can clarify any question you have.

93
00:04:41,039 --> 00:04:42,039
 Yes?

94
00:04:42,040 --> 00:04:47,960
 What do you mean by one?

95
00:04:47,960 --> 00:04:51,600
 You can do multiple submissions, but I will only grade your last submission.

96
00:04:51,600 --> 00:04:53,280
 Okay, so here's the thing.

97
00:04:53,280 --> 00:04:57,280
 He's asking, the gentleman is asking, how many times, how many opportunities I can submit?

98
00:04:57,280 --> 00:04:58,280
 All right.

99
00:04:58,280 --> 00:05:01,000
 You can submit multiple times as many as you want.

100
00:05:01,000 --> 00:05:02,520
 I'll make it unlimited.

101
00:05:02,520 --> 00:05:06,000
 But I'm only going to grade your last submission.

102
00:05:06,000 --> 00:05:11,520
 In other words, if I make my second submission, that's going to replace the first submission.

103
00:05:11,880 --> 00:05:13,000
 Okay, is it clear?

104
00:05:13,000 --> 00:05:14,240
 I'm not going to grade both.

105
00:05:14,240 --> 00:05:15,520
 Okay, doesn't make sense.

106
00:05:15,520 --> 00:05:20,159
 So if you find that your answer is wrong or you want to fix anything, as long as it's

107
00:05:20,159 --> 00:05:23,159
 before that line, you can do it.

108
00:05:23,159 --> 00:05:24,799
 Okay?

109
00:05:24,799 --> 00:05:25,799
 Is it clear?

110
00:05:25,799 --> 00:05:27,799
 All right, answer your question.

111
00:05:27,799 --> 00:05:28,799
 Okay, good.

112
00:05:28,799 --> 00:05:30,799
 Any other questions?

113
00:05:30,799 --> 00:05:34,719
 Okay, so I assume it's clear now, right?

114
00:05:34,719 --> 00:05:40,640
 Because Puffin asked me to mention this clearly, because both of us keep receiving emails.

115
00:05:40,760 --> 00:05:43,360
 I just want to make sure this is clear for everyone.

116
00:05:43,360 --> 00:05:44,360
 All right?

117
00:05:44,360 --> 00:05:45,360
 Okay, good.

118
00:05:45,360 --> 00:05:50,960
 Okay, so then let's go to our lecture today.

119
00:05:50,960 --> 00:05:51,960
 Right?

120
00:05:51,960 --> 00:05:54,360
 So this is my second lecture.

121
00:05:54,360 --> 00:05:57,280
 So let me first do a recap of what we covered last week.

122
00:05:57,280 --> 00:05:59,680
 I hope you still remember what we talked about last week.

123
00:05:59,680 --> 00:06:00,680
 Right?

124
00:06:00,680 --> 00:06:06,719
 So last week, I will quote us a review, because if you have taken any digital signal processing

125
00:06:06,719 --> 00:06:10,200
 course in your undergraduate, these are pretty much not new to you.

126
00:06:10,240 --> 00:06:12,320
 You probably have already learned them.

127
00:06:12,320 --> 00:06:14,400
 But consider we have a very diverse background.

128
00:06:14,400 --> 00:06:16,159
 Students come from very diverse backgrounds.

129
00:06:16,159 --> 00:06:22,000
 It's better to kind of review that first, make sure everybody have the same kind of a

130
00:06:22,000 --> 00:06:23,000
 baseline, right?

131
00:06:23,000 --> 00:06:25,200
 Unless you're going to keep asking questions.

132
00:06:25,200 --> 00:06:30,320
 So what we covered last week is starting from this signal representation.

133
00:06:30,320 --> 00:06:31,320
 Right?

134
00:06:31,320 --> 00:06:36,159
 We learned that, well, you can represent signal both in time and frequency domain.

135
00:06:36,160 --> 00:06:41,120
 When we talk about how we can generate so-called discrete signal, right?

136
00:06:41,120 --> 00:06:43,320
 Or digital signal, we don't really differentiate the two.

137
00:06:43,320 --> 00:06:45,840
 But I think one of you asked me the question, what's the difference?

138
00:06:45,840 --> 00:06:49,080
 So for this course, we don't really differentiate the two.

139
00:06:49,080 --> 00:06:51,520
 They are just discretized, sampled.

140
00:06:51,520 --> 00:06:57,840
 But we learned the theorem of sampling, how you can sample analog signal to generate digital.

141
00:06:57,840 --> 00:06:58,840
 Right?

142
00:06:58,840 --> 00:07:00,120
 And what could be wrong?

143
00:07:00,120 --> 00:07:02,840
 What is the requirement of the sampling rate?

144
00:07:02,840 --> 00:07:03,840
 Right?

145
00:07:03,840 --> 00:07:06,080
 So what is Nyquist condition?

146
00:07:06,080 --> 00:07:07,440
 I hope you still remember.

147
00:07:07,440 --> 00:07:08,440
 Right?

148
00:07:08,440 --> 00:07:15,200
 Nyquist condition says you have to have a minimum sampling rate in order to avoid any distortion.

149
00:07:15,200 --> 00:07:16,719
 In other words, adiasing.

150
00:07:16,719 --> 00:07:17,719
 Right?

151
00:07:17,719 --> 00:07:20,120
 So I wish you could understand what is adiasing now.

152
00:07:20,120 --> 00:07:23,200
 I mean, basically here, right?

153
00:07:23,200 --> 00:07:27,799
 Basically, adiasing is the distortion we are interested in.

154
00:07:27,799 --> 00:07:29,280
 And we wish to avoid.

155
00:07:29,280 --> 00:07:30,280
 Right?

156
00:07:30,280 --> 00:07:32,719
 And this is what the Nyquist condition is talking about.

157
00:07:32,720 --> 00:07:33,720
 Right?

158
00:07:33,720 --> 00:07:38,280
 It tells you what is the minimum sampling rate that you need to avoid adiasing.

159
00:07:38,280 --> 00:07:39,280
 Right?

160
00:07:39,280 --> 00:07:40,280
 Especially.

161
00:07:40,280 --> 00:07:46,080
 And we also learned how to do the DTFT and DTFT specifically to represent signals.

162
00:07:46,080 --> 00:07:47,080
 Right?

163
00:07:47,080 --> 00:07:52,280
 We talk about why we are interested in all of these, you know, varied version of Fourier

164
00:07:52,280 --> 00:07:53,280
 transforms.

165
00:07:53,280 --> 00:07:54,280
 Right?

166
00:07:54,280 --> 00:07:59,320
 It's because we believe that frequency representation sometimes are more useful than time domain

167
00:07:59,320 --> 00:08:00,320
 representation.

168
00:08:00,320 --> 00:08:01,320
 Right?

169
00:08:01,320 --> 00:08:02,320
 We talk about frequency analysis.

170
00:08:02,320 --> 00:08:05,000
 We talk about, later we are going to talk about low pass filter, you know, high pass

171
00:08:05,000 --> 00:08:06,000
 filter.

172
00:08:06,000 --> 00:08:09,520
 I mean, when we say low and high, we are referring to frequency, not time domain.

173
00:08:09,520 --> 00:08:10,520
 Right?

174
00:08:10,520 --> 00:08:17,040
 So I hope now everybody should be familiar with at least how to use DTFT, how to use

175
00:08:17,040 --> 00:08:18,040
 DTFT.

176
00:08:18,040 --> 00:08:23,000
 So I give you a summary about the three kind of most important transforms we talk about.

177
00:08:23,000 --> 00:08:28,760
 So CFT, I didn't talk more because I believe this is covered, pretty much covered in your,

178
00:08:28,760 --> 00:08:30,960
 even before digital, like analog signal processing.

179
00:08:30,960 --> 00:08:31,960
 Right?

180
00:08:31,960 --> 00:08:32,960
 Very fundamental.

181
00:08:32,960 --> 00:08:39,280
 So, but the difference is that CFT, in other words, continuous time Fourier transform,

182
00:08:39,280 --> 00:08:40,960
 dealing with analog signal.

183
00:08:40,960 --> 00:08:41,960
 Right?

184
00:08:41,960 --> 00:08:45,960
 Which, that's why we are not focusing on this because we are focusing on digital signal.

185
00:08:45,960 --> 00:08:52,120
 And it's going to give you continuous function in both time and frequency domains.

186
00:08:52,120 --> 00:08:53,120
 Right?

187
00:08:53,120 --> 00:08:56,200
 Input, output, both of them are continuous time.

188
00:08:56,200 --> 00:08:57,200
 Right?

189
00:08:57,200 --> 00:09:00,000
 So, CFT, or you call it CTFT.

190
00:09:00,000 --> 00:09:04,480
 Then what we learned and what we started with last week is actually DTFT.

191
00:09:04,480 --> 00:09:05,480
 Right?

192
00:09:05,480 --> 00:09:10,120
 Because DTFT are specifically for discrete time signal.

193
00:09:10,120 --> 00:09:11,120
 Right?

194
00:09:11,120 --> 00:09:12,840
 It's for digital signal.

195
00:09:12,840 --> 00:09:14,160
 And that's what why it's called DT.

196
00:09:14,160 --> 00:09:15,160
 Right?

197
00:09:15,160 --> 00:09:17,640
 DT stands for discrete time.

198
00:09:17,640 --> 00:09:22,720
 And it's going to take discrete signal in time domain.

199
00:09:22,720 --> 00:09:26,600
 But it still gives you continuous function in the frequency domain.

200
00:09:26,600 --> 00:09:27,600
 Right?

201
00:09:27,600 --> 00:09:28,600
 This is DTFT.

202
00:09:28,600 --> 00:09:34,120
 So, DTFT output, the transform domain is going to steal continuous time.

203
00:09:34,120 --> 00:09:35,280
 Right?

204
00:09:35,280 --> 00:09:40,080
 That's why you will need to do integration when you want to do inverse transform.

205
00:09:40,080 --> 00:09:41,080
 Right?

206
00:09:41,080 --> 00:09:44,200
 So, but then definitely we don't want to store continuous number.

207
00:09:44,200 --> 00:09:45,200
 Right?

208
00:09:45,200 --> 00:09:47,520
 As the spectrum because the computer cannot store continuous number.

209
00:09:47,520 --> 00:09:54,120
 That's why what we really use most frequently for digital device is DTFT.

210
00:09:54,120 --> 00:10:01,000
 Because DTFT is going to deal with the discrete signal in both time domain and frequency domain.

211
00:10:01,000 --> 00:10:02,000
 Right?

212
00:10:02,000 --> 00:10:03,000
 So, you can see the change.

213
00:10:03,000 --> 00:10:06,880
 We are gradually moving from CT to DT.

214
00:10:06,880 --> 00:10:07,880
 Right?

215
00:10:07,880 --> 00:10:09,480
 But you need to know what's the difference.

216
00:10:09,480 --> 00:10:15,960
 How one can gradually evolve coming from the original CTFT, original or progressively

217
00:10:15,960 --> 00:10:19,600
 to the DTFT that we want to really use in practice.

218
00:10:19,600 --> 00:10:20,600
 All right?

219
00:10:20,600 --> 00:10:26,040
 So, use this as a checkpoint for you to organize all of the knowledge we learned.

220
00:10:26,040 --> 00:10:31,200
 And basically you need to have this understanding on the time frequency representation of the

221
00:10:31,200 --> 00:10:32,200
 signal.

222
00:10:32,200 --> 00:10:33,200
 That's what we focused on.

223
00:10:33,200 --> 00:10:34,200
 Right?

224
00:10:34,200 --> 00:10:35,200
 DTFT.

225
00:10:35,200 --> 00:10:39,560
 And actually the two things we are really using is DTFT and FTFT in digital device.

226
00:10:39,560 --> 00:10:40,560
 Right?

227
00:10:40,560 --> 00:10:43,760
 So, one last thing is that we talk about frequency.

228
00:10:43,760 --> 00:10:45,080
 And there are two frequencies.

229
00:10:45,080 --> 00:10:46,080
 Okay?

230
00:10:46,080 --> 00:10:50,040
 First you can represent frequency in terms of either hertz or radian.

231
00:10:50,040 --> 00:10:51,040
 Right?

232
00:10:51,040 --> 00:10:52,680
 That's why you use F and omega correspondingly.

233
00:10:52,680 --> 00:10:56,400
 I mean you can also convert them by type multiply two pi.

234
00:10:56,400 --> 00:10:57,400
 Right?

235
00:10:57,400 --> 00:10:58,400
 Just the different units.

236
00:10:58,400 --> 00:11:04,720
 And we also say that one can use your sampling frequency to normalize them.

237
00:11:04,720 --> 00:11:05,720
 Right?

238
00:11:05,720 --> 00:11:09,280
 So, you can convert them in the period, I mean in the duration of one.

239
00:11:09,280 --> 00:11:13,760
 In other words, you can normalize them so that they don't really vary in terms of scale.

240
00:11:13,760 --> 00:11:14,760
 Right?

241
00:11:14,760 --> 00:11:18,080
 So, you have to be very careful whether we're talking about normalized frequency or unnormalized

242
00:11:18,080 --> 00:11:19,080
 frequency.

243
00:11:19,080 --> 00:11:23,120
 But the difference is just dividing the sampling frequency.

244
00:11:23,120 --> 00:11:24,120
 Right?

245
00:11:24,120 --> 00:11:26,080
 But in the question, they can give you either.

246
00:11:26,080 --> 00:11:27,080
 Right?

247
00:11:27,080 --> 00:11:28,080
 They can give you normalized.

248
00:11:28,080 --> 00:11:30,080
 They can also give you unnormalized version.

249
00:11:30,080 --> 00:11:31,080
 All right?

250
00:11:31,080 --> 00:11:34,640
 So, these are basically the important things we learned last week.

251
00:11:34,640 --> 00:11:39,240
 So last week, if you remember, right, we ended with the introduction of DTFT.

252
00:11:39,240 --> 00:11:40,240
 Right?

253
00:11:40,240 --> 00:11:41,240
 This is a portfolio transform.

254
00:11:41,240 --> 00:11:42,880
 So, I give you a quick recap.

255
00:11:42,880 --> 00:11:43,880
 Right?

256
00:11:43,880 --> 00:11:46,720
 So, basically, you need to know these two equations.

257
00:11:46,720 --> 00:11:48,720
 One is the forward transform, right?

258
00:11:48,720 --> 00:11:51,600
 Going from time domain to frequency domain.

259
00:11:51,600 --> 00:11:58,439
 And sometimes we also call it an analysis transform because we're analyzing the signal

260
00:11:58,439 --> 00:12:00,040
 to get the frequency components.

261
00:12:00,040 --> 00:12:06,600
 So, you can consider the frequency spectrum as an analysis of the time domain signal.

262
00:12:06,600 --> 00:12:07,600
 Right?

263
00:12:07,600 --> 00:12:10,360
 You want to see whether this kind of very strong in low frequency or very strong in high frequency.

264
00:12:10,360 --> 00:12:11,360
 It's an analysis.

265
00:12:11,360 --> 00:12:12,360
 Okay?

266
00:12:12,360 --> 00:12:14,800
 So, but pay attention to that.

267
00:12:14,800 --> 00:12:20,280
 DTFT always is dealing with some finite number of points.

268
00:12:20,280 --> 00:12:21,280
 Okay?

269
00:12:21,280 --> 00:12:22,280
 You cannot have infinitely.

270
00:12:22,280 --> 00:12:23,280
 Okay?

271
00:12:23,280 --> 00:12:26,280
 You can in theory, but these are going to be periodic.

272
00:12:26,280 --> 00:12:27,280
 Right?

273
00:12:27,280 --> 00:12:30,560
 But most likely, we're talking about endpoint DFT.

274
00:12:30,560 --> 00:12:35,600
 Remember, we say that you can actually use a matrix, square matrix to represent a DFT.

275
00:12:35,600 --> 00:12:40,080
 And the size of the matrix is determined by how many points you have.

276
00:12:40,520 --> 00:12:43,360
 For endpoints, DFT, you have to have an end-by-end matrix.

277
00:12:43,360 --> 00:12:44,360
 All right?

278
00:12:44,360 --> 00:12:45,360
 So, it's always endpoint.

279
00:12:45,360 --> 00:12:51,960
 And the number of time samples, in other words, the length of your time domain signal,

280
00:12:51,960 --> 00:12:56,360
 it's always equal to the number of samples in frequency domain.

281
00:12:56,360 --> 00:12:58,920
 So, no matter how you do this transform, right?

282
00:12:58,920 --> 00:13:03,880
 Inverse transform, forward transform, it doesn't change the number of points you have.

283
00:13:03,880 --> 00:13:04,880
 Okay?

284
00:13:04,880 --> 00:13:07,200
 So, that's why your, if you remember, right?

285
00:13:07,200 --> 00:13:11,880
 So, if DFT matrix is always a square matrix, because dimension is no change.

286
00:13:11,880 --> 00:13:12,880
 It's still end dimension.

287
00:13:12,880 --> 00:13:13,880
 Right?

288
00:13:13,880 --> 00:13:16,000
 So, this is the second point.

289
00:13:16,000 --> 00:13:23,800
 And you know, you can also do this end samples using DFT, but they have to be within a DFT

290
00:13:23,800 --> 00:13:24,800
 window.

291
00:13:24,800 --> 00:13:28,000
 In other words, you can have a longer, you know, longer size of signal.

292
00:13:28,000 --> 00:13:31,360
 But when you do the DFT, you have to do some kind of windowing or truncation to make them

293
00:13:31,360 --> 00:13:32,360
 within.

294
00:13:32,360 --> 00:13:33,360
 Right?

295
00:13:33,360 --> 00:13:37,280
 So, a common way people dealing with maybe a relatively longer signal.

296
00:13:37,280 --> 00:13:38,280
 Right?

297
00:13:38,280 --> 00:13:40,040
 So, when you do inverse DFT, right?

298
00:13:40,040 --> 00:13:41,880
 Again, it's going to be endpoint.

299
00:13:41,880 --> 00:13:42,880
 Right?

300
00:13:42,880 --> 00:13:48,800
 But if you compare the form of the forward and inverse, you realize that there are two

301
00:13:48,800 --> 00:13:49,800
 difference.

302
00:13:49,800 --> 00:13:50,800
 One is the base.

303
00:13:50,800 --> 00:13:51,800
 Right?

304
00:13:51,800 --> 00:13:55,640
 Forward transform, you have to do minus sign in the exponential.

305
00:13:55,640 --> 00:13:57,320
 Inverse transform, there's no minus sign.

306
00:13:57,320 --> 00:14:01,040
 That's the, basically, the base function is actually the opposite.

307
00:14:01,040 --> 00:14:02,040
 Right?

308
00:14:02,040 --> 00:14:03,920
 And another thing is the scaling.

309
00:14:03,920 --> 00:14:09,599
 So, for our subject, we use the version that you don't scale in the forward transform and

310
00:14:09,599 --> 00:14:15,079
 you scale it back by multiplying of 1 over n to scale it to original.

311
00:14:15,079 --> 00:14:16,079
 Right?

312
00:14:16,079 --> 00:14:21,079
 So, this scaling factor 1 over n, it's just to ensure that you can get back to the original

313
00:14:21,079 --> 00:14:23,760
 signal without ending scaling ambiguity.

314
00:14:23,760 --> 00:14:24,760
 Okay?

315
00:14:24,760 --> 00:14:29,360
 But you may find the so-called DFT in other contexts.

316
00:14:29,360 --> 00:14:34,120
 They do 1 over n square root, square root n here and also here 1 over square root of

317
00:14:34,120 --> 00:14:35,600
 n, which is totally fine.

318
00:14:35,600 --> 00:14:38,040
 It's the definition of where you scale it.

319
00:14:38,040 --> 00:14:39,040
 Right?

320
00:14:39,040 --> 00:14:42,840
 But you have to scale this n by getting rid of the scale and ambiguity.

321
00:14:42,840 --> 00:14:47,200
 So don't be surprised if you see some other DFT which have different scaling factor.

322
00:14:47,200 --> 00:14:48,200
 Right?

323
00:14:48,200 --> 00:14:49,200
 But the form is always the same.

324
00:14:49,200 --> 00:14:50,200
 Right?

325
00:14:50,200 --> 00:14:51,200
 The base is always the same.

326
00:14:51,200 --> 00:14:52,200
 Okay?

327
00:14:52,200 --> 00:14:55,520
 So, I think just give a recap before introducing FFT.

328
00:14:55,520 --> 00:14:56,520
 Okay?

329
00:14:56,800 --> 00:15:00,520
 Any question about DFT before I move on to FFT?

330
00:15:00,520 --> 00:15:04,520
 You can ask me now.

331
00:15:04,520 --> 00:15:06,520
 Is it clear for everyone?

332
00:15:06,520 --> 00:15:08,520
 Okay, good.

333
00:15:08,520 --> 00:15:10,520
 Now, okay, I give you another illustration.

334
00:15:10,520 --> 00:15:11,520
 Right?

335
00:15:11,520 --> 00:15:12,520
 So, I also get some questions.

336
00:15:12,520 --> 00:15:14,880
 It says, okay, you have taught about DFT.

337
00:15:14,880 --> 00:15:16,680
 You also show a figure, right?

338
00:15:16,680 --> 00:15:22,760
 If you remember, there was a figure explaining like how you can go from CFT to DFT to DFT.

339
00:15:22,760 --> 00:15:23,760
 Right?

340
00:15:23,760 --> 00:15:30,240
 So, some of you are asking like how exactly are the DFT spectrum related to DFT?

341
00:15:30,240 --> 00:15:31,240
 Right?

342
00:15:31,240 --> 00:15:34,760
 You can consider DFT as a sampled version.

343
00:15:34,760 --> 00:15:37,600
 I'm talking about spectrum, not time domain, right?

344
00:15:37,600 --> 00:15:38,680
 But frequency spectrum.

345
00:15:38,680 --> 00:15:43,680
 You can consider DFT spectrum is a sampled version of DFT spectrum.

346
00:15:43,680 --> 00:15:44,680
 Right?

347
00:15:44,680 --> 00:15:45,680
 So, here's one example.

348
00:15:45,680 --> 00:15:50,160
 Consider this is your original digital signal, time domain, right?

349
00:15:50,160 --> 00:15:51,880
 Original digital signal.

350
00:15:51,880 --> 00:15:58,040
 If you do directly doing the DFT, remember DFT give you a continuous spectrum, right?

351
00:15:58,040 --> 00:15:59,480
 Not discrete, but continuous spectrum.

352
00:15:59,480 --> 00:16:03,080
 So, this will be your DFT spectrum, right?

353
00:16:03,080 --> 00:16:08,040
 Continuous and also, some of you may observe that this is actually a periodic function.

354
00:16:08,040 --> 00:16:13,200
 In other words, the function is going to repeat itself in the 2 pi period.

355
00:16:13,200 --> 00:16:14,200
 Okay?

356
00:16:14,200 --> 00:16:18,440
 You can derive this because it's actually a theorem says that if you have a finite

357
00:16:18,440 --> 00:16:25,280
 length signal in time domain, you do DFT, the spectrum is always periodic.

358
00:16:25,280 --> 00:16:26,560
 And this can be proved, right?

359
00:16:26,560 --> 00:16:29,240
 You can try yourself, but it's always like that.

360
00:16:29,240 --> 00:16:30,240
 Okay?

361
00:16:30,240 --> 00:16:33,440
 And then, if you compare to the DFT spectrum, right?

362
00:16:33,440 --> 00:16:35,400
 This is your DFT spectrum.

363
00:16:35,400 --> 00:16:40,760
 You realize that, okay, in principle, we should only have, you know, 8 samples, right?

364
00:16:40,760 --> 00:16:44,560
 But you can actually do a periodic expanding of the signal.

365
00:16:44,560 --> 00:16:50,560
 And you find that the points you have in the DFT spectrum will be the sampled version

366
00:16:50,560 --> 00:16:52,040
 of your DTFT.

367
00:16:52,040 --> 00:16:53,040
 Okay?

368
00:16:53,040 --> 00:16:56,400
 It only depends on how many samples you have, right?

369
00:16:56,400 --> 00:17:01,880
 But it's going to be a sampled version in a uniform spacing of your DTFT spectrum, right?

370
00:17:01,880 --> 00:17:06,159
 So if you draw an envelope of these functions, you are going to get the same spectrum as

371
00:17:06,159 --> 00:17:09,159
 your DTFT, right?

372
00:17:09,159 --> 00:17:13,520
 And this DFT, actually, you can also make it periodic, right?

373
00:17:13,520 --> 00:17:18,000
 In other words, you can actually plus a 2 pi, but normally we are only interested of

374
00:17:18,000 --> 00:17:21,160
 the coefficients in the first 8 points.

375
00:17:21,160 --> 00:17:23,760
 In other words, in one period, right?

376
00:17:23,760 --> 00:17:28,119
 But mathematically, you can actually repeat it, right, by just adding another 2 pi.

377
00:17:28,119 --> 00:17:29,120
 Okay?

378
00:17:29,120 --> 00:17:32,879
 So you can consider DFT as a sampled version of DTFT.

379
00:17:32,879 --> 00:17:34,240
 All right?

380
00:17:34,240 --> 00:17:37,280
 So this illustration helps you to clarify.

381
00:17:37,280 --> 00:17:40,000
 And other things, like, I also get some email asking about this concept.

382
00:17:40,000 --> 00:17:42,320
 And I think I may have...

383
00:17:42,320 --> 00:17:44,000
 I may not explain this very clearly.

384
00:17:44,000 --> 00:17:45,560
 That's why I want to repeat again, right?

385
00:17:45,560 --> 00:17:46,560
 So resolution.

386
00:17:46,560 --> 00:17:54,160
 Remember, we say that for DFT, there is one quantity we use to describe of the spectrum.

387
00:17:54,160 --> 00:17:56,720
 We call it resolution of the DFT, right?

388
00:17:56,720 --> 00:18:03,680
 And we say that for the definition of the resolution is actually your sampling frequency

389
00:18:03,680 --> 00:18:07,680
 divided by the number of points of your DFT.

390
00:18:07,680 --> 00:18:08,680
 All right?

391
00:18:08,680 --> 00:18:11,800
 You remember that was what I explained last time, right?

392
00:18:11,800 --> 00:18:17,640
 But, okay, and also one more thing is that this FS only depends on your sampling.

393
00:18:17,640 --> 00:18:22,160
 In other words, how do you convert analog time domain signal to digital signal, right,

394
00:18:22,160 --> 00:18:23,660
 in time domain?

395
00:18:23,660 --> 00:18:25,160
 Nothing to do with your DFT.

396
00:18:25,160 --> 00:18:26,160
 Okay?

397
00:18:26,160 --> 00:18:29,200
 Nothing to do with DFT is just like how you sample that.

398
00:18:29,200 --> 00:18:32,720
 The N has nothing to do with your sampling.

399
00:18:32,720 --> 00:18:36,360
 It only depends on what DFT you are using.

400
00:18:36,360 --> 00:18:37,360
 Okay?

401
00:18:37,360 --> 00:18:38,800
 So I hope this is clear, right?

402
00:18:38,800 --> 00:18:41,800
 So that's where the two numbers come from, right?

403
00:18:41,800 --> 00:18:43,840
 One come from the sampling process.

404
00:18:43,840 --> 00:18:46,399
 One come from what DFT you are using.

405
00:18:46,399 --> 00:18:47,399
 Okay?

406
00:18:47,399 --> 00:18:48,879
 So this was what we're talking about.

407
00:18:48,879 --> 00:18:51,879
 But some people are asking, okay, how can I interpret this resolution?

408
00:18:51,879 --> 00:18:57,280
 Or another question is like, is this number the larger the better or smaller the better?

409
00:18:57,280 --> 00:18:58,280
 All right.

410
00:18:58,280 --> 00:18:59,399
 So I think that's a very good question.

411
00:18:59,399 --> 00:19:02,320
 I probably didn't get there clearly last time.

412
00:19:02,320 --> 00:19:07,320
 To answer the question, we have to talk about what is the meaning of this number, right?

413
00:19:07,320 --> 00:19:12,760
 When you divide it into FS over N, what does that mean in the spectrum?

414
00:19:12,760 --> 00:19:13,760
 Right?

415
00:19:13,760 --> 00:19:19,280
 So in fact, this number, if you look at the quantity, right, it defines how are like two

416
00:19:19,280 --> 00:19:24,080
 samples in a frequency domain apart from each other?

417
00:19:24,080 --> 00:19:25,080
 Okay?

418
00:19:25,080 --> 00:19:28,340
 So remember for DFT you will get some spikes, right?

419
00:19:28,340 --> 00:19:30,879
 Some kind of measure, but they are discretized.

420
00:19:30,880 --> 00:19:37,040
 So this number tells you how far away two bars are away from each other.

421
00:19:37,040 --> 00:19:38,040
 Okay?

422
00:19:38,040 --> 00:19:41,520
 Not in the normalized domain, but in the actual frequency domain.

423
00:19:41,520 --> 00:19:44,760
 So if I give you two bars, right, you have this spacing.

424
00:19:44,760 --> 00:19:48,400
 How does this, what does this spacing represent?

425
00:19:48,400 --> 00:19:51,200
 So this number tells you what, just like think about the image, right?

426
00:19:51,200 --> 00:19:52,600
 You have two pixels.

427
00:19:52,600 --> 00:19:54,920
 You're also interested, what does this two pixel represent?

428
00:19:54,920 --> 00:19:55,920
 Right?

429
00:19:55,920 --> 00:19:58,120
 Maybe the pixel, one pixel represents one meter.

430
00:19:58,120 --> 00:20:02,399
 Or maybe one pixel represents like I said, maybe 10 centimeter, right?

431
00:20:02,399 --> 00:20:06,360
 So if you think about this as the digital image, right?

432
00:20:06,360 --> 00:20:13,239
 Normally a high resolution image means a single pixel will present fewer, I mean smaller

433
00:20:13,239 --> 00:20:15,040
 length, right?

434
00:20:15,040 --> 00:20:19,959
 If I give you an image that a single pixel will represent, let's say, one micrometer,

435
00:20:19,959 --> 00:20:23,520
 that's probably some microscope images, which is a very high resolution image.

436
00:20:24,520 --> 00:20:29,320
 Conversely, if your image, like a single pixel, represents like 100 meters, right?

437
00:20:29,320 --> 00:20:32,320
 We're talking about a very low resolution image.

438
00:20:32,320 --> 00:20:37,800
 So you can tell that the spacing actually is inversely proportional to resolution.

439
00:20:37,800 --> 00:20:41,360
 In other words, the larger the spacing, the lower the resolution.

440
00:20:41,360 --> 00:20:42,360
 Okay?

441
00:20:42,360 --> 00:20:45,360
 I don't know whether this makes sense to you, right?

442
00:20:45,360 --> 00:20:51,400
 So similarly, this number is also the smaller the better, right?

443
00:20:51,400 --> 00:20:56,280
 If you have a smaller FS divided by N, that means you have a better resolution in your

444
00:20:56,280 --> 00:20:58,280
 DFT spectrum.

445
00:20:58,280 --> 00:20:59,780
 Okay?

446
00:20:59,780 --> 00:21:02,760
 So this basically represents the spacing.

447
00:21:02,760 --> 00:21:07,440
 So like I said, you know, having this number, right?

448
00:21:07,440 --> 00:21:14,160
 Having this resolution can represent a digital frequency by simply doing a K times FS divided

449
00:21:14,160 --> 00:21:21,360
 by N. In other words, K here means the K bar or the K spikes in your DFT spectrum.

450
00:21:22,320 --> 00:21:27,320
 Basically, if I'm talking about the fifth spikes, that means five times this spacing,

451
00:21:27,320 --> 00:21:30,320
 that's what the spikes represent in the frequency domain.

452
00:21:30,320 --> 00:21:35,320
 So if you know the spacing, if you know how many bars you can calculate, what is the frequency

453
00:21:35,320 --> 00:21:37,959
 range you were talking about.

454
00:21:37,959 --> 00:21:41,320
 So this is basically what the FS divided by N represents.

455
00:21:41,320 --> 00:21:42,320
 Okay?

456
00:21:42,320 --> 00:21:47,560
 I hope this clarifies some questions we have last time.

457
00:21:47,560 --> 00:21:49,440
 If you're still confused, you can ask me, right?

458
00:21:49,440 --> 00:21:51,360
 But this is important.

459
00:21:51,360 --> 00:21:53,919
 It could be some of the questions you see in the final exam.

460
00:21:53,919 --> 00:21:58,320
 So make sure you understand what this resolution represents.

461
00:21:58,320 --> 00:22:00,320
 And if not, you can ask me now.

462
00:22:00,320 --> 00:22:01,320
 Okay?

463
00:22:01,320 --> 00:22:02,320
 Yes?

464
00:22:02,320 --> 00:22:03,320
 So it's said again?

465
00:22:03,320 --> 00:22:16,639
 So it's said again?

466
00:22:16,639 --> 00:22:20,439
 Somebody frequency and frequency samples.

467
00:22:20,439 --> 00:22:21,439
 I see.

468
00:22:21,439 --> 00:22:22,439
 That's okay.

469
00:22:22,439 --> 00:22:32,560
 So his question is that, well, it looks like this resolution depends on two things.

470
00:22:33,320 --> 00:22:36,560
 The N is not number of samples.

471
00:22:36,560 --> 00:22:41,600
 The N is how many points you have for your DFT.

472
00:22:41,600 --> 00:22:43,800
 So N, nothing to do with sampling.

473
00:22:43,800 --> 00:22:49,919
 Like I mentioned, FS is determined fully by the sampling process.

474
00:22:49,919 --> 00:22:52,760
 The N has nothing to do with your sampling process.

475
00:22:52,760 --> 00:22:58,480
 It depends on what is your size of the transform, how many points you have for your DFT.

476
00:22:58,600 --> 00:23:00,720
 Remember, DFT, you always have to define.

477
00:23:00,720 --> 00:23:04,080
 It's eight points DFT or maybe 10 points DFT.

478
00:23:04,080 --> 00:23:05,080
 That is the N.

479
00:23:05,080 --> 00:23:06,080
 All right.

480
00:23:06,080 --> 00:23:07,080
 So back to your question.

481
00:23:07,080 --> 00:23:08,080
 You're saying that there are two numbers.

482
00:23:08,080 --> 00:23:11,960
 They decide the resolution.

483
00:23:11,960 --> 00:23:15,920
 So how can I, what number should I play to increase the resolution?

484
00:23:15,920 --> 00:23:16,920
 That's basically your question.

485
00:23:16,920 --> 00:23:19,960
 So it depends on which one you can control.

486
00:23:19,960 --> 00:23:20,960
 Okay?

487
00:23:20,960 --> 00:23:21,960
 So I'll give you one example.

488
00:23:21,960 --> 00:23:22,960
 Right?

489
00:23:22,960 --> 00:23:25,960
 So right now, I give you a sum-hold signal.

490
00:23:25,960 --> 00:23:27,440
 I give you a disc-grade signal.

491
00:23:27,560 --> 00:23:29,360
 Already disc-grade.

492
00:23:29,360 --> 00:23:34,640
 If you want to increase the resolution, can you change the FS?

493
00:23:34,640 --> 00:23:43,640
 No, because FS is, like I mentioned, FS is already determined and 100% determined by

494
00:23:43,640 --> 00:23:44,640
 the sampling.

495
00:23:44,640 --> 00:23:46,360
 Okay, what is sampling?

496
00:23:46,360 --> 00:23:50,640
 Sampling is the process converting analog signal to disc-grade signal.

497
00:23:50,640 --> 00:23:51,640
 All right.

498
00:23:51,640 --> 00:23:52,640
 That's the sampling.

499
00:23:52,640 --> 00:23:57,400
 So if I already give you a disc-grade signal, that means I already sampled the resolution.

500
00:23:57,400 --> 00:23:58,760
 I sampled for you.

501
00:23:58,760 --> 00:24:00,320
 The sampling is done.

502
00:24:00,320 --> 00:24:01,320
 Right?

503
00:24:01,320 --> 00:24:02,680
 The FS is fixed.

504
00:24:02,680 --> 00:24:04,560
 You cannot touch it.

505
00:24:04,560 --> 00:24:09,280
 So if I give you a disc-grade signal, and if you want to increase the resolution, the

506
00:24:09,280 --> 00:24:15,760
 only thing you can do is just by increasing, sorry, increasing the N. Right?

507
00:24:15,760 --> 00:24:18,080
 So this is like, you cannot control the FS, so you have no choice.

508
00:24:18,080 --> 00:24:20,000
 You can only do the Dn.

509
00:24:20,000 --> 00:24:21,640
 So you can only do the N. Right?

510
00:24:21,640 --> 00:24:27,120
 But sometimes if I give you an analog signal, I say, hey, do something and give me a DFT

511
00:24:27,120 --> 00:24:28,159
 pattern.

512
00:24:28,159 --> 00:24:29,719
 And now you have the choice.

513
00:24:29,719 --> 00:24:33,840
 You can choose to, well, I want to spend more computational resource to do a more frequent

514
00:24:33,840 --> 00:24:34,840
 sampling.

515
00:24:34,840 --> 00:24:41,560
 In other words, I'm actually increasing my, oh, sorry, I want to, oh, sorry, I want to,

516
00:24:41,560 --> 00:24:42,560
 let me see.

517
00:24:42,560 --> 00:24:46,560
 Yeah, I want to decrease my FS.

518
00:24:46,560 --> 00:24:48,919
 Oh, yeah, I want to decrease my FS.

519
00:24:48,919 --> 00:24:49,919
 So now you can choose.

520
00:24:49,919 --> 00:24:50,919
 Right?

521
00:24:50,919 --> 00:24:52,399
 You want to play with N or you want to play with FS.

522
00:24:52,399 --> 00:24:53,399
 Right?

523
00:24:53,399 --> 00:24:54,399
 So you have two choices.

524
00:24:54,399 --> 00:24:55,919
 But what it means, you have to look at the question.

525
00:24:55,920 --> 00:24:56,920
 Right?

526
00:24:56,920 --> 00:25:00,640
 If the question gives you something already fixed FS, now you have no choice.

527
00:25:00,640 --> 00:25:02,160
 You have to do N. Right?

528
00:25:02,160 --> 00:25:05,200
 But in principle, you can play with two.

529
00:25:05,200 --> 00:25:06,720
 So I think this is the answer.

530
00:25:06,720 --> 00:25:07,720
 Right?

531
00:25:07,720 --> 00:25:11,040
 So by the end of another question, you know, if I were you, I would ask, it's like, say,

532
00:25:11,040 --> 00:25:12,680
 how can I play with N?

533
00:25:12,680 --> 00:25:13,840
 Right?

534
00:25:13,840 --> 00:25:19,520
 So if I give you a discrete signal, how can I actually increase the N?

535
00:25:19,520 --> 00:25:20,520
 Exactly zero padding.

536
00:25:20,520 --> 00:25:21,520
 Right?

537
00:25:21,520 --> 00:25:22,520
 We learned this last time, zero padding.

538
00:25:22,520 --> 00:25:24,240
 So you still use that discrete signal.

539
00:25:24,240 --> 00:25:25,240
 Right?

540
00:25:25,240 --> 00:25:30,560
 So what you can do is you can actually make the signal like literally longer by adding

541
00:25:30,560 --> 00:25:31,560
 zero.

542
00:25:31,560 --> 00:25:32,560
 All right?

543
00:25:32,560 --> 00:25:34,840
 If I add zero, I didn't change the nature of the signal.

544
00:25:34,840 --> 00:25:38,400
 But I can increase my number of points of my DFT.

545
00:25:38,400 --> 00:25:39,400
 Right?

546
00:25:39,400 --> 00:25:40,880
 That's where the zero padding comes from.

547
00:25:40,880 --> 00:25:41,880
 Right?

548
00:25:41,880 --> 00:25:42,880
 Yes?

549
00:25:42,880 --> 00:26:05,680
 So your question is like, if I give you a discrete signal, right?

550
00:26:05,680 --> 00:26:06,680
 So I do zero padding.

551
00:26:06,680 --> 00:26:09,080
 Let's say I double the number of N. Right?

552
00:26:09,080 --> 00:26:10,880
 So I do DFT.

553
00:26:10,880 --> 00:26:11,880
 Then I do IDFT.

554
00:26:11,880 --> 00:26:12,880
 I get it back.

555
00:26:12,880 --> 00:26:13,880
 Right?

556
00:26:13,880 --> 00:26:15,160
 So what will I get?

557
00:26:15,160 --> 00:26:18,880
 It's going to give you a zero padding version of the signal.

558
00:26:18,880 --> 00:26:22,880
 So we don't get any information loss?

559
00:26:22,880 --> 00:26:23,880
 No, no, no.

560
00:26:23,880 --> 00:26:29,880
 But if I decrease the points of the DFT, so...

561
00:26:29,880 --> 00:26:30,880
 Oh, okay.

562
00:26:30,880 --> 00:26:31,880
 Yes?

563
00:26:31,880 --> 00:26:32,880
 Exactly.

564
00:26:32,880 --> 00:26:33,880
 Okay.

565
00:26:33,880 --> 00:26:34,880
 So that's a very good point.

566
00:26:34,880 --> 00:26:38,880
 So you are saying that, okay, she's saying that, okay, you talk about increasing N. Right?

567
00:26:38,880 --> 00:26:40,880
 But why if I decrease N?

568
00:26:40,880 --> 00:26:41,880
 Okay.

569
00:26:41,880 --> 00:26:44,880
 Now the question is like, how exactly do you want to decrease the N?

570
00:26:44,880 --> 00:26:45,880
 Right?

571
00:26:45,880 --> 00:26:46,880
 You have several choices.

572
00:26:46,880 --> 00:26:47,880
 One choice is that I can do sub-sumpointing.

573
00:26:47,880 --> 00:26:48,880
 Right?

574
00:26:48,880 --> 00:26:49,880
 I can...

575
00:26:49,880 --> 00:26:52,480
 Let's say I pick one point from every two points.

576
00:26:52,480 --> 00:26:54,680
 So now you are doing another sumpointing.

577
00:26:54,680 --> 00:26:55,680
 Right?

578
00:26:55,680 --> 00:26:56,680
 Later on, we're going to learn, maybe not this week.

579
00:26:56,680 --> 00:26:59,400
 Maybe next week, we're going to learn multirate processing.

580
00:26:59,400 --> 00:27:03,120
 So this is exactly what we mean by multirate processing.

581
00:27:03,120 --> 00:27:07,400
 You further sample the signal such that I'm going to decrease the rate.

582
00:27:07,400 --> 00:27:10,640
 So this process is going to lose information, right?

583
00:27:10,640 --> 00:27:12,920
 Because you only keep half of the signal.

584
00:27:12,920 --> 00:27:14,420
 So yes, you cannot get it back.

585
00:27:14,420 --> 00:27:21,520
 But what I want to say is that DFT itself, it's a lossless process.

586
00:27:21,520 --> 00:27:24,640
 But sub-sumpointing, yes, it's a lossy process.

587
00:27:24,640 --> 00:27:26,120
 I hope you can differentiate the two.

588
00:27:26,120 --> 00:27:27,120
 Right?

589
00:27:27,120 --> 00:27:29,400
 So if I give you a signal, you don't touch the signal.

590
00:27:29,400 --> 00:27:31,200
 You just do DFT.

591
00:27:31,200 --> 00:27:32,560
 You won't lose anything.

592
00:27:32,560 --> 00:27:34,520
 The DFT is just changing the domain.

593
00:27:34,520 --> 00:27:36,320
 You won't get anything lost.

594
00:27:36,320 --> 00:27:37,840
 And you can always get it back.

595
00:27:37,840 --> 00:27:42,000
 Because any DFT followed by the IDFT, you always can get back to original signal.

596
00:27:42,000 --> 00:27:43,000
 Right?

597
00:27:43,000 --> 00:27:44,000
 No loss.

598
00:27:44,000 --> 00:27:51,520
 But if you do any kind of truncation, sub-sumpointing, which you are going to destroy the signal

599
00:27:51,520 --> 00:27:54,040
 itself, that process introduce distortion.

600
00:27:54,040 --> 00:27:55,040
 OK?

601
00:27:55,040 --> 00:27:56,040
 That will give you some lossy.

602
00:27:56,040 --> 00:27:58,439
 But the lossy part doesn't come from the DFT.

603
00:27:58,439 --> 00:27:59,439
 All right?

604
00:27:59,439 --> 00:28:00,800
 So I hope this explains.

605
00:28:00,800 --> 00:28:02,240
 OK, good point.

606
00:28:02,240 --> 00:28:04,720
 But one thing I can ensure you is zero padding is always safe.

607
00:28:04,920 --> 00:28:06,640
 You do zero padding, you got nothing to lose.

608
00:28:06,640 --> 00:28:08,320
 You only increase the resolution.

609
00:28:08,320 --> 00:28:10,320
 And you can always get it back.

610
00:28:10,320 --> 00:28:11,320
 OK?

611
00:28:11,320 --> 00:28:12,320
 All right.

612
00:28:12,320 --> 00:28:13,320
 Good question.

613
00:28:13,320 --> 00:28:15,640
 Any other question you want to ask?

614
00:28:15,640 --> 00:28:20,360
 So my advice is that when you look, I mean, for example, if you go to exam, or maybe even

615
00:28:20,360 --> 00:28:22,920
 homework, I have given you some question about the resolution.

616
00:28:22,920 --> 00:28:23,920
 Right?

617
00:28:23,920 --> 00:28:25,840
 First, understand how do you compute the resolution?

618
00:28:25,840 --> 00:28:27,640
 What determines the resolution?

619
00:28:27,640 --> 00:28:30,760
 The other thing is if you want to change the resolution, what can you do?

620
00:28:30,760 --> 00:28:31,760
 Right?

621
00:28:31,760 --> 00:28:33,280
 It's not always totally free.

622
00:28:33,280 --> 00:28:35,200
 There's always some restriction.

623
00:28:35,200 --> 00:28:38,560
 But make sure you know what can be changed and what cannot.

624
00:28:38,560 --> 00:28:39,560
 Right?

625
00:28:39,560 --> 00:28:40,560
 This is very important.

626
00:28:40,560 --> 00:28:42,440
 And I already show you one example.

627
00:28:42,440 --> 00:28:43,440
 Right?

628
00:28:43,440 --> 00:28:47,560
 So discrete signal, pretty much nothing you can do on the sampling process is already

629
00:28:47,560 --> 00:28:48,560
 sampled.

630
00:28:48,560 --> 00:28:49,560
 Right?

631
00:28:49,560 --> 00:28:50,560
 OK?

632
00:28:50,560 --> 00:28:52,560
 Any other questions before I move on?

633
00:28:52,560 --> 00:28:54,760
 OK, good.

634
00:28:54,760 --> 00:28:55,760
 So this is the resolution.

635
00:28:55,760 --> 00:28:59,600
 So basically the conclusion is that the smaller the better.

636
00:28:59,600 --> 00:29:00,600
 Right?

637
00:29:00,600 --> 00:29:05,560
 So if I increase this number to get a better resolution, then of course the wider the spacing,

638
00:29:05,560 --> 00:29:06,560
 the poorer the resolution.

639
00:29:06,560 --> 00:29:09,760
 In other words, when I say wider the spacing means I'm increasing this one.

640
00:29:09,760 --> 00:29:10,760
 Right?

641
00:29:10,760 --> 00:29:12,959
 I mean, increasing this quantity, I will get a better, poorer resolution.

642
00:29:12,959 --> 00:29:15,159
 Just like when you do discrete images.

643
00:29:15,159 --> 00:29:16,159
 It's the same thing.

644
00:29:16,159 --> 00:29:17,159
 Right?

645
00:29:17,159 --> 00:29:18,159
 So, OK.

646
00:29:18,159 --> 00:29:23,360
 I also get another question that says, well, you see that you can increase the resolution.

647
00:29:23,360 --> 00:29:27,520
 But what is the sufficient resolution I should expect?

648
00:29:27,520 --> 00:29:28,520
 Right?

649
00:29:28,520 --> 00:29:30,760
 In other words, I can keep increasing this n.

650
00:29:30,760 --> 00:29:31,760
 I can keep zero padding.

651
00:29:31,760 --> 00:29:36,680
 I can make it better and better, more, higher resolution.

652
00:29:36,680 --> 00:29:39,840
 But how can I know this resolution is good enough?

653
00:29:39,840 --> 00:29:40,840
 Right?

654
00:29:40,840 --> 00:29:43,240
 Is there a number that, something like a NICRIS rate?

655
00:29:43,240 --> 00:29:48,240
 Is there a number I have to ensure to have sufficient resolution?

656
00:29:48,240 --> 00:29:49,240
 All right.

657
00:29:49,240 --> 00:29:53,680
 I mean, the simple answer to that is I don't have a clear answer.

658
00:29:53,680 --> 00:29:56,680
 There's nothing like, say, sufficient resolution.

659
00:29:56,680 --> 00:29:57,680
 Right?

660
00:29:57,680 --> 00:29:59,880
 So, let me show you one example.

661
00:29:59,880 --> 00:30:06,000
 Kind of talk about how the resolution makes a difference in the image, sorry, in the

662
00:30:06,000 --> 00:30:07,000
 signal representation.

663
00:30:07,000 --> 00:30:08,000
 Right?

664
00:30:08,000 --> 00:30:10,200
 So, you can consider this example.

665
00:30:10,200 --> 00:30:13,680
 Originally, right, if this is your, OK, we started from analog signal.

666
00:30:13,680 --> 00:30:14,680
 Right?

667
00:30:14,680 --> 00:30:16,200
 Analog signal means it's before sampling.

668
00:30:16,200 --> 00:30:19,640
 So, before sampling, we're talking about a bi-level signal.

669
00:30:19,640 --> 00:30:24,440
 In other words, the signal will be kind of oscillating between 1 and minus 1.

670
00:30:24,440 --> 00:30:25,440
 Right?

671
00:30:25,440 --> 00:30:26,440
 In the period of two seconds.

672
00:30:26,440 --> 00:30:30,360
 So, in other words, the frequency itself is actually 0.5.

673
00:30:30,360 --> 00:30:31,360
 Right?

674
00:30:31,360 --> 00:30:34,720
 I mean, this is actually the maximum frequency of the signal.

675
00:30:34,720 --> 00:30:40,760
 So, the spectrum, if you do a, let me see.

676
00:30:40,760 --> 00:30:43,200
 So this is your original signal.

677
00:30:43,200 --> 00:30:44,200
 Right?

678
00:30:44,200 --> 00:30:49,320
 So, the spectrum should clearly define the spectrum of spikes.

679
00:30:49,320 --> 00:30:50,320
 Right?

680
00:30:50,320 --> 00:30:55,640
 So, basically, what I wish to get is the, in the spectrum that can clearly show the

681
00:30:55,640 --> 00:30:56,640
 spikes.

682
00:30:56,640 --> 00:30:57,640
 Right?

683
00:30:57,640 --> 00:31:03,280
 So, I can, now I can choose to represent this using a DFT.

684
00:31:03,280 --> 00:31:04,280
 Right?

685
00:31:04,280 --> 00:31:09,360
 So, but I can do the DFT in the low-resolutional way, or I can do the DFT in the high-resolutional

686
00:31:09,360 --> 00:31:10,360
 way.

687
00:31:10,360 --> 00:31:11,360
 Right?

688
00:31:11,360 --> 00:31:12,880
 Depends on how many, you know, ends you are going to use.

689
00:31:12,880 --> 00:31:13,880
 Right?

690
00:31:13,880 --> 00:31:18,200
 So, now, this is actually so called high-resolutional DFT.

691
00:31:18,200 --> 00:31:23,920
 And normally we wish to see this pattern because the spectrum like this can actually

692
00:31:23,920 --> 00:31:27,720
 show, wait, wait, sorry, I think this is wrong.

693
00:31:27,720 --> 00:31:28,720
 Okay.

694
00:31:28,720 --> 00:31:32,680
 Wait, wait, wait, DFT is, oh, I think what they're talking about is that they want to

695
00:31:32,680 --> 00:31:37,800
 have sufficient DFT such that when they get it back, right, they show clearly the spikes.

696
00:31:37,800 --> 00:31:42,360
 So, basically, they want to see the spikes such that the frequency is very clear that

697
00:31:42,360 --> 00:31:46,120
 one of the so-called harmonics of the signal.

698
00:31:46,120 --> 00:31:47,120
 Right?

699
00:31:47,120 --> 00:31:48,120
 Because this is a square wave.

700
00:31:48,120 --> 00:31:51,320
 So, some of you may know that for a square wave, you won't have like something like a

701
00:31:51,320 --> 00:31:53,320
 signal, so it's only like two spikes.

702
00:31:53,320 --> 00:31:54,720
 You have multiple spikes.

703
00:31:54,720 --> 00:31:58,159
 And some of the spikes are just multiple of the base harmonics.

704
00:31:58,159 --> 00:31:59,159
 Right?

705
00:31:59,159 --> 00:32:03,439
 But this is something like we wish to see because every spikes at the frequency actually clearly

706
00:32:03,439 --> 00:32:05,080
 indicates the frequency.

707
00:32:05,080 --> 00:32:10,840
 But if you have like a low resolution and then you want to get it back from the DFT to DFT,

708
00:32:10,840 --> 00:32:14,439
 you will have something like a not very sharp spikes, right, like this.

709
00:32:14,439 --> 00:32:19,760
 So, this is a case that you cannot resolve what exactly is the frequency of those spikes

710
00:32:19,760 --> 00:32:24,600
 due to the fact that when you do DFT, you don't have sufficient spacing, right?

711
00:32:24,600 --> 00:32:29,840
 I mean, you don't have like a sufficient small spacing to describe what exactly is the spikes.

712
00:32:29,840 --> 00:32:35,120
 So, it's always about when you store that and later when you restore that from the digital

713
00:32:35,120 --> 00:32:40,640
 domain back to the analog domain, can you still resolve those specific spikes?

714
00:32:40,640 --> 00:32:46,120
 If yes, that means your DFT has sufficient, you know, resolution.

715
00:32:46,120 --> 00:32:50,760
 If you get something like this, it means that you probably need to increase your resolution

716
00:32:50,760 --> 00:32:54,679
 such that those spikes can be further resolved, right?

717
00:32:54,679 --> 00:32:56,199
 But what exactly is the frequency, right?

718
00:32:56,199 --> 00:32:59,159
 It's a really hard, the resolution is really hard to tell.

719
00:32:59,159 --> 00:33:00,159
 Depends on the signals.

720
00:33:00,159 --> 00:33:04,120
 It also depends on your, I mean, the waveform of the signal, right?

721
00:33:04,120 --> 00:33:08,439
 But I can, I mean, here's one example to see that if you don't have sufficient resolution

722
00:33:08,439 --> 00:33:12,800
 and when you get it back to the analog domain, what could be wrong, right?

723
00:33:12,800 --> 00:33:17,600
 You will have something like this, like, you know, not very sharp spikes, but something

724
00:33:17,600 --> 00:33:21,200
 smooth which you cannot tell exactly where the harmonics are.

725
00:33:21,200 --> 00:33:24,720
 So, this is just one example to visualize, right?

726
00:33:24,720 --> 00:33:28,600
 The consequence of having low resolution, right?

727
00:33:28,600 --> 00:33:29,600
 Okay.

728
00:33:29,600 --> 00:33:33,520
 Okay, so actually what we haven't talked about last time, if you remember, towards the end

729
00:33:33,520 --> 00:33:37,600
 of the lecture, I say, well, there's something important called the fast Fourier transform,

730
00:33:37,600 --> 00:33:38,600
 right?

731
00:33:38,600 --> 00:33:42,840
 One of the most important, one of the most important invention in the signal processing

732
00:33:42,840 --> 00:33:48,879
 community last century is because, well, DFT is, you know, theoretically simple, right?

733
00:33:48,879 --> 00:33:54,240
 Remember, we have just this one line equation to describe the DFT, right?

734
00:33:54,240 --> 00:33:59,120
 But it's not really efficient enough for computation, right?

735
00:33:59,120 --> 00:34:04,320
 Because if, I hope you still remember, like, when you do DFT, you are doing a matrix multiplied

736
00:34:04,320 --> 00:34:06,080
 by a vector, right?

737
00:34:06,080 --> 00:34:10,679
 So for those of you who know a linear algebra, you know that if you have an n by n matrix

738
00:34:10,679 --> 00:34:17,520
 multiplied by an n less vector, you have to do n square, number of multiplications.

739
00:34:17,520 --> 00:34:21,120
 You have to do a row multiplier column, another row multiplier column, so in total you have

740
00:34:21,120 --> 00:34:23,199
 to do n square, right?

741
00:34:23,199 --> 00:34:27,199
 So n square is not really a very good complexity, right?

742
00:34:27,199 --> 00:34:34,440
 So what FFT is trying to do is that they give you the same result as DFT, okay?

743
00:34:34,440 --> 00:34:39,480
 No approximation, it's the same result, but it's going to save you some computation from

744
00:34:39,480 --> 00:34:42,280
 n square to n log n, right?

745
00:34:42,280 --> 00:34:45,280
 So this is why FFT is amazing because you got nothing to lose.

746
00:34:45,280 --> 00:34:50,240
 You don't lose anything, but you gain the computational advantage, right?

747
00:34:50,240 --> 00:34:55,720
 That's why for most of the device you can think about, which have to do DFT, they are

748
00:34:55,720 --> 00:34:58,440
 always doing FFT because it's a free lunch.

749
00:34:58,440 --> 00:35:01,520
 You save the computation, and there's no compromise.

750
00:35:01,520 --> 00:35:02,520
 It's the same result.

751
00:35:03,520 --> 00:35:09,240
 Okay, then of course there are many people proposing algorithm to speed up the frequency,

752
00:35:09,240 --> 00:35:12,280
 a Fourier transform, right?

753
00:35:12,280 --> 00:35:13,280
 So there are many.

754
00:35:13,280 --> 00:35:14,880
 We're going to learn one of them.

755
00:35:14,880 --> 00:35:19,960
 We don't have to learn all, but one of them, which is, I would say relatively easier to

756
00:35:19,960 --> 00:35:26,080
 understand, and also I will try to explain where the advantage come from, right?

757
00:35:26,080 --> 00:35:28,400
 Why we can save this computational resource.

758
00:35:28,400 --> 00:35:32,280
 So it's actually called RADX2 decimation method, okay?

759
00:35:32,280 --> 00:35:35,120
 So later on you can tell why there's a two, right?

760
00:35:35,120 --> 00:35:36,840
 Why is it actually RADX2 decimation?

761
00:35:36,840 --> 00:35:44,080
 Because it's always divide into two and solve everyone separately and merge, but they keep

762
00:35:44,080 --> 00:35:46,200
 dividing, right?

763
00:35:46,200 --> 00:35:52,680
 So basically all of these methods follow the divide and conquer principle.

764
00:35:52,680 --> 00:35:54,360
 So you have a complicated problem.

765
00:35:54,360 --> 00:35:55,760
 You cannot solve that directly.

766
00:35:55,760 --> 00:36:00,360
 You divide it into multiple simpler problems, and you solve each of them, right?

767
00:36:00,360 --> 00:36:02,640
 This is basically what divide and conquer means.

768
00:36:02,640 --> 00:36:09,520
 Okay, so the fundamental, right, I can mention, is to divide the, let's say endpoints, where

769
00:36:09,520 --> 00:36:11,320
 you have a signal of endpoints.

770
00:36:11,320 --> 00:36:14,600
 I can directly do endpoint DFT, but I don't want to do it.

771
00:36:14,600 --> 00:36:15,960
 That's too expensive.

772
00:36:15,960 --> 00:36:21,560
 So the idea here is to divide the endpoint into two and keep dividing that, okay?

773
00:36:21,560 --> 00:36:23,200
 Until you have a single point.

774
00:36:23,200 --> 00:36:24,200
 Okay, why?

775
00:36:24,319 --> 00:36:28,399
 Single point, I don't know how many of you realize that, but a single point signal, if

776
00:36:28,399 --> 00:36:31,839
 you do DFT, it's going to be itself.

777
00:36:31,839 --> 00:36:33,919
 I'm talking about a single point signal.

778
00:36:33,919 --> 00:36:37,759
 If you do DFT, it's going to be itself, no change.

779
00:36:37,759 --> 00:36:43,000
 All right, so basically the principle is to keep dividing the signal into two, such that

780
00:36:43,000 --> 00:36:45,919
 we're going to end up with a single point.

781
00:36:45,919 --> 00:36:51,799
 So to do so, we have to assume that the signal will have the length equal to two to power

782
00:36:51,800 --> 00:36:56,960
 of something, because only then you can keep dividing by two, right, to reach the single

783
00:36:56,960 --> 00:36:57,960
 point.

784
00:36:57,960 --> 00:37:03,680
 Some of you may ask me, hey, what happens if it's not equal to the power of something?

785
00:37:03,680 --> 00:37:04,680
 You do zero padding.

786
00:37:04,680 --> 00:37:08,360
 You do zero padding to make it to the power of something, right?

787
00:37:08,360 --> 00:37:09,920
 So this is actually the assumption.

788
00:37:09,920 --> 00:37:16,240
 We assume that we are dealing with a signal, ways the length equal to two to power of something,

789
00:37:16,240 --> 00:37:21,760
 like two, four, eight, 16, 32, 64, 128, right, these numbers.

790
00:37:21,760 --> 00:37:27,080
 And then we want to keep dividing that from n to n divided by two to n divided by four

791
00:37:27,080 --> 00:37:28,360
 and divided by eight, right?

792
00:37:28,360 --> 00:37:30,280
 So imagine this is the original signal.

793
00:37:30,280 --> 00:37:34,560
 You want to divide that into two, and then for every signal, every section you also divided

794
00:37:34,560 --> 00:37:35,960
 by two and then divide it, right?

795
00:37:35,960 --> 00:37:39,280
 So kind of dividing into every single piece, okay?

796
00:37:39,280 --> 00:37:44,960
 So why we're going to do this is because we believe that by doing so, the processing time

797
00:37:44,960 --> 00:37:49,720
 for every small piece of the signal will be very cheap, okay?

798
00:37:49,720 --> 00:37:51,120
 So this is actually the fundamental principle.

799
00:37:51,120 --> 00:37:52,680
 So let me show you how, right?

800
00:37:52,680 --> 00:37:56,440
 So consider you have a signal xn, okay?

801
00:37:56,440 --> 00:37:59,240
 And this, of course, this xn is in the time domain, right?

802
00:37:59,240 --> 00:38:04,680
 Every time I use the lower case, I'm always use the lower case to represent time domain

803
00:38:04,680 --> 00:38:06,440
 just for convention, right?

804
00:38:06,440 --> 00:38:10,560
 So here all the lower case x and y, these are talking about the time domain.

805
00:38:10,560 --> 00:38:11,680
 All right.

806
00:38:11,680 --> 00:38:15,880
 Upper case, I normally refer to frequency domain, all right?

807
00:38:15,880 --> 00:38:19,080
 Because right now both of them are discrete, but we have to somehow differentiate that.

808
00:38:19,080 --> 00:38:22,360
 So I use lower case for time, upper case for frequency, all right?

809
00:38:22,360 --> 00:38:28,080
 So I started ways endpoint time domain, discrete time signal, okay?

810
00:38:28,080 --> 00:38:34,240
 So what I'm doing now is I'm going to divide it into the even index and all the index,

811
00:38:34,240 --> 00:38:35,240
 okay?

812
00:38:35,240 --> 00:38:37,319
 I'm not doing, I could say, first half, second half.

813
00:38:37,319 --> 00:38:43,600
 I'm doing that say, number zero, number two, number four, number six goes to the even index

814
00:38:43,600 --> 00:38:45,960
 sample, all right?

815
00:38:45,960 --> 00:38:50,600
 And all the index sample, number one, number three, number five, number seven goes to the

816
00:38:50,600 --> 00:38:51,960
 z, okay?

817
00:38:51,960 --> 00:38:58,000
 So now I'm going to divide x, which is n length into y and z.

818
00:38:58,000 --> 00:39:06,720
 So each of the y and z will have n divided by two length, n divided by two points, okay?

819
00:39:06,720 --> 00:39:07,720
 Is it clear for everyone?

820
00:39:07,720 --> 00:39:12,760
 Like, you know how to divide a sequence into odd number, odd sequence, even, sorry, odd

821
00:39:12,760 --> 00:39:15,740
 index, even index, all right?

822
00:39:15,740 --> 00:39:20,379
 So if I do this, right, I'm going to end up with two sub-sequences, y and n.

823
00:39:20,379 --> 00:39:23,580
 So y equal to x2n, okay?

824
00:39:23,580 --> 00:39:28,299
 Zn equal to x2n plus one, all right?

825
00:39:28,299 --> 00:39:33,660
 And the correspondingly, the DFT of the x, by definition will be this, right?

826
00:39:33,660 --> 00:39:37,180
 I'm just using the definition of DFS, okay?

827
00:39:37,180 --> 00:39:43,299
 But here I can divide this guy, xn, into the two sub-sequences, right?

828
00:39:43,300 --> 00:39:46,620
 Here this is your y, this is your z.

829
00:39:46,620 --> 00:39:48,860
 So I'm going to separate the two, right?

830
00:39:48,860 --> 00:39:52,300
 So separate this guy into here and here.

831
00:39:52,300 --> 00:39:54,300
 Okay, how can I separate that?

832
00:39:54,300 --> 00:39:58,740
 Well, because this summation covers all the n, all the choice of n.

833
00:39:58,740 --> 00:40:01,300
 So summation is nothing but summing n terms together, right?

834
00:40:01,300 --> 00:40:04,500
 I just separate the summation into two summation.

835
00:40:04,500 --> 00:40:08,660
 So all the, all term summation goes to the second term, all of the even term summation

836
00:40:08,660 --> 00:40:10,500
 go to the first term.

837
00:40:10,500 --> 00:40:17,900
 So I'm going to have two, like, how should I say, a varied version of DFT, okay?

838
00:40:17,900 --> 00:40:26,140
 And in fact, these two will be the correspondingly, the DFT of y and DFT of z multiplied by a

839
00:40:26,140 --> 00:40:27,620
 phase shift, right?

840
00:40:27,620 --> 00:40:31,580
 A factor here, but this factor is nothing but just a phase shift.

841
00:40:31,580 --> 00:40:34,540
 You just multiply by e to the power of something, it doesn't change the magnitude, only change

842
00:40:34,540 --> 00:40:37,380
 the phase, all right?

843
00:40:37,380 --> 00:40:42,740
 So by doing so, originally I have to do a DFT for my n point signal.

844
00:40:42,740 --> 00:40:48,780
 Now I can only, I can just need to do an n divided by two point DFT for y and n divided

845
00:40:48,780 --> 00:40:51,580
 by t point of z.

846
00:40:51,580 --> 00:40:53,820
 And just sum them together, right?

847
00:40:53,820 --> 00:41:00,780
 And if you realize that if the DFT complex is n square, okay, I make it divided by two,

848
00:41:00,780 --> 00:41:03,580
 so every side I will save one over four.

849
00:41:03,580 --> 00:41:06,100
 So I will get only one over four ratio of complex, right?

850
00:41:06,299 --> 00:41:10,660
 I got one over four, one over four, sum them together, I got one over two.

851
00:41:10,660 --> 00:41:13,860
 So I already saved half of the commutation.

852
00:41:13,860 --> 00:41:16,660
 If the DFT is actually n square.

853
00:41:16,660 --> 00:41:19,819
 Okay, I hope this makes sense.

854
00:41:19,819 --> 00:41:21,500
 So think about the DFT, right?

855
00:41:21,500 --> 00:41:26,900
 The DFT as we explained last week is nothing but a matrix multiplier vector, right?

856
00:41:26,900 --> 00:41:33,020
 If you do a matrix multiplier vector, the number of multiplication you need to do is n square,

857
00:41:33,020 --> 00:41:34,020
 right?

858
00:41:34,020 --> 00:41:35,660
 Suppose we have four points, right?

859
00:41:35,660 --> 00:41:40,540
 If it's four points, I have to do four square number of multiplication, which is 16.

860
00:41:40,540 --> 00:41:46,420
 If I do directly the DFT, now I divided the four point into two point and two point, okay?

861
00:41:46,420 --> 00:41:50,740
 A two point DFT only need four operations.

862
00:41:50,740 --> 00:41:53,259
 So I got four plus four is eight.

863
00:41:53,259 --> 00:41:56,180
 So I'm reducing 16 to eight.

864
00:41:56,180 --> 00:41:58,140
 This is how I can save commutation.

865
00:41:58,140 --> 00:42:00,140
 Make sense?

866
00:42:00,140 --> 00:42:03,299
 Okay, so I'm not finished.

867
00:42:03,299 --> 00:42:05,180
 I'm just saying that where the saving come from.

868
00:42:05,180 --> 00:42:06,180
 Where the saving come from here, right?

869
00:42:06,180 --> 00:42:11,940
 As you can see, just by one stage of division, I already saved something.

870
00:42:11,940 --> 00:42:13,419
 I saved half.

871
00:42:13,419 --> 00:42:14,419
 Okay?

872
00:42:14,419 --> 00:42:16,339
 But let's complete, right?

873
00:42:16,339 --> 00:42:21,140
 So right now I can divide the original DFT into two parts, right?

874
00:42:21,140 --> 00:42:25,700
 So this is my first part in terms of x, right?

875
00:42:25,700 --> 00:42:31,980
 So my x can, I can look at my first n divided by two number of spectrum in my DFT and then

876
00:42:31,980 --> 00:42:34,060
 the second n divided by two spectrum.

877
00:42:34,060 --> 00:42:40,500
 So the first n divided by two spectrum can be written as this, which is the form I just

878
00:42:40,500 --> 00:42:42,299
 explained, right?

879
00:42:42,299 --> 00:42:47,740
 In principle, I can also represent the second half with the same number, same form.

880
00:42:47,740 --> 00:42:52,779
 But remember, y and z only have n divided by two points, right?

881
00:42:52,779 --> 00:42:58,340
 So basically I can only assign value of k all the way until n divided by two minus one.

882
00:42:58,340 --> 00:43:02,060
 So how can I represent the second half of my DFT spectrum?

883
00:43:02,060 --> 00:43:04,299
 I can use the periodic property, right?

884
00:43:04,299 --> 00:43:07,020
 I can do k plus n divided by two.

885
00:43:07,020 --> 00:43:08,779
 It's going to be periodic, right?

886
00:43:08,779 --> 00:43:13,540
 So by adding this, I can make the y and z into the second period.

887
00:43:13,540 --> 00:43:21,060
 So this is how I can represent the second half of my original spectrum, DFT spectrum.

888
00:43:21,060 --> 00:43:27,580
 So once I have the y and z, I have no problem representing my original xk.

889
00:43:27,580 --> 00:43:31,340
 And this is how you can do it, all right?

890
00:43:32,300 --> 00:43:33,580
 OK, think about it, right?

891
00:43:33,580 --> 00:43:41,340
 So this equation explained to you how or why I can represent x in terms of mathematics

892
00:43:41,340 --> 00:43:49,260
 using not directly using the xk, but indirectly using the DFT of the y and z.

893
00:43:49,260 --> 00:43:51,660
 OK, this is how I derive it.

894
00:43:51,660 --> 00:43:55,420
 OK, what I'm doing is just follow the definition, separate the summation into two terms and

895
00:43:55,420 --> 00:43:58,940
 just naturally end it up here, right?

896
00:43:58,940 --> 00:44:06,300
 But the issue here is that y and z are both n divided by two points.

897
00:44:06,300 --> 00:44:12,300
 All right, so my job is to represent the entire n point x, right, xk.

898
00:44:12,300 --> 00:44:19,660
 So I will use the y and z original period to represent the xk for up to n divided by

899
00:44:19,660 --> 00:44:23,420
 two minus one, the first half of the spectrum, right?

900
00:44:23,420 --> 00:44:30,300
 The second half of the spectrum I can do periodic extension of y and z to cover that, right?

901
00:44:30,300 --> 00:44:36,220
 Mathematically, it's the same, but I just use the second period to do it, all right?

902
00:44:36,220 --> 00:44:42,380
 And for simplicity, I can even represent this phase shift as the, you know, as the Wn,

903
00:44:42,380 --> 00:44:46,940
 which is equal to e to the power of minus j two pi divided by n, just for simplicity,

904
00:44:46,940 --> 00:44:47,940
 right?

905
00:44:47,940 --> 00:44:49,820
 I just use a dummy variable to replace that.

906
00:44:49,820 --> 00:44:55,300
 Such that I can re-represent this guy in a cleaner way, right, in this way.

907
00:44:55,300 --> 00:45:02,380
 So you realize that when I represent xk, I just need to have yk and zk plus or minus

908
00:45:02,380 --> 00:45:04,460
 some phase shift, right?

909
00:45:04,460 --> 00:45:07,060
 Of course, this term, the k will change, right?

910
00:45:07,060 --> 00:45:09,620
 The k depends on which index you are talking about, right?

911
00:45:09,620 --> 00:45:16,060
 But once I have the y and z and some kind of multiplier, I have no problem representing

912
00:45:16,060 --> 00:45:19,060
 the original x, OK?

913
00:45:20,060 --> 00:45:23,060
 So does it make sense for everyone?

914
00:45:24,060 --> 00:45:25,060
 Yes?

915
00:45:25,060 --> 00:45:28,060
 The two equations are clear.

916
00:45:28,060 --> 00:45:29,060
 Which one?

917
00:45:29,060 --> 00:45:30,060
 Top one or bottom one?

918
00:45:30,060 --> 00:45:31,060
 So both of them.

919
00:45:31,060 --> 00:45:32,060
 Both of them, OK.

920
00:45:32,060 --> 00:45:36,060
 Are they including all the information when you do for the signal?

921
00:45:36,060 --> 00:45:44,060
 Because yk and zk, they actually just separate differently, but they still include all the information.

922
00:45:44,060 --> 00:45:46,060
 Yes, it's all information.

923
00:45:46,060 --> 00:45:47,060
 You're right.

924
00:45:47,060 --> 00:45:48,060
 So you can't do anything else, right?

925
00:45:48,060 --> 00:45:49,060
 Like you mentioned, right?

926
00:45:49,060 --> 00:45:56,060
 Y and z, originally the time domain are nothing but sub-sub-sumpling of the time of x, right?

927
00:45:56,060 --> 00:46:00,060
 So the only thing I do is kind of I extract a sub-sequence from x to be y.

928
00:46:00,060 --> 00:46:03,060
 But when you talk about the matrix, right?

929
00:46:03,060 --> 00:46:04,060
 Matrix stuff.

930
00:46:04,060 --> 00:46:06,060
 Sounds like 18 to 8.

931
00:46:06,060 --> 00:46:12,060
 16 to 8 is something like some information between the enemies.

932
00:46:12,060 --> 00:46:14,060
 Oh, you mean matrix?

933
00:46:14,060 --> 00:46:15,060
 Oh, yeah.

934
00:46:15,060 --> 00:46:16,060
 Oh, the matrix itself.

935
00:46:16,060 --> 00:46:21,060
 Okay, faster for your transfer is faster than described for your transfer.

936
00:46:21,060 --> 00:46:22,060
 Yes.

937
00:46:22,060 --> 00:46:26,060
 But it sounds like when you explain it, it sounds like there was an information missing.

938
00:46:26,060 --> 00:46:27,060
 Okay.

939
00:46:27,060 --> 00:46:29,060
 It's missing to 8.

940
00:46:29,060 --> 00:46:30,060
 Okay, let me clarify.

941
00:46:30,060 --> 00:46:35,060
 When you say information, if I talk about the signal, no information missing.

942
00:46:35,060 --> 00:46:36,060
 Okay?

943
00:46:36,060 --> 00:46:37,060
 We have the difference sheet.

944
00:46:37,060 --> 00:46:39,060
 Are you talking about the transform or the signal?

945
00:46:39,060 --> 00:46:40,060
 Right.

946
00:46:40,060 --> 00:46:42,060
 If it's a signal, nothing missed.

947
00:46:42,060 --> 00:46:47,060
 Because what I'm doing here is I'm separating the old sequence out there as the y.

948
00:46:47,060 --> 00:46:50,060
 Sorry, even as the y, all as the z.

949
00:46:50,060 --> 00:46:51,060
 Right.

950
00:46:51,060 --> 00:46:54,060
 So all the original signals will be covered by either y or z.

951
00:46:54,060 --> 00:46:55,060
 So nothing lose.

952
00:46:55,060 --> 00:46:56,060
 Okay?

953
00:46:56,060 --> 00:47:01,060
 If your question is asking, okay, I'm reducing a 16 by 16 matrix to 8 by 8 matrix.

954
00:47:01,060 --> 00:47:03,060
 Am I losing something?

955
00:47:03,060 --> 00:47:06,060
 Yes, because you're making a smaller matrix.

956
00:47:06,060 --> 00:47:10,060
 But remember, DFT contains no information on the signal.

957
00:47:10,060 --> 00:47:11,060
 Right.

958
00:47:11,060 --> 00:47:13,060
 The transform itself is a transform.

959
00:47:13,060 --> 00:47:14,060
 It's a rule.

960
00:47:14,060 --> 00:47:15,060
 Right?

961
00:47:15,060 --> 00:47:17,060
 You specify, hey, this guy called DFT.

962
00:47:17,060 --> 00:47:20,060
 The DFT itself has nothing to do with the signal.

963
00:47:20,060 --> 00:47:24,060
 The result of DFT depends on the signal.

964
00:47:24,060 --> 00:47:25,060
 Yes?

965
00:47:25,060 --> 00:47:32,060
 WNK does not include the signal.

966
00:47:32,060 --> 00:47:33,060
 With signal?

967
00:47:33,060 --> 00:47:34,060
 Yes.

968
00:47:34,060 --> 00:47:36,060
 WNK only to do with N and K.

969
00:47:36,060 --> 00:47:37,060
 Okay.

970
00:47:37,060 --> 00:47:38,060
 So very good question.

971
00:47:38,060 --> 00:47:42,060
 So there's a misunderstanding when I say DFT.

972
00:47:42,060 --> 00:47:43,060
 Right.

973
00:47:43,060 --> 00:47:47,060
 DFT itself just referred to the matrix.

974
00:47:47,060 --> 00:47:51,060
 So DFT is fully determined by the N.

975
00:47:51,060 --> 00:47:52,060
 Okay?

976
00:47:52,060 --> 00:47:54,060
 We're talking about the matrix.

977
00:47:54,060 --> 00:47:58,060
 If I'm talking about 8-point DFT, that matrix is fixed.

978
00:47:58,060 --> 00:48:01,060
 Nothing to do with the signal.

979
00:48:01,060 --> 00:48:07,060
 But if we're talking about the DFT over signal, we are multiplying the matrix.

980
00:48:07,060 --> 00:48:11,060
 Multiplying the matrix with the vector, that results depends on the signal.

981
00:48:11,060 --> 00:48:16,060
 So they may be, it's a different, like a matrix, different size of matrix.

982
00:48:16,060 --> 00:48:22,060
 But after they complete the function, it should be the same function as the signal.

983
00:48:22,060 --> 00:48:24,060
 Complete the function should be the...

984
00:48:24,060 --> 00:48:31,060
 So when you write down the matrix with all the signal you need, and you just like simplify

985
00:48:31,060 --> 00:48:35,060
 the matrix or something, and you write the same function as the matrix.

986
00:48:35,060 --> 00:48:36,060
 Yes.

987
00:48:36,060 --> 00:48:39,060
 But I think you made a very good point.

988
00:48:39,060 --> 00:48:40,060
 I want to maybe...

989
00:48:40,060 --> 00:48:42,060
 I don't know how many of you have the same question.

990
00:48:42,060 --> 00:48:44,060
 When I learned this, I have this question, to be honest.

991
00:48:44,060 --> 00:48:46,060
 I didn't really differentiate very clearly.

992
00:48:46,060 --> 00:48:48,060
 But I think it's better to mention this.

993
00:48:48,060 --> 00:48:52,060
 Let's go back to the slides I talked about last week, since you have this question.

994
00:48:52,060 --> 00:48:54,060
 What I'm talking about is the matrix...

995
00:48:54,060 --> 00:48:56,060
 The matrix I'm talking about is this guy.

996
00:48:56,060 --> 00:48:57,060
 I hope you still remember.

997
00:48:57,060 --> 00:48:58,060
 Right.

998
00:48:58,060 --> 00:48:59,060
 This guy.

999
00:48:59,060 --> 00:49:01,060
 So we started by this equation.

1000
00:49:01,060 --> 00:49:02,060
 Okay.

1001
00:49:02,060 --> 00:49:05,060
 We started by this equation.

1002
00:49:05,060 --> 00:49:06,060
 Okay.

1003
00:49:06,060 --> 00:49:08,060
 So this is the definition.

1004
00:49:08,060 --> 00:49:09,060
 Right.

1005
00:49:09,060 --> 00:49:14,060
 This is called the forward Fourier transform, how you can convert a time domain to frequent

1006
00:49:14,060 --> 00:49:15,060
 domain.

1007
00:49:15,060 --> 00:49:16,060
 Right.

1008
00:49:16,060 --> 00:49:20,060
 But we say that because both of x and n are n points.

1009
00:49:20,060 --> 00:49:21,060
 Right.

1010
00:49:21,060 --> 00:49:24,060
 So instead, you can either choose to write, let's say, n equations.

1011
00:49:24,060 --> 00:49:30,060
 I mean, you can write n equations because k has to be equal to zero, one, two, all the

1012
00:49:30,060 --> 00:49:31,060
 way to m minus one.

1013
00:49:31,060 --> 00:49:37,060
 We're saying that if you want to represent all the xk in one shot, you can use this matrix

1014
00:49:37,060 --> 00:49:38,060
 vector form.

1015
00:49:38,060 --> 00:49:39,060
 All right.

1016
00:49:39,060 --> 00:49:40,060
 Why this is true?

1017
00:49:40,060 --> 00:49:45,060
 Because by definition, if I multiply a matrix with a vector, I'm doing nothing but multiplying

1018
00:49:45,060 --> 00:49:49,060
 the first row with this vector and get the first coefficient.

1019
00:49:49,060 --> 00:49:50,060
 Right.

1020
00:49:50,060 --> 00:49:54,060
 So this is exactly the x0, xk equal to zero case.

1021
00:49:54,060 --> 00:49:55,060
 Right.

1022
00:49:55,060 --> 00:49:57,060
 Equal to all the Fourier DFT.

1023
00:49:57,060 --> 00:49:58,060
 Right.

1024
00:49:58,060 --> 00:50:03,060
 And this is k equal to one, x1 equal to the DFT.

1025
00:50:03,060 --> 00:50:11,060
 So when I'm saying that 16 point DFT, I'm only talking about this matrix.

1026
00:50:11,060 --> 00:50:12,060
 Okay.

1027
00:50:12,060 --> 00:50:15,060
 This matrix is literally called DFT.

1028
00:50:15,060 --> 00:50:18,060
 Discrete Fourier transform.

1029
00:50:18,060 --> 00:50:23,060
 In mathematics, when we say a transform, it always a matrix.

1030
00:50:23,060 --> 00:50:26,060
 You can always represent a transform, linear transform.

1031
00:50:26,060 --> 00:50:27,060
 Let's make it straight.

1032
00:50:27,060 --> 00:50:28,060
 Okay.

1033
00:50:28,060 --> 00:50:30,060
 Linear transform as a matrix.

1034
00:50:30,060 --> 00:50:31,060
 All right.

1035
00:50:31,060 --> 00:50:32,060
 Laplace transform.

1036
00:50:32,060 --> 00:50:33,060
 Right.

1037
00:50:33,060 --> 00:50:34,060
 Cosine transform.

1038
00:50:34,060 --> 00:50:35,060
 They're always a matrix.

1039
00:50:35,060 --> 00:50:40,060
 So the transform itself, if it's linear, should have nothing to do with the signal.

1040
00:50:40,060 --> 00:50:41,060
 It's a fix.

1041
00:50:41,060 --> 00:50:42,060
 It's a fixed one.

1042
00:50:42,060 --> 00:50:46,060
 If you look at this form, right, there are coefficients in this w.

1043
00:50:46,060 --> 00:50:49,060
 Do you see anything to do with the signal?

1044
00:50:49,060 --> 00:50:50,060
 No.

1045
00:50:50,060 --> 00:50:56,060
 Because wn, right, this guy is fully determined by the n and the coefficient.

1046
00:50:56,060 --> 00:50:59,060
 Nothing, anything to do with my x?

1047
00:50:59,060 --> 00:51:00,060
 No.

1048
00:51:00,060 --> 00:51:01,060
 Nothing to do with my x.

1049
00:51:01,060 --> 00:51:05,060
 So you can construct any size of the transform, whatever you want.

1050
00:51:05,060 --> 00:51:07,060
 Let's say 16 point, 8 point.

1051
00:51:07,060 --> 00:51:10,060
 The 16 or 8 just change the n.

1052
00:51:10,060 --> 00:51:11,060
 Right.

1053
00:51:11,060 --> 00:51:17,060
 So what I'm saying is that instead of doing a 16 by 16 DFT directly, what I just talk

1054
00:51:17,060 --> 00:51:21,060
 about is by reducing the transforming to 8 by 8 transform.

1055
00:51:21,060 --> 00:51:25,060
 Does it make sense?

1056
00:51:25,060 --> 00:51:29,060
 I changed the factor, yes, but I didn't change the signal.

1057
00:51:29,060 --> 00:51:30,060
 Right.

1058
00:51:30,060 --> 00:51:31,060
 The signal is, you still preserve the signal.

1059
00:51:31,060 --> 00:51:33,060
 I don't touch the signal.

1060
00:51:33,060 --> 00:51:35,060
 Do you change the signal?

1061
00:51:35,060 --> 00:51:36,060
 No.

1062
00:51:36,060 --> 00:51:38,060
 I change the points.

1063
00:51:38,060 --> 00:51:40,060
 I change the n point.

1064
00:51:40,060 --> 00:51:43,060
 Remember, n is the denominator, the n.

1065
00:51:43,060 --> 00:51:44,060
 It's not fs.

1066
00:51:44,060 --> 00:51:45,060
 Right.

1067
00:51:45,060 --> 00:51:46,060
 fs is the sampling frequency.

1068
00:51:46,060 --> 00:51:50,060
 Sampling frequency only determining the conversion between analog to discrete.

1069
00:51:50,060 --> 00:51:53,060
 Now here, what I, what, what do you think I talk about?

1070
00:51:53,060 --> 00:51:54,060
 Nothing to do with the sampling.

1071
00:51:54,060 --> 00:51:57,060
 Just the points, number of points I have for my DFT.

1072
00:51:57,060 --> 00:51:58,060
 Right.

1073
00:51:58,060 --> 00:52:02,060
 Is it clear?

1074
00:52:02,060 --> 00:52:04,060
 I mean, I just want to make it clear.

1075
00:52:04,060 --> 00:52:07,060
 When I say transform, I'm talking about this guy.

1076
00:52:07,060 --> 00:52:08,060
 All right.

1077
00:52:08,060 --> 00:52:12,060
 You can apply a transform to a signal, time domain signal.

1078
00:52:12,060 --> 00:52:14,060
 To get, it's spectrum.

1079
00:52:14,060 --> 00:52:15,060
 Right.

1080
00:52:15,060 --> 00:52:16,060
 This is called spectrum.

1081
00:52:16,060 --> 00:52:18,060
 This is called the time domain signal.

1082
00:52:18,060 --> 00:52:19,060
 This is called DFT.

1083
00:52:19,060 --> 00:52:20,060
 Right.

1084
00:52:20,060 --> 00:52:21,060
 Yes.

1085
00:52:22,060 --> 00:52:37,060
 You are using the symmetric property to do the computational, to gain advantage.

1086
00:52:37,060 --> 00:52:38,060
 Yes.

1087
00:52:38,060 --> 00:52:39,060
 Exactly.

1088
00:52:39,060 --> 00:52:42,060
 So her question is that, okay, what are we doing?

1089
00:52:42,060 --> 00:52:44,060
 So basically, maybe I translated it in another way.

1090
00:52:44,060 --> 00:52:45,060
 Right.

1091
00:52:45,060 --> 00:52:46,060
 So why we can gain this?

1092
00:52:46,060 --> 00:52:47,060
 Right.

1093
00:52:47,060 --> 00:52:49,060
 The result, the gain cannot come from nowhere.

1094
00:52:49,060 --> 00:52:50,060
 Right.

1095
00:52:50,060 --> 00:52:53,060
 So why exactly we can gain the computational advantage?

1096
00:52:53,060 --> 00:52:56,060
 Indeed, the reason is that why I do this computation.

1097
00:52:56,060 --> 00:53:02,060
 Remember, if I'm doing this exactly, I need to compute, let's say the first row, multiplied

1098
00:53:02,060 --> 00:53:03,060
 by the column.

1099
00:53:03,060 --> 00:53:04,060
 Right.

1100
00:53:04,060 --> 00:53:05,060
 Second row, multiplied by the column.

1101
00:53:05,060 --> 00:53:09,060
 So I have to do exactly n squared number of multiplication.

1102
00:53:09,060 --> 00:53:12,060
 But why, because I don't do anything, I don't lose anything.

1103
00:53:12,060 --> 00:53:16,060
 Why exactly by doing this massage of the equation, I can save something suddenly?

1104
00:53:16,060 --> 00:53:17,060
 You're right.

1105
00:53:17,060 --> 00:53:18,060
 Exactly.

1106
00:53:18,060 --> 00:53:19,060
 There's some symmetric property.

1107
00:53:19,060 --> 00:53:20,060
 I don't know if you can tell.

1108
00:53:20,060 --> 00:53:21,060
 Right.

1109
00:53:21,060 --> 00:53:22,060
 These matrix is actually symmetric.

1110
00:53:22,060 --> 00:53:24,060
 Why is it symmetric?

1111
00:53:24,060 --> 00:53:29,060
 I mean, along this diagonal elements, all of these numbers are same.

1112
00:53:29,060 --> 00:53:30,060
 Right.

1113
00:53:30,060 --> 00:53:31,060
 Here's W n squared.

1114
00:53:31,060 --> 00:53:32,060
 This is also W n squared.

1115
00:53:32,060 --> 00:53:37,060
 So when I apply this row, and later when I apply this row, I'm doing some redundant

1116
00:53:37,060 --> 00:53:38,060
 computation.

1117
00:53:38,060 --> 00:53:44,060
 I'm doing sometimes the same multiplication multiple times.

1118
00:53:44,060 --> 00:53:45,060
 Right.

1119
00:53:45,060 --> 00:53:54,060
 And basically, why FFT works is giving you a smarter way to avoid the repeating computation.

1120
00:53:54,060 --> 00:53:56,060
 So this is exactly where the saving comes from.

1121
00:53:56,060 --> 00:53:57,060
 Right.

1122
00:53:57,060 --> 00:53:59,060
 It's due to the fact that this matrix is not a random matrix.

1123
00:53:59,060 --> 00:54:00,060
 Right.

1124
00:54:00,060 --> 00:54:02,060
 If I give you a random matrix, there's no hope you can save it.

1125
00:54:02,060 --> 00:54:04,060
 You have to do exactly all the things.

1126
00:54:04,060 --> 00:54:07,060
 But this matrix is highly structured.

1127
00:54:07,060 --> 00:54:10,060
 And this structure tells you something to save the computation smartly.

1128
00:54:10,060 --> 00:54:11,060
 Right.

1129
00:54:11,060 --> 00:54:12,060
 All right.

1130
00:54:12,060 --> 00:54:14,060
 But I want to make it clear.

1131
00:54:14,060 --> 00:54:15,060
 Right.

1132
00:54:15,060 --> 00:54:22,660
 So when I say changing from n point to n divided by two points, DFT, I'm talking about shrinking

1133
00:54:22,660 --> 00:54:24,060
 the size of the matrix.

1134
00:54:24,060 --> 00:54:25,060
 Right.

1135
00:54:25,060 --> 00:54:30,420
 It doesn't mean I lose anything because I'm going to still, let's say, separate the input

1136
00:54:30,420 --> 00:54:31,420
 elements.

1137
00:54:31,420 --> 00:54:32,420
 Right.

1138
00:54:32,420 --> 00:54:36,620
 Into like these two guys goes to Y. Here, here goes to Z. Right.

1139
00:54:36,620 --> 00:54:39,820
 I'm still processing every single number in my input signal.

1140
00:54:39,820 --> 00:54:41,060
 I didn't lose anything.

1141
00:54:41,060 --> 00:54:42,060
 Right.

1142
00:54:42,060 --> 00:54:43,060
 Okay.

1143
00:54:43,060 --> 00:54:44,060
 Make sense?

1144
00:54:44,060 --> 00:54:45,060
 All right.

1145
00:54:45,060 --> 00:54:50,340
 If you have any question, I can answer because, you know, I know some of you are very familiar

1146
00:54:50,340 --> 00:54:51,340
 with this.

1147
00:54:51,340 --> 00:54:54,060
 If I say too much, you probably think I'm just wasting time.

1148
00:54:54,060 --> 00:54:58,580
 But if you find something you feel uncomfortable, you want me to repeat, I'm perfectly fine

1149
00:54:58,580 --> 00:54:59,580
 to explain.

1150
00:54:59,580 --> 00:55:00,580
 Right.

1151
00:55:00,580 --> 00:55:05,060
 Actually, I would rather you ask me than we settle this before moving on.

1152
00:55:05,060 --> 00:55:06,060
 Okay.

1153
00:55:06,060 --> 00:55:07,060
 Everybody's clear?

1154
00:55:07,060 --> 00:55:09,060
 Like, is it better?

1155
00:55:09,060 --> 00:55:10,060
 Good.

1156
00:55:10,060 --> 00:55:11,060
 Good.

1157
00:55:11,060 --> 00:55:12,060
 Okay.

1158
00:55:12,060 --> 00:55:13,060
 So let's go back to our business.

1159
00:55:13,060 --> 00:55:14,060
 Right.

1160
00:55:14,060 --> 00:55:15,740
 So we end up here.

1161
00:55:15,740 --> 00:55:21,660
 So we're saying that by using this divide and conquer strategy, we can, let's say, dividing

1162
00:55:21,660 --> 00:55:25,060
 the original endpoint DFT.

1163
00:55:25,060 --> 00:55:26,060
 Okay.

1164
00:55:26,060 --> 00:55:27,060
 Let me use the pointer.

1165
00:55:27,060 --> 00:55:32,460
 Original endpoint DFT, if you want to directly use that big matrix, you have to endpoint.

1166
00:55:32,460 --> 00:55:33,460
 Right.

1167
00:55:33,460 --> 00:55:37,299
 Into a smarter way to compute Y and Z separately.

1168
00:55:37,299 --> 00:55:38,299
 Right.

1169
00:55:38,300 --> 00:55:42,860
 So Y and Z themselves, the length or number points are only half.

1170
00:55:42,860 --> 00:55:43,860
 Okay.

1171
00:55:43,860 --> 00:55:48,500
 Because of that, doing them is much easier than doing X directly.

1172
00:55:48,500 --> 00:55:49,500
 Okay.

1173
00:55:49,500 --> 00:55:54,820
 So you can do this, but you may not stop there because you can do the exact same thing to

1174
00:55:54,820 --> 00:55:55,820
 Y and Z.

1175
00:55:55,820 --> 00:55:56,820
 Right.

1176
00:55:56,820 --> 00:56:00,860
 If I can save for X, now why should I do DFT for Y and Z?

1177
00:56:00,860 --> 00:56:03,180
 I can still do it dividing for them as well.

1178
00:56:03,180 --> 00:56:04,180
 Right.

1179
00:56:04,180 --> 00:56:05,180
 Exactly the same thing.

1180
00:56:05,180 --> 00:56:08,060
 So from N divided by 2 to N divided by 4.

1181
00:56:08,060 --> 00:56:11,020
 Then keep dividing until you reach a single point.

1182
00:56:11,020 --> 00:56:16,540
 So this equation only show you the step from N to N divided by 2.

1183
00:56:16,540 --> 00:56:18,500
 But I can keep doing this.

1184
00:56:18,500 --> 00:56:19,580
 Okay.

1185
00:56:19,580 --> 00:56:25,460
 So what you will have is, okay, this is actually the, okay, let's forget about keep doing,

1186
00:56:25,460 --> 00:56:26,460
 right.

1187
00:56:26,460 --> 00:56:27,460
 Just look at this step.

1188
00:56:27,460 --> 00:56:30,500
 So I can show you the mathematical equation of this step.

1189
00:56:30,500 --> 00:56:31,500
 Okay.

1190
00:56:31,500 --> 00:56:33,540
 So mathematically, this is what happened.

1191
00:56:33,540 --> 00:56:38,700
 I can also use a diagram to show you the exact same procedure.

1192
00:56:38,700 --> 00:56:43,700
 So this diagram is exactly the same as this equation.

1193
00:56:43,700 --> 00:56:44,700
 Okay.

1194
00:56:44,700 --> 00:56:50,740
 The only difference is that I'm representing Y and Z as the input signal here.

1195
00:56:50,740 --> 00:56:51,740
 Okay.

1196
00:56:51,740 --> 00:56:57,259
 So imagine this is my Y0, my Y1, blah, blah, blah, all the way to Y and divided by, sorry,

1197
00:56:57,259 --> 00:56:58,259
 divided by 2 minus 1.

1198
00:56:58,259 --> 00:56:59,259
 Right.

1199
00:56:59,259 --> 00:57:01,340
 So I'm input them into the system.

1200
00:57:01,340 --> 00:57:02,340
 Okay.

1201
00:57:02,340 --> 00:57:04,860
 So let's say if I want to get X0, right.

1202
00:57:04,860 --> 00:57:12,660
 If I want to get X0, I should get X0 equal to Y0 plus W to the power of 0 times Z0.

1203
00:57:12,660 --> 00:57:13,660
 Right.

1204
00:57:13,660 --> 00:57:17,900
 So in the graph, you can find that this guy equal to Y0, right.

1205
00:57:17,900 --> 00:57:26,700
 The direct to go here, sum up with the Z0 multiplied by WN to the power of 0, sum together.

1206
00:57:26,700 --> 00:57:33,220
 So this branch is corresponding to the equation, the first equation, which is K equal to 0.

1207
00:57:33,220 --> 00:57:34,580
 All right.

1208
00:57:34,580 --> 00:57:40,660
 And then exactly the X1 here and here were corresponding to the first equation, which

1209
00:57:40,660 --> 00:57:42,180
 K equal to 1.

1210
00:57:42,180 --> 00:57:43,580
 Right.

1211
00:57:43,580 --> 00:57:50,180
 I'm just representing the mathematical equation using this so-called diagram.

1212
00:57:50,180 --> 00:57:51,180
 Okay.

1213
00:57:51,180 --> 00:57:55,060
 So later you will learn that this diagram is called block diagram.

1214
00:57:55,500 --> 00:57:56,500
 Okay.

1215
00:57:56,500 --> 00:57:59,340
 Why we love it is because this is very good for design.

1216
00:57:59,340 --> 00:58:00,340
 Right.

1217
00:58:00,340 --> 00:58:03,140
 Because eventually, mathematical form is for us to understand.

1218
00:58:03,140 --> 00:58:04,140
 Right.

1219
00:58:04,140 --> 00:58:06,020
 But later you want to understand something for manufacture.

1220
00:58:06,020 --> 00:58:07,020
 Right.

1221
00:58:07,020 --> 00:58:08,020
 You cannot show them the equation.

1222
00:58:08,020 --> 00:58:11,820
 You have to show them, okay, how exactly the signal is passed into from stage to stage.

1223
00:58:11,820 --> 00:58:12,820
 Right.

1224
00:58:12,820 --> 00:58:17,020
 So this diagram shows you the signal going from stage 1 to stage 2.

1225
00:58:17,020 --> 00:58:18,020
 Right.

1226
00:58:18,020 --> 00:58:19,020
 This is called block diagram.

1227
00:58:19,020 --> 00:58:23,940
 And normally the block diagram will have some fundamental components like summation,

1228
00:58:23,940 --> 00:58:25,980
 you know, multiplications.

1229
00:58:25,980 --> 00:58:29,900
 And these are very easy to implement, right, in the circuit design.

1230
00:58:29,900 --> 00:58:30,900
 Right.

1231
00:58:30,900 --> 00:58:35,020
 Circuit, you know, design, you know, how should I say, future design or circuit design.

1232
00:58:35,020 --> 00:58:36,020
 Right.

1233
00:58:36,020 --> 00:58:40,460
 But this diagram is the same representation, sorry, equivalent to representation as the

1234
00:58:40,460 --> 00:58:42,460
 mathematical form.

1235
00:58:42,460 --> 00:58:43,460
 Okay.

1236
00:58:43,460 --> 00:58:44,660
 All right.

1237
00:58:44,660 --> 00:58:45,900
 So why we want to do this?

1238
00:58:45,900 --> 00:58:49,500
 I mean, why we want to use the diagram to represent this stage?

1239
00:58:49,500 --> 00:58:51,260
 Because I want to keep doing that.

1240
00:58:51,260 --> 00:58:52,260
 Right.

1241
00:58:52,260 --> 00:58:55,260
 So I want to take the diagram from the stage into the other stage.

1242
00:58:55,260 --> 00:58:56,260
 Right.

1243
00:58:56,260 --> 00:59:00,780
 For example, I already decompose my x into your y and the z.

1244
00:59:00,780 --> 00:59:01,780
 Right.

1245
00:59:01,780 --> 00:59:08,940
 I can do the same thing for y by further dividing the y into, let's say, y2 and z2.

1246
00:59:08,940 --> 00:59:09,940
 Same for z, right.

1247
00:59:09,940 --> 00:59:12,500
 But basically you have to do them in the corresponding way.

1248
00:59:12,500 --> 00:59:17,300
 And then, you know, I can further divide my y2 into, you know, original signal.

1249
00:59:17,300 --> 00:59:18,300
 Right.

1250
00:59:18,300 --> 00:59:24,460
 So you keep dividing the end point to m divided by 2 and divided by 4 until you have a single

1251
00:59:24,460 --> 00:59:25,460
 length signal.

1252
00:59:25,460 --> 00:59:26,460
 Okay.

1253
00:59:26,460 --> 00:59:28,460
 Then you cannot divide anymore, right.

1254
00:59:28,460 --> 00:59:29,820
 It's only one point.

1255
00:59:29,820 --> 00:59:30,820
 Nothing to divide.

1256
00:59:30,820 --> 00:59:37,340
 But the good thing is, if you have a one point signal, the DFT of that is equal to itself.

1257
00:59:37,340 --> 00:59:38,340
 So you can do nothing.

1258
00:59:38,340 --> 00:59:39,580
 You just leave it.

1259
00:59:39,580 --> 00:59:43,340
 That signal originally is the spectrum of itself.

1260
00:59:43,340 --> 00:59:45,340
 Right.

1261
00:59:45,340 --> 00:59:49,180
 So this is how you can, all the way starting from time domain, but you have to reshuffle

1262
00:59:49,180 --> 00:59:50,180
 that.

1263
00:59:50,180 --> 00:59:52,020
 Remember, the order is not 0, 1, 2, 3.

1264
00:59:52,020 --> 00:59:54,020
 It's actually 0, 4, 2, 6.

1265
00:59:54,020 --> 00:59:55,020
 Okay.

1266
00:59:55,020 --> 00:59:56,820
 So this is something people normally make mistakes.

1267
00:59:56,820 --> 00:59:57,820
 All right.

1268
00:59:57,820 --> 00:59:59,420
 This is not in the original order.

1269
00:59:59,420 --> 01:00:07,140
 But you can keep doing this 2 point FFT three times to reach your 8 point output because

1270
01:00:07,140 --> 01:00:09,140
 2 to power 3 equal to 8.

1271
01:00:09,140 --> 01:00:10,140
 Right.

1272
01:00:10,140 --> 01:00:13,660
 If you want to reach 16 point, you have to do four stages.

1273
01:00:13,660 --> 01:00:15,140
 All right.

1274
01:00:16,140 --> 01:00:20,740
 But the principle is that you do not do the transform directly, but you divide and conquer

1275
01:00:20,740 --> 01:00:22,660
 until you cannot divide anymore.

1276
01:00:22,660 --> 01:00:23,660
 Right.

1277
01:00:23,660 --> 01:00:27,859
 So when you design this, you have to go from the output all the way to input.

1278
01:00:27,859 --> 01:00:30,779
 But when you apply that, of course, you go from input to output.

1279
01:00:30,779 --> 01:00:31,779
 Right.

1280
01:00:31,779 --> 01:00:33,859
 This is how the so-called butterfly form come from.

1281
01:00:33,859 --> 01:00:37,379
 This is called butterfly form, by the way.

1282
01:00:37,379 --> 01:00:40,379
 So you can do this in the two point division.

1283
01:00:40,379 --> 01:00:42,180
 Sometimes people also do three point division.

1284
01:00:42,180 --> 01:00:44,339
 But for this class, let's stick to two point.

1285
01:00:44,340 --> 01:00:46,060
 I don't want to complicate the story.

1286
01:00:46,060 --> 01:00:47,060
 Right.

1287
01:00:47,060 --> 01:00:54,420
 But basically, this is how you can save computation and you can somehow, later I will show you.

1288
01:00:54,420 --> 01:00:58,620
 So you can actually go from n squared to n log n.

1289
01:00:58,620 --> 01:00:59,620
 Okay.

1290
01:00:59,620 --> 01:01:00,620
 So, okay.

1291
01:01:00,620 --> 01:01:02,980
 So if you do DFT directly, you got n squared.

1292
01:01:02,980 --> 01:01:03,980
 Right.

1293
01:01:03,980 --> 01:01:08,420
 And then every stage, you should have n number of operation.

1294
01:01:08,420 --> 01:01:09,660
 All right.

1295
01:01:09,660 --> 01:01:10,660
 Why?

1296
01:01:10,660 --> 01:01:13,740
 Because every stage, you have to do one multiplication.

1297
01:01:13,939 --> 01:01:14,939
 Right.

1298
01:01:14,939 --> 01:01:15,939
 This is minus one.

1299
01:01:15,939 --> 01:01:17,580
 This is multiplied by one.

1300
01:01:17,580 --> 01:01:21,259
 This is multiplied by w to power of zero.

1301
01:01:21,259 --> 01:01:22,259
 Right.

1302
01:01:22,259 --> 01:01:25,979
 So for every stage, you have to do exactly n number of multiplication.

1303
01:01:25,979 --> 01:01:26,979
 Okay.

1304
01:01:26,979 --> 01:01:27,979
 How many stage?

1305
01:01:27,979 --> 01:01:30,180
 Actually, it's log n stage.

1306
01:01:30,180 --> 01:01:31,180
 All right.

1307
01:01:31,180 --> 01:01:33,180
 So suppose n is eight.

1308
01:01:33,180 --> 01:01:34,180
 Log n equal to three.

1309
01:01:34,180 --> 01:01:36,979
 So this is where the n log n come from.

1310
01:01:36,979 --> 01:01:37,979
 Right.

1311
01:01:37,979 --> 01:01:41,459
 Every stage, you need n number of operation.

1312
01:01:41,460 --> 01:01:43,340
 You have log n number of stages.

1313
01:01:43,340 --> 01:01:44,340
 Right.

1314
01:01:44,340 --> 01:01:45,340
 This is where they come from.

1315
01:01:45,340 --> 01:01:46,340
 But we'll get there.

1316
01:01:46,340 --> 01:01:47,340
 Right.

1317
01:01:47,340 --> 01:01:51,340
 But I use this slide to show you the example of eight point.

1318
01:01:51,340 --> 01:01:52,340
 Right.

1319
01:01:52,340 --> 01:01:57,340
 So you can read this, but they show you the step by step division from eight point all

1320
01:01:57,340 --> 01:01:59,460
 the way to the two point FFT.

1321
01:01:59,460 --> 01:02:00,460
 Okay.

1322
01:02:00,460 --> 01:02:03,580
 But I won't repeat this, but you can use this example as a practice.

1323
01:02:03,580 --> 01:02:04,580
 Right.

1324
01:02:04,580 --> 01:02:08,420
 To see whether you do truly understand the divide and the conquer strategy of this two

1325
01:02:08,420 --> 01:02:09,420
 point.

1326
01:02:09,420 --> 01:02:10,420
 Okay.

1327
01:02:10,420 --> 01:02:11,420
 Right.

1328
01:02:11,420 --> 01:02:12,420
 So it's a two point FFT process.

1329
01:02:12,420 --> 01:02:13,420
 All right.

1330
01:02:13,420 --> 01:02:14,420
 But it's the same principle.

1331
01:02:14,420 --> 01:02:15,420
 Right.

1332
01:02:15,420 --> 01:02:18,900
 This is, I really showed you the eight point, but you can go through this mathematics process

1333
01:02:18,900 --> 01:02:24,660
 to understand how exactly you can go from eight point FFT to four point FFT to gradually

1334
01:02:24,660 --> 01:02:26,660
 reduce it.

1335
01:02:26,660 --> 01:02:27,660
 Okay.

1336
01:02:27,660 --> 01:02:28,660
 Yes.

1337
01:02:28,660 --> 01:02:29,660
 Sorry.

1338
01:02:29,660 --> 01:02:32,660
 Tell me about what you're doing.

1339
01:02:32,660 --> 01:02:33,660
 Sorry.

1340
01:02:33,660 --> 01:02:39,660
 Tell me about what?

1341
01:02:39,660 --> 01:02:40,660
 Symmetric.

1342
01:02:40,660 --> 01:02:41,660
 Symmetric.

1343
01:02:41,660 --> 01:02:42,660
 Okay.

1344
01:02:42,660 --> 01:02:47,299
 So are we totally ignoring all the negative frequency?

1345
01:02:47,299 --> 01:02:53,940
 We are totally ignoring the, what, negative frequency or negative frequency.

1346
01:02:53,940 --> 01:02:55,580
 For DFT, it doesn't really matter.

1347
01:02:55,580 --> 01:02:59,620
 For DFT, it's always fixed length.

1348
01:02:59,620 --> 01:03:00,620
 Right.

1349
01:03:00,620 --> 01:03:04,380
 And also, even if you are careful of negative frequency, it's symmetric.

1350
01:03:04,380 --> 01:03:05,779
 It's periodic.

1351
01:03:05,779 --> 01:03:09,220
 You can just do another period to cover the negative frequency if you want.

1352
01:03:09,220 --> 01:03:10,220
 Right.

1353
01:03:10,220 --> 01:03:11,220
 So it really doesn't matter.

1354
01:03:11,220 --> 01:03:13,100
 We only care about that end points.

1355
01:03:13,100 --> 01:03:14,100
 Right.

1356
01:03:14,100 --> 01:03:15,660
 This is the principle of DFT.

1357
01:03:15,660 --> 01:03:16,660
 You have end point input.

1358
01:03:16,660 --> 01:03:19,259
 You only care about end point output.

1359
01:03:19,259 --> 01:03:22,980
 You can cover any frequency by simply repeating the same pattern.

1360
01:03:22,980 --> 01:03:23,980
 Yes.

1361
01:03:23,980 --> 01:03:24,980
 Okay.

1362
01:03:24,980 --> 01:03:25,980
 Good.

1363
01:03:25,980 --> 01:03:26,980
 Any other questions?

1364
01:03:26,980 --> 01:03:27,980
 Okay.

1365
01:03:27,980 --> 01:03:28,980
 Good.

1366
01:03:28,980 --> 01:03:33,020
 So this is the derivation of FFT.

1367
01:03:33,020 --> 01:03:34,020
 Right.

1368
01:03:34,020 --> 01:03:38,540
 And also, this is one example to show you numerically.

1369
01:03:38,540 --> 01:03:39,540
 Right.

1370
01:03:39,540 --> 01:03:46,980
 If I give you a time domain signal as 0, 1, 2, 3, 4, 5, 6, 7, right, 8 point, how I can

1371
01:03:46,980 --> 01:03:52,180
 use my, you know, butterfly diagram to generate the output.

1372
01:03:52,180 --> 01:03:53,180
 Okay.

1373
01:03:53,180 --> 01:03:57,260
 I mean, again, I won't go through this because you have to try this number by number, but

1374
01:03:57,260 --> 01:03:59,260
 I will leave this as an exercise for you.

1375
01:03:59,260 --> 01:04:05,580
 But it's a practice for you to experience, right, how the numbers can gradually go from

1376
01:04:05,580 --> 01:04:09,660
 the input by doing every stage to reach the output.

1377
01:04:09,660 --> 01:04:10,660
 Okay.

1378
01:04:10,660 --> 01:04:11,660
 Okay.

1379
01:04:11,660 --> 01:04:15,540
 I probably want to test you on those kind of tricky numbers in the exam, but you need

1380
01:04:15,540 --> 01:04:16,540
 to know the principle.

1381
01:04:16,540 --> 01:04:17,540
 Okay.

1382
01:04:17,540 --> 01:04:20,740
 Even if I give you a question, the number will be relatively simple, trust me.

1383
01:04:20,740 --> 01:04:21,740
 Right.

1384
01:04:21,740 --> 01:04:24,940
 But you need to know the principle, right, how this division is actually works.

1385
01:04:24,940 --> 01:04:25,940
 Right.

1386
01:04:25,940 --> 01:04:26,940
 All right.

1387
01:04:26,940 --> 01:04:32,500
 So, yeah, so you can complete this example by yourself by gradually going from, you know,

1388
01:04:32,500 --> 01:04:38,500
 original stage, stage 1, stage 2, and continuously with stage 4 to reach the final number.

1389
01:04:38,500 --> 01:04:43,340
 So number will be very ugly, but, you know, that's how the DFT actually give you, right,

1390
01:04:43,340 --> 01:04:47,060
 the same result as the actual DFT numbers.

1391
01:04:47,060 --> 01:04:48,060
 Okay.

1392
01:04:48,060 --> 01:04:54,380
 And also, right, I also want to show you that if you look at the spectrum of this guy, right,

1393
01:04:54,380 --> 01:04:59,940
 in other words, the plot of this guy, remember, these are not real numbers.

1394
01:04:59,940 --> 01:05:00,940
 All right.

1395
01:05:00,940 --> 01:05:07,460
 If you, even if you have a real input after DFT, very likely you will get a complex number.

1396
01:05:07,460 --> 01:05:11,100
 The reason is this DFT measure itself is complex.

1397
01:05:11,100 --> 01:05:12,100
 Okay.

1398
01:05:12,100 --> 01:05:15,100
 Every time you see e2 part of something, it's very likely it's a complex number.

1399
01:05:15,100 --> 01:05:16,100
 Right.

1400
01:05:16,100 --> 01:05:18,620
 So the result will also be a complex number.

1401
01:05:18,620 --> 01:05:24,700
 And normally if you want to show the spectrum of a complex signal, complex spectrum, you

1402
01:05:24,700 --> 01:05:27,900
 have to show that in terms of magnitude and phase.

1403
01:05:27,900 --> 01:05:28,900
 Okay.

1404
01:05:28,900 --> 01:05:32,779
 There are only two ways to represent complex numbers, real plus imaginary or magnitude

1405
01:05:32,779 --> 01:05:33,779
 versus phase.

1406
01:05:33,779 --> 01:05:34,779
 Right.

1407
01:05:34,779 --> 01:05:38,980
 For signal processing, more likely we're doing magnitude and phase plot.

1408
01:05:38,980 --> 01:05:39,980
 Right.

1409
01:05:39,980 --> 01:05:42,580
 The reason is magnitude is more important than phase.

1410
01:05:42,580 --> 01:05:43,580
 Right.

1411
01:05:43,580 --> 01:05:46,580
 So we want to know the magnitude and the phase separately.

1412
01:05:46,580 --> 01:05:51,340
 So if you recall last time we said that if I give you a real signal input, right, I

1413
01:05:51,340 --> 01:05:57,100
 cannot guarantee the output is very likely unreal, complex, but one thing I can guarantee

1414
01:05:57,100 --> 01:06:00,860
 you is that the magnitude will be symmetric.

1415
01:06:00,860 --> 01:06:05,259
 Remember that real signal, you get a DFT, you get a symmetric spectrum.

1416
01:06:05,259 --> 01:06:06,259
 Right.

1417
01:06:06,259 --> 01:06:07,259
 So here's one example.

1418
01:06:07,259 --> 01:06:10,299
 You will get a symmetric spectrum like this for magnitude.

1419
01:06:10,299 --> 01:06:11,299
 Right.

1420
01:06:11,299 --> 01:06:14,259
 But for phase, it will be very tricky.

1421
01:06:14,259 --> 01:06:15,259
 Right.

1422
01:06:15,260 --> 01:06:21,220
 So for example, this one, right, in fact, this is a linear phase, but you will see that,

1423
01:06:21,220 --> 01:06:25,300
 well, the line goes up, but suddenly comes down here.

1424
01:06:25,300 --> 01:06:30,820
 The reason is that I already reach so-called some boundary, I have to do a truncation,

1425
01:06:30,820 --> 01:06:33,460
 sorry, a flip sign to the negative one.

1426
01:06:33,460 --> 01:06:34,460
 Right.

1427
01:06:34,460 --> 01:06:35,460
 But in fact, this is actually a linear phase.

1428
01:06:35,460 --> 01:06:38,700
 So later we're going to talk about linear phase, but I just want to show that linear

1429
01:06:38,700 --> 01:06:42,340
 phase may have this sudden jump due to the range stuff.

1430
01:06:42,340 --> 01:06:43,340
 Right.

1431
01:06:43,340 --> 01:06:44,340
 Later we're going to see this.

1432
01:06:44,340 --> 01:06:45,340
 Right.

1433
01:06:45,340 --> 01:06:50,100
 So, okay, most important thing I want you to, let's even memorize this.

1434
01:06:50,100 --> 01:06:53,780
 It's the actual advantage we have in terms of computation.

1435
01:06:53,780 --> 01:06:54,780
 All right.

1436
01:06:54,780 --> 01:07:02,260
 But first of all, how can we, okay, what can we use to describe a computational complex

1437
01:07:02,260 --> 01:07:03,260
 of an algorithm?

1438
01:07:03,260 --> 01:07:04,260
 Okay.

1439
01:07:04,260 --> 01:07:05,340
 How many of you have learned this?

1440
01:07:05,340 --> 01:07:06,340
 I just wondering.

1441
01:07:06,340 --> 01:07:10,820
 You know, how many of you can recognize what I'm writing here?

1442
01:07:10,820 --> 01:07:11,820
 Okay.

1443
01:07:11,820 --> 01:07:12,820
 You know that, right?

1444
01:07:12,820 --> 01:07:14,020
 How many others, guys?

1445
01:07:14,020 --> 01:07:18,540
 Have you learned this big O analysis in your undergraduate study?

1446
01:07:18,540 --> 01:07:19,540
 Okay.

1447
01:07:19,540 --> 01:07:20,540
 You have learned it.

1448
01:07:20,540 --> 01:07:21,780
 I see some people raising their hand.

1449
01:07:21,780 --> 01:07:22,780
 Okay.

1450
01:07:22,780 --> 01:07:24,620
 Let me just explain, since most of us do not know this.

1451
01:07:24,620 --> 01:07:25,620
 Right.

1452
01:07:25,620 --> 01:07:30,420
 So, when we talk about like one algorithm, it's cheaper than the other, or one algorithm

1453
01:07:30,420 --> 01:07:31,900
 is more expensive than the other.

1454
01:07:31,900 --> 01:07:32,900
 Right.

1455
01:07:32,900 --> 01:07:34,700
 We have to quantify the complexity.

1456
01:07:34,700 --> 01:07:35,700
 Okay.

1457
01:07:35,700 --> 01:07:39,540
 So there are many ways to quantify a complexity of an algorithm.

1458
01:07:39,540 --> 01:07:42,540
 The most commonly used one is called big O analysis.

1459
01:07:42,540 --> 01:07:43,540
 All right.

1460
01:07:43,540 --> 01:07:46,060
 Let me define what is big O analysis.

1461
01:07:46,060 --> 01:07:52,740
 So let's first start by defining the G function as the actual number of operation that I have

1462
01:07:52,740 --> 01:07:54,500
 to do for this algorithm.

1463
01:07:54,500 --> 01:07:55,500
 Right.

1464
01:07:55,500 --> 01:07:56,900
 So GN give you the exact number.

1465
01:07:56,900 --> 01:07:59,980
 For example, 10 times, 11 times, that's the GN.

1466
01:07:59,980 --> 01:08:00,980
 Right.

1467
01:08:00,980 --> 01:08:04,060
 But sometimes we don't care about the actual numbers.

1468
01:08:04,060 --> 01:08:08,340
 We care about is this function upper bounded by something?

1469
01:08:08,340 --> 01:08:11,100
 Or in other words, what's the worst case?

1470
01:08:11,100 --> 01:08:13,819
 What's the worst case this function can be?

1471
01:08:13,819 --> 01:08:14,819
 Right.

1472
01:08:14,819 --> 01:08:17,979
 Because the actual number of operation depends on the length of the signals.

1473
01:08:17,979 --> 01:08:20,260
 Depends on your, maybe even the quantity of the signals.

1474
01:08:20,260 --> 01:08:21,260
 Right.

1475
01:08:21,260 --> 01:08:25,819
 But we care about is that we want the algorithm don't be too bad, even if I have a worst case.

1476
01:08:25,819 --> 01:08:26,819
 Okay.

1477
01:08:26,819 --> 01:08:27,979
 So this is where the big O come from.

1478
01:08:27,979 --> 01:08:35,979
 The big O analysis provides you an upper bound saying that the actual number of operations

1479
01:08:35,979 --> 01:08:44,339
 of my algorithm cannot be larger than another function multiplied by a given constant.

1480
01:08:44,339 --> 01:08:45,339
 Okay.

1481
01:08:45,339 --> 01:08:51,139
 If you can find another function fm multiplied by some constant, the constant can up to you.

1482
01:08:51,139 --> 01:08:52,139
 Right.

1483
01:08:52,139 --> 01:08:53,139
 Just give a constant.

1484
01:08:53,139 --> 01:08:58,179
 Which can always surpass the worst case of my actual number of operations.

1485
01:08:58,179 --> 01:09:02,419
 These f is called the big O fn.

1486
01:09:02,420 --> 01:09:09,060
 In other words, if I give you say, hey, I have an algorithm that runs as the big O of

1487
01:09:09,060 --> 01:09:16,660
 fn, that means no matter how bad my algorithm runs, the number of operation cannot exceed

1488
01:09:16,660 --> 01:09:20,540
 a fixed constant times fn function.

1489
01:09:20,540 --> 01:09:26,660
 So I use this fn function to upper bound the worst case of my algorithm.

1490
01:09:26,660 --> 01:09:27,940
 Okay.

1491
01:09:27,940 --> 01:09:30,980
 So is it clear for everyone?

1492
01:09:30,979 --> 01:09:33,740
 Every time you see big O, you're thinking about the worst case.

1493
01:09:33,740 --> 01:09:35,500
 Worst case of my algorithm.

1494
01:09:35,500 --> 01:09:38,500
 It cannot be worse than that.

1495
01:09:38,500 --> 01:09:44,299
 So of course, if my worst case is susceptible, that means my algorithm is susceptible.

1496
01:09:44,299 --> 01:09:50,700
 I want to make sure my worst case upper bound is something reasonable or something controllable.

1497
01:09:50,700 --> 01:09:55,339
 That's why we always use this to describe an algorithm.

1498
01:09:55,339 --> 01:09:59,700
 So let's analyze, for example, DFT.

1499
01:09:59,700 --> 01:10:07,019
 So I remember I say that if I directly do DFT, so you have these slides here, I directly

1500
01:10:07,019 --> 01:10:08,019
 do DFT.

1501
01:10:08,019 --> 01:10:09,019
 This is what I'm going to do.

1502
01:10:09,019 --> 01:10:13,500
 I'm going to multiply this matrix with my vector.

1503
01:10:13,500 --> 01:10:19,980
 So I have to do a certain number of multiplication and a certain number of addition.

1504
01:10:19,980 --> 01:10:20,980
 These are something I have to do.

1505
01:10:20,980 --> 01:10:25,260
 For example, I have to multiply the first row with the first column.

1506
01:10:25,260 --> 01:10:31,060
 So I have to do n number of multiplications and maybe n minus 1 number of addition.

1507
01:10:31,060 --> 01:10:38,300
 So you can count exactly how many addition you have and how many multiplication you have.

1508
01:10:38,300 --> 01:10:45,900
 In fact, this is the total amount of operation you need for directly doing DFT.

1509
01:10:45,900 --> 01:10:50,140
 So it's n up ways 2n square minus n.

1510
01:10:50,140 --> 01:10:55,220
 So this is actually my actual amount of operations.

1511
01:10:56,180 --> 01:10:58,420
 But I probably only care about the worst case.

1512
01:10:58,420 --> 01:11:01,340
 Remember, only the worst case actually matters.

1513
01:11:01,340 --> 01:11:05,940
 So in fact, there are two terms, second order term, first order term.

1514
01:11:05,940 --> 01:11:08,140
 The first order term will not affect my worst case.

1515
01:11:08,140 --> 01:11:13,100
 The worst case will be dominated by the highest order in the GN.

1516
01:11:13,100 --> 01:11:20,740
 In other words, this kind of quality can be upper bounded by some constants times n square

1517
01:11:20,740 --> 01:11:24,780
 because second order term grows much faster than the first order term.

1518
01:11:24,780 --> 01:11:33,139
 So because of that, I can say that my DFT will have a big n square complexity.

1519
01:11:33,139 --> 01:11:34,300
 So these terms matter.

1520
01:11:34,300 --> 01:11:38,420
 You want to have this function to be as slow as possible, grows as slow as possible.

1521
01:11:38,420 --> 01:11:45,259
 So n square, that's upper bound for directly applying DFT.

1522
01:11:45,259 --> 01:11:50,059
 It's actually dominated by these two multiplied together.

1523
01:11:50,059 --> 01:11:52,980
 Then let's look at FFT.

1524
01:11:53,219 --> 01:11:58,860
 If I don't do the DFT directly, I do an indirect way to divide and conquer.

1525
01:11:58,860 --> 01:12:02,820
 So what I was doing just now, let's look at here.

1526
01:12:02,820 --> 01:12:11,179
 What I'm doing just now, like this, is that I have to do certain amount of stages, let's say k stages.

1527
01:12:11,179 --> 01:12:19,940
 But every stage, what I need to do, I need to do 1, 2, 3, 4, 5, exactly n number of addition.

1528
01:12:19,940 --> 01:12:24,379
 I have to do exactly n number of multiplication.

1529
01:12:24,379 --> 01:12:30,419
 So that means every stage, I need to have roughly 2n number of operations.

1530
01:12:30,419 --> 01:12:32,900
 Then multiplied by number of stages.

1531
01:12:32,900 --> 01:12:38,580
 This will be the total number of operation I need to do for FFT.

1532
01:12:38,580 --> 01:12:40,500
 It makes sense?

1533
01:12:40,500 --> 01:12:44,620
 So for n point FFT, how many stages I have?

1534
01:12:50,019 --> 01:12:52,900
 So imagine, let's say you have 8.

1535
01:12:52,900 --> 01:12:56,540
 I do one stage, I can break 8 into 4.

1536
01:12:56,540 --> 01:12:59,219
 I do another stage, I can break 4 into 2.

1537
01:12:59,219 --> 01:13:02,219
 I do another stage, I can break 2 into 1.

1538
01:13:02,219 --> 01:13:06,019
 So what I'm doing here is I'm doing log n.

1539
01:13:06,019 --> 01:13:16,019
 So if say I have, let's say, n point, 8 points, I need 2 to power of 3 to get 8.

1540
01:13:16,220 --> 01:13:21,220
 So number of stages exactly talking about how many division I have.

1541
01:13:21,220 --> 01:13:23,380
 I go from 8 to 4, that's one stage.

1542
01:13:23,380 --> 01:13:25,820
 4 to 2, that's second stage, 2 to 1 is the third stage.

1543
01:13:25,820 --> 01:13:27,460
 So I need 3 stages.

1544
01:13:27,460 --> 01:13:31,420
 So that number is equal to log n.

1545
01:13:31,420 --> 01:13:33,380
 Make sense?

1546
01:13:33,380 --> 01:13:34,140
 It's division.

1547
01:13:34,140 --> 01:13:36,180
 Every time you just cut it by half, right?

1548
01:13:36,180 --> 01:13:39,100
 Half, half, half, reach 1, you got log n.

1549
01:13:39,100 --> 01:13:41,700
 So the number of stages will be log n.

1550
01:13:41,700 --> 01:13:47,420
 So this is where this term come from.

1551
01:13:47,420 --> 01:13:50,820
 So you need log n, of course, we're talking about the base 2, right?

1552
01:13:50,820 --> 01:13:53,860
 So log 2 n, this will be the number of stages.

1553
01:13:53,860 --> 01:13:57,099
 But every stage I have n number of operations.

1554
01:13:57,099 --> 01:14:01,620
 So sum together, I will get n times log n number of operations.

1555
01:14:01,620 --> 01:14:03,300
 So this will be my upper bound.

1556
01:14:03,300 --> 01:14:07,260
 My big O analysis will be n times log n.

1557
01:14:07,300 --> 01:14:11,220
 So tell me n squared and log n, which is more expensive?

1558
01:14:16,220 --> 01:14:18,420
 First one, do you know what is the log function?

1559
01:14:18,420 --> 01:14:21,020
 How does the log function look like?

1560
01:14:21,020 --> 01:14:26,540
 OK, so let me just, my drawing is terrible, but I have to show you this.

1561
01:14:26,540 --> 01:14:32,180
 Forgive me my terrible drawing, but basically, no, no, no, what is this?

1562
01:14:32,180 --> 01:14:36,020
 OK, so suppose this is my axis, right?

1563
01:14:36,020 --> 01:14:38,220
 So x and y.

1564
01:14:38,220 --> 01:14:39,700
 OK, what is linear function?

1565
01:14:39,700 --> 01:14:41,460
 What is n?

1566
01:14:41,460 --> 01:14:43,540
 OK, n will be a straight line, right, like this.

1567
01:14:43,540 --> 01:14:44,940
 So this will be my n.

1568
01:14:44,940 --> 01:14:47,660
 OK, what is log function?

1569
01:14:47,660 --> 01:14:50,260
 Log function will be something like this, right?

1570
01:14:50,260 --> 01:14:55,020
 But the key here is that log function will grow slower and slower.

1571
01:14:55,020 --> 01:14:58,420
 You cannot surpass the linear function.

1572
01:14:58,420 --> 01:14:59,020
 Makes sense?

1573
01:14:59,020 --> 01:15:00,140
 Everybody agree?

1574
01:15:00,140 --> 01:15:01,580
 Basic math, right?

1575
01:15:01,580 --> 01:15:08,820
 So if I ask you, right, n versus log n, which one grows faster?

1576
01:15:08,820 --> 01:15:11,380
 n, right, n is more expensive than log n.

1577
01:15:11,380 --> 01:15:18,380
 OK, now how about n squared versus n, sorry, n times log n?

1578
01:15:18,380 --> 01:15:21,860
 n squared, right, because I just make it fear I just multiply by n both sides, right?

1579
01:15:21,860 --> 01:15:25,100
 But because n grows faster than log n.

1580
01:15:25,100 --> 01:15:29,180
 So log n squared will be faster than n log n.

1581
01:15:29,180 --> 01:15:30,860
 Makes sense?

1582
01:15:30,860 --> 01:15:40,580
 Because of that, right, now what the FFT shows is that it's successfully reducing the n squared

1583
01:15:40,580 --> 01:15:42,660
 operation to n times log n operation.

1584
01:15:42,660 --> 01:15:44,219
 So it makes it grow slower.

1585
01:15:44,219 --> 01:15:50,019
 In other words, the worst case becomes better, right, if you do FFT.

1586
01:15:50,019 --> 01:15:51,580
 Makes sense?

1587
01:15:51,580 --> 01:15:56,540
 Because the function upper bound that number becomes growing slower.

1588
01:15:56,540 --> 01:15:58,540
 So you are making the worst case better.

1589
01:15:58,540 --> 01:16:03,140
 You save commutation even if it's a worst case, all right?

1590
01:16:03,140 --> 01:16:08,540
 Because of that, right, this is where the advantages come from, right?

1591
01:16:08,540 --> 01:16:11,019
 So this is kind of better than n squared.

1592
01:16:11,019 --> 01:16:17,460
 So if you visualize the computational complex as the function of n, you will see that n squared,

1593
01:16:17,460 --> 01:16:19,460
 eventually, initially doesn't make a difference.

1594
01:16:19,460 --> 01:16:23,500
 But when n is large, right, the gain is huge.

1595
01:16:23,500 --> 01:16:28,100
 You save a huge amount of commutation, right, comparing DFT with FFT.

1596
01:16:28,100 --> 01:16:31,460
 That's why everybody uses FFT, right?

1597
01:16:31,460 --> 01:16:34,860
 Because we're not talking about like only a five point signal.

1598
01:16:34,860 --> 01:16:37,060
 We're talking about hundreds of points of signal, right?

1599
01:16:37,060 --> 01:16:38,820
 Maybe a million points of signal.

1600
01:16:38,820 --> 01:16:41,020
 Then doing FFT is terrible, right?

1601
01:16:41,020 --> 01:16:42,460
 Nobody doing that.

1602
01:16:42,460 --> 01:16:46,180
 So this is why in practice, everybody will do FFT.

1603
01:16:46,180 --> 01:16:52,540
 But when we analyze the process, we do FFT because DFT is easy to analyze, right?

1604
01:16:52,540 --> 01:16:54,700
 But anyway, they both of them give you the same result.

1605
01:16:54,700 --> 01:16:57,580
 It doesn't make a difference, okay?

1606
01:16:58,580 --> 01:17:03,180
 All right, it's better because last week I just mentioned the advantage, but I didn't

1607
01:17:03,180 --> 01:17:05,140
 explain where the advantages come from, right?

1608
01:17:05,140 --> 01:17:07,780
 So I hope this one gives you a better idea, right?

1609
01:17:07,780 --> 01:17:13,900
 Why we have this advantage by doing the smarter way of dividing and concur.

1610
01:17:13,900 --> 01:17:14,900
 Okay?

1611
01:17:14,900 --> 01:17:19,100
 Any questions before I move on?

1612
01:17:19,100 --> 01:17:21,100
 Yes, yes?

1613
01:17:21,620 --> 01:17:22,620
 Yes, yes?

1614
01:17:22,620 --> 01:17:28,620
 How these numbers are arranged?

1615
01:17:28,620 --> 01:17:32,660
 Okay, so her question is this.

1616
01:17:32,660 --> 01:17:39,460
 I guess you are saying that do we have to memorize how this function are?

1617
01:17:39,460 --> 01:17:45,500
 So the lady was asking like, okay, do we have to memorize how these numbers are arranged?

1618
01:17:45,500 --> 01:17:47,980
 Right.

1619
01:17:47,980 --> 01:17:50,260
 In principle, you can derive it.

1620
01:17:50,260 --> 01:17:57,020
 If you know how this one is derived, in principle, you can derive it, right?

1621
01:17:57,020 --> 01:18:00,420
 But memorizing that is not a very difficult job, I would say.

1622
01:18:00,420 --> 01:18:01,420
 Okay, why?

1623
01:18:01,420 --> 01:18:04,220
 I can tell you how I memorize it.

1624
01:18:04,220 --> 01:18:06,220
 I actually memorize it, to be honest.

1625
01:18:06,220 --> 01:18:07,220
 But it's very easy, right?

1626
01:18:07,220 --> 01:18:12,220
 For example, this is an eight point, eight point DFT, right?

1627
01:18:12,220 --> 01:18:13,220
 So FFT.

1628
01:18:13,220 --> 01:18:18,700
 So if it's eight point, I have to do, you know, let's look at the first half and the

1629
01:18:18,700 --> 01:18:20,020
 second half, right?

1630
01:18:20,020 --> 01:18:24,860
 So the first half will be always even number, even index, remember?

1631
01:18:24,860 --> 01:18:25,860
 Why?

1632
01:18:25,860 --> 01:18:28,940
 Because here is already divided into even and odd, right?

1633
01:18:28,940 --> 01:18:31,780
 So all the even goes here, all the odd goes here, right?

1634
01:18:31,780 --> 01:18:37,020
 So all of these numbers in the top half, upper half will be even.

1635
01:18:37,020 --> 01:18:40,020
 If you see any odd number here, that means you are wrong, okay?

1636
01:18:40,020 --> 01:18:42,860
 And all the bottom half here will be odd number.

1637
01:18:42,860 --> 01:18:45,580
 You cannot have any even there.

1638
01:18:45,580 --> 01:18:48,780
 So you consider every stage is like a reshuffle of the numbers, right?

1639
01:18:48,780 --> 01:18:52,540
 So the first stage shuffled them into even and odd, all right?

1640
01:18:52,540 --> 01:18:56,860
 Okay, so then what they're doing is keep shuffling, okay?

1641
01:18:56,860 --> 01:19:03,259
 So here you are talking about zero, one, two, three, sorry, you know, zero, two, four,

1642
01:19:03,259 --> 01:19:04,259
 six, right?

1643
01:19:04,259 --> 01:19:10,219
 But if you go one step back, you are picking the even number of the even number, right?

1644
01:19:10,219 --> 01:19:15,099
 In other words, you are picking not zero, how to say, not zero, two, four, six, but you

1645
01:19:15,100 --> 01:19:20,460
 are picking zero and four, because zero and four are the even subsequence of the even

1646
01:19:20,460 --> 01:19:21,460
 sequence.

1647
01:19:21,460 --> 01:19:23,820
 I don't know whether it makes sense, right?

1648
01:19:23,820 --> 01:19:29,060
 So you are picking, you are keep picking the even index from the original sequence, right?

1649
01:19:29,060 --> 01:19:31,260
 So here it gives you all the even numbers.

1650
01:19:31,260 --> 01:19:35,940
 So here they will say, well, these two have to be step of four instead of step of two,

1651
01:19:35,940 --> 01:19:36,940
 right?

1652
01:19:36,940 --> 01:19:39,780
 So it should be zero and four, and then you have four and six.

1653
01:19:39,780 --> 01:19:45,179
 So four and six are the odd subsequence of the even sequence.

1654
01:19:45,179 --> 01:19:47,500
 This is how I remember that, right?

1655
01:19:47,500 --> 01:19:51,620
 It's not very hard, but if you want, that's how I memorize it.

1656
01:19:51,620 --> 01:19:54,460
 Otherwise, you can always stick to the formula, right?

1657
01:19:54,460 --> 01:19:57,340
 If you have no choice, you can think about it, right?

1658
01:19:57,340 --> 01:20:02,259
 But if you want to memorize how these are shuffled, they are keep picking the even and

1659
01:20:02,259 --> 01:20:05,540
 odd subsequence from the previous stage, right?

1660
01:20:05,540 --> 01:20:08,019
 This is how I memorize it, okay?

1661
01:20:08,020 --> 01:20:09,020
 Okay, good.

1662
01:20:09,020 --> 01:20:12,740
 Any other questions before we move on?

1663
01:20:12,740 --> 01:20:19,100
 Okay, so I guess, so where are we?

1664
01:20:19,100 --> 01:20:21,020
 Okay, so we are going to take a break.

1665
01:20:21,020 --> 01:20:25,540
 Maybe it's come back around eight, right?

1666
01:20:25,540 --> 01:20:27,500
 Shorter so we can finish earlier, right?

1667
01:20:27,500 --> 01:20:29,580
 So come back at eight, all right?

1668
01:20:29,580 --> 01:20:32,780
 Okay, thank you.

1669
01:21:02,780 --> 01:21:03,780
 Okay.

1670
01:21:03,780 --> 01:21:04,780
 Okay.

1671
01:21:04,780 --> 01:21:05,780
 Okay.

1672
01:21:05,780 --> 01:21:06,780
 Okay.

1673
01:21:06,780 --> 01:21:07,780
 Okay.

1674
01:21:07,780 --> 01:21:08,780
 Okay.

1675
01:21:08,780 --> 01:21:09,780
 Okay.

1676
01:21:09,780 --> 01:21:10,780
 Okay.

1677
01:21:10,780 --> 01:21:11,780
 Okay.

1678
01:21:11,780 --> 01:21:12,780
 Okay.

1679
01:21:12,780 --> 01:21:13,780
 Okay.

1680
01:21:13,780 --> 01:21:14,780
 Okay.

1681
01:21:14,780 --> 01:21:15,780
 Okay.

1682
01:21:15,780 --> 01:21:16,780
 Okay.

1683
01:21:16,780 --> 01:21:17,780
 Okay.

1684
01:21:17,780 --> 01:21:18,780
 Okay.

1685
01:21:18,780 --> 01:21:19,780
 Okay.

1686
01:21:19,780 --> 01:21:20,780
 Okay.

1687
01:21:20,780 --> 01:21:21,780
 Okay.

1688
01:21:21,780 --> 01:21:22,780
 Okay.

1689
01:21:22,780 --> 01:21:23,780
 Okay.

1690
01:21:23,780 --> 01:21:24,780
 Okay.

1691
01:21:24,780 --> 01:21:25,780
 Okay.

1692
01:21:25,780 --> 01:21:26,780
 Okay.

1693
01:21:26,780 --> 01:21:27,780
 Okay.

1694
01:21:27,780 --> 01:21:28,780
 Okay.

1695
01:21:28,780 --> 01:21:29,780
 Okay.

1696
01:21:29,780 --> 01:21:30,780
 Okay.

1697
01:21:30,780 --> 01:21:31,780
 Okay.

1698
01:21:31,780 --> 01:21:32,780
 Okay.

1699
01:21:32,780 --> 01:21:33,780
 Okay.

1700
01:21:33,780 --> 01:21:34,780
 Okay.

1701
01:21:34,780 --> 01:21:35,780
 Okay.

1702
01:21:35,780 --> 01:21:36,780
 Okay.

1703
01:21:36,780 --> 01:21:37,780
 Okay.

1704
01:21:37,780 --> 01:21:38,780
 Okay.

1705
01:21:38,780 --> 01:21:39,780
 Okay.

1706
01:21:39,780 --> 01:21:40,780
 Okay.

1707
01:21:40,780 --> 01:21:41,780
 Okay.

1708
01:21:41,780 --> 01:21:42,780
 Okay.

1709
01:21:42,780 --> 01:21:43,780
 Okay.

1710
01:21:43,780 --> 01:21:44,780
 Okay.

1711
01:21:44,780 --> 01:21:45,780
 Okay.

1712
01:21:45,780 --> 01:21:46,780
 Okay.

1713
01:21:46,780 --> 01:21:47,780
 Okay.

1714
01:21:47,780 --> 01:21:48,780
 Okay.

1715
01:21:48,780 --> 01:21:49,780
 Okay.

1716
01:21:49,780 --> 01:21:50,780
 Okay.

1717
01:21:50,780 --> 01:21:51,780
 Okay.

1718
01:21:51,780 --> 01:21:52,780
 Okay.

1719
01:21:52,780 --> 01:21:53,780
 Okay.

1720
01:21:53,780 --> 01:21:54,780
 Okay.

1721
01:21:54,780 --> 01:21:55,780
 Okay.

1722
01:21:55,780 --> 01:21:56,780
 Okay.

1723
01:21:56,780 --> 01:21:57,780
 Okay.

1724
01:21:57,780 --> 01:21:58,780
 Okay.

1725
01:21:58,780 --> 01:21:59,780
 Okay.

1726
01:21:59,780 --> 01:22:00,780
 Okay.

1727
01:22:00,780 --> 01:22:01,780
 Okay.

1728
01:22:30,780 --> 01:22:31,780
 Okay.

1729
01:23:00,780 --> 01:23:01,780
 Okay.

1730
01:23:30,780 --> 01:23:31,780
 Okay.

1731
01:24:00,780 --> 01:24:01,780
 Okay.

1732
01:24:30,780 --> 01:24:31,780
 Okay.

1733
01:25:00,780 --> 01:25:01,780
 Okay.

1734
01:25:30,780 --> 01:25:31,780
 Okay.

1735
01:26:00,780 --> 01:26:01,780
 Okay.

1736
01:26:30,780 --> 01:26:31,780
 Okay.

1737
01:27:00,780 --> 01:27:01,780
 Okay.

1738
01:27:30,780 --> 01:27:31,780
 Okay.

1739
01:28:00,780 --> 01:28:01,780
 Okay.

1740
01:28:30,780 --> 01:28:31,780
 Okay.

1741
01:29:00,780 --> 01:29:01,780
 Okay.

1742
01:29:30,780 --> 01:29:31,780
 Okay.

1743
01:30:00,780 --> 01:30:01,780
 Okay.

1744
01:30:30,780 --> 01:30:31,780
 Okay.

1745
01:31:00,780 --> 01:31:01,780
 Okay.

1746
01:31:30,780 --> 01:31:35,780
 Okay.

1747
01:31:35,780 --> 01:31:36,780
 Okay.

1748
01:31:36,780 --> 01:31:37,780
 Okay.

1749
01:31:37,780 --> 01:31:38,780
 Okay.

1750
01:31:38,780 --> 01:31:39,780
 Okay.

1751
01:31:39,780 --> 01:31:40,780
 Okay.

1752
01:31:40,780 --> 01:31:41,780
 We can start.

1753
01:31:41,780 --> 01:31:47,000
 So as a promise, I probably won't finish all the slides today.

1754
01:31:47,000 --> 01:31:52,360
 Some of them I probably will move to next week and I will try to remove some of the components

1755
01:31:52,360 --> 01:31:54,300
 because I think it's too much.

1756
01:31:54,300 --> 01:31:55,300
 All right.

1757
01:31:55,300 --> 01:32:00,340
 I will promise we will try to finish by let's say 9.10 or something so that you can catch

1758
01:32:00,340 --> 01:32:01,340
 the bus.

1759
01:32:01,340 --> 01:32:03,940
 So give me a signal if I run out of time.

1760
01:32:03,940 --> 01:32:05,940
 If I run out of time, give me a signal.

1761
01:32:05,940 --> 01:32:08,740
 But anyway, we talked about FFT.

1762
01:32:08,740 --> 01:32:12,740
 That was something pretty much I didn't mention very clearly last time but it's important

1763
01:32:12,740 --> 01:32:15,380
 so that's why I was going to spend time there.

1764
01:32:15,380 --> 01:32:16,780
 But all of this we talked about.

1765
01:32:16,780 --> 01:32:21,660
 FFT, DFT, DTFT, these are something to do with signal.

1766
01:32:21,660 --> 01:32:27,460
 We're trying to represent the signal in the way that they give you some features, useful

1767
01:32:27,460 --> 01:32:28,460
 information.

1768
01:32:28,460 --> 01:32:31,820
 But another important aspect is the system.

1769
01:32:31,820 --> 01:32:35,660
 So signal is pretty much the data you have.

1770
01:32:35,660 --> 01:32:39,420
 You want to process the data such that you want to represent the signal such that they

1771
01:32:39,420 --> 01:32:41,620
 can be better analyzed.

1772
01:32:41,620 --> 01:32:43,340
 But we haven't talked about the system yet.

1773
01:32:43,340 --> 01:32:48,660
 So the system is actually how you want to process the signal, how you want to let's

1774
01:32:48,660 --> 01:32:55,300
 say manipulate the signal, process the signal such that they somehow satisfy your need.

1775
01:32:55,300 --> 01:32:59,780
 So now from now on, the focus will be the system.

1776
01:32:59,780 --> 01:33:02,980
 So now we're going from signal to system.

1777
01:33:02,980 --> 01:33:06,940
 So how the system look like for this subject.

1778
01:33:06,940 --> 01:33:12,260
 We mentioned a little bit last week saying that we have to say something constrained

1779
01:33:12,260 --> 01:33:13,420
 on the system.

1780
01:33:13,420 --> 01:33:19,260
 For example, we want to talk about LTI system, if you still remember what this means.

1781
01:33:19,260 --> 01:33:24,900
 It means the system must be linear and the system must be time-invaryed.

1782
01:33:25,299 --> 01:33:30,780
 This is always the assumption we make for this class, the LTI system.

1783
01:33:30,780 --> 01:33:37,780
 And also we will have multiple ways to represent the system, just like we have multiple ways

1784
01:33:37,780 --> 01:33:39,299
 to represent the signal.

1785
01:33:39,299 --> 01:33:45,059
 We say the signal can be representing time, in frequency, they can be discreet, they can

1786
01:33:45,059 --> 01:33:46,299
 be analog.

1787
01:33:46,299 --> 01:33:52,540
 So for system, we are also going to learn a few ways to represent a system.

1788
01:33:52,540 --> 01:33:56,380
 So which is a better way to represent depends on your task.

1789
01:33:56,380 --> 01:34:00,860
 So one way we can represent a system is called a transfer function.

1790
01:34:00,860 --> 01:34:04,860
 So transfer function is something to do with the frequency representation, so later we'll

1791
01:34:04,860 --> 01:34:05,860
 get there.

1792
01:34:05,860 --> 01:34:12,460
 But transfer function, you can consider this as a spectrum of the system, like a filter.

1793
01:34:12,460 --> 01:34:17,140
 We talk about, for some of you have learned filter, we call the filter like low pass,

1794
01:34:17,140 --> 01:34:18,140
 high pass.

1795
01:34:18,140 --> 01:34:21,340
 This is talking about the spectrum of the filter.

1796
01:34:21,340 --> 01:34:26,460
 So the transfer function is always the same like similarly describing the system from

1797
01:34:26,460 --> 01:34:28,380
 the frequency perspective.

1798
01:34:28,380 --> 01:34:35,860
 But based on the type of transfer function, the transfer function may have different types.

1799
01:34:35,860 --> 01:34:41,580
 But based on the types of the transfer function, we can categorize the system in the following

1800
01:34:41,580 --> 01:34:43,260
 two ways.

1801
01:34:43,260 --> 01:34:51,260
 The first one is to look at what is the impulse response of a system.

1802
01:34:51,260 --> 01:34:53,020
 So what is the impulse response?

1803
01:34:53,020 --> 01:34:56,140
 I hope all of you should know.

1804
01:34:56,140 --> 01:35:02,820
 So impulse function means I give you a system, I inject an input signal, which is an impulse

1805
01:35:02,820 --> 01:35:03,820
 signal.

1806
01:35:03,820 --> 01:35:05,740
 What is the output I have?

1807
01:35:05,740 --> 01:35:09,460
 So this will be the impulse response of a system.

1808
01:35:09,460 --> 01:35:17,700
 So if the impulse response have finite number of impulse in the response.

1809
01:35:17,700 --> 01:35:25,179
 So this is called FIR, which literally means finite impulse response transfer function.

1810
01:35:25,179 --> 01:35:29,780
 So what counting the number of impulse I have in my impulse response.

1811
01:35:29,780 --> 01:35:33,380
 If it's a finite number of impulse, that means it's FIR.

1812
01:35:33,380 --> 01:35:38,460
 So you keep hearing the term FIR many times because I'm going to focus on FIR for my part,

1813
01:35:38,460 --> 01:35:39,860
 the filter design later.

1814
01:35:39,860 --> 01:35:44,179
 But there's another type, we call it the opposite type.

1815
01:35:44,180 --> 01:35:51,020
 So if you have an impulse response, but unfortunately you have infinitely many impulse in your impulse

1816
01:35:51,020 --> 01:35:57,740
 response, it means this is an IR filter, IR transfer function.

1817
01:35:57,740 --> 01:36:04,500
 So later we're going to learn that why sometimes we also call FIR as a non-recursive function.

1818
01:36:04,500 --> 01:36:06,860
 IR is a recursive function.

1819
01:36:06,860 --> 01:36:11,380
 It's because later when we talk about the difference equation, you will see that IR,

1820
01:36:11,380 --> 01:36:15,580
 normally the right hand side will also involve Y. Y means the output.

1821
01:36:15,580 --> 01:36:20,420
 So you have to represent the current time output using the past time output.

1822
01:36:20,420 --> 01:36:22,140
 This is what we call the recursive.

1823
01:36:22,140 --> 01:36:28,220
 You have to recursively fill it back into your system to implement an IR.

1824
01:36:28,220 --> 01:36:30,340
 But FIR, you don't have to.

1825
01:36:30,340 --> 01:36:35,260
 So FIR, you can just write the output as a function of X.

1826
01:36:35,260 --> 01:36:37,220
 So it's also called non-recursive.

1827
01:36:37,220 --> 01:36:44,500
 This is by counting, by looking at how many terms you have in the impulse response.

1828
01:36:44,500 --> 01:36:50,820
 This is one way to categorize the system into FIR and IR.

1829
01:36:50,820 --> 01:36:52,580
 But that's not the only way.

1830
01:36:52,580 --> 01:36:54,740
 It's not the only way to categorize.

1831
01:36:54,740 --> 01:37:02,220
 You can also look at how the transfer function selects the frequency.

1832
01:37:02,220 --> 01:37:05,780
 So I assume that some of you may already know this.

1833
01:37:05,780 --> 01:37:13,900
 For example, you can actually look at the magnitude function of the transfer function.

1834
01:37:13,900 --> 01:37:20,620
 And for example, you may encounter some kind of transfer function in the way that they

1835
01:37:20,620 --> 01:37:25,540
 only maybe allow certain frequency band to survive.

1836
01:37:25,540 --> 01:37:29,540
 In other words, if you look at the transfer function, there will be one within, let's

1837
01:37:29,540 --> 01:37:32,900
 say here, low frequency range.

1838
01:37:32,900 --> 01:37:36,099
 So this type will be called the low pass filter.

1839
01:37:36,099 --> 01:37:42,379
 In other words, that kind of system will only let the low frequency component survive in

1840
01:37:42,379 --> 01:37:44,900
 the processing period.

1841
01:37:44,900 --> 01:37:48,940
 High frequency components will be killed in the system.

1842
01:37:48,940 --> 01:37:53,820
 You can have the opposite, which will be called the high pass filter, means that they kill

1843
01:37:53,820 --> 01:37:57,259
 the low frequency and they survive the high frequency.

1844
01:37:57,259 --> 01:37:59,379
 So it's exactly the opposite.

1845
01:37:59,380 --> 01:38:04,540
 So it depends on which frequency will be passing through the system.

1846
01:38:04,540 --> 01:38:09,100
 You can actually categorize them in the way by looking at the transfer function.

1847
01:38:09,100 --> 01:38:14,860
 And normally we call the frequency that can survive as the pass band.

1848
01:38:14,860 --> 01:38:19,940
 In other words, if this is my transfer function, the pass band will be here.

1849
01:38:19,940 --> 01:38:21,540
 Can you see that?

1850
01:38:21,540 --> 01:38:22,540
 Okay, here.

1851
01:38:22,540 --> 01:38:25,220
 This will be my pass band.

1852
01:38:25,220 --> 01:38:27,220
 For this transfer function, the pass band will be the opposite.

1853
01:38:27,380 --> 01:38:30,500
 It will be the high frequency components.

1854
01:38:30,500 --> 01:38:32,860
 And of course, there will also be the stop band.

1855
01:38:32,860 --> 01:38:35,740
 Stop band means all of these response will be zero.

1856
01:38:35,740 --> 01:38:40,140
 So the stop band for low pass will be the high pass components.

1857
01:38:40,140 --> 01:38:47,460
 So all of these are looking at how the transfer function selects the frequency components

1858
01:38:47,460 --> 01:38:50,820
 when it's processing the signal.

1859
01:38:50,820 --> 01:38:52,740
 So it depends on the frequency.

1860
01:38:52,740 --> 01:38:55,940
 There's also others, for example, they may not only look at the low frequency, they may

1861
01:38:55,940 --> 01:38:59,460
 look at a specific range of the frequency.

1862
01:38:59,460 --> 01:39:03,820
 So you can specify as a say omega C2 and omega C1.

1863
01:39:03,820 --> 01:39:05,219
 This is the range.

1864
01:39:05,219 --> 01:39:10,019
 If they're only selecting a certain range, not too low, not too high, this is called

1865
01:39:10,019 --> 01:39:11,860
 band pass filter.

1866
01:39:11,860 --> 01:39:16,780
 You can also make a band stop filter, means that only the selected range will be killed.

1867
01:39:16,780 --> 01:39:20,900
 But very likely these four will be the general cases you will be encounter.

1868
01:39:20,900 --> 01:39:25,500
 If you want to view the system from the frequency selection perspective.

1869
01:39:26,060 --> 01:39:32,020
 I believe most of you should learn this, even if you do the analog signal processing.

1870
01:39:32,020 --> 01:39:38,780
 But the frequency response can be a criteria to categorize the digital filters.

1871
01:39:38,780 --> 01:39:42,140
 And all of these are talking about the magnitude, not the phase.

1872
01:39:42,140 --> 01:39:45,740
 So just not mentioned that you can actually look at the magnitude, you can have the phase,

1873
01:39:45,740 --> 01:39:52,260
 but what I'm talking about is only look at the magnitude.

1874
01:39:52,260 --> 01:40:02,660
 So the DTFT, when we say a system, normally we use a function for example H to represent

1875
01:40:02,660 --> 01:40:04,660
 a system.

1876
01:40:04,660 --> 01:40:09,420
 The transfer function is normally used uppercase H to represent a transfer function, in other

1877
01:40:09,420 --> 01:40:13,020
 words the spectrum of the impulse response.

1878
01:40:13,020 --> 01:40:17,260
 But you can also do a DTFT to get it back to the impulse response.

1879
01:40:17,580 --> 01:40:24,540
 In other words the impulse response can be obtained by an inverse DTFT of the transfer

1880
01:40:24,540 --> 01:40:25,540
 function.

1881
01:40:25,540 --> 01:40:29,260
 That's how you can convert between the two.

1882
01:40:29,260 --> 01:40:35,660
 But basically impulse response representing in the lower case is actually a time domain

1883
01:40:35,660 --> 01:40:37,820
 function.

1884
01:40:37,820 --> 01:40:42,300
 Transfer function representing the uppercase, that's a frequency domain function.

1885
01:40:42,300 --> 01:40:45,180
 This is something you must be very clear.

1886
01:40:45,180 --> 01:40:51,500
 And just now we are saying that for specifying the frequency, remember here we need to specify

1887
01:40:51,500 --> 01:40:52,500
 the frequency.

1888
01:40:52,500 --> 01:40:57,500
 For example here we have to specify omega c indicating what is the low pass we are talking

1889
01:40:57,500 --> 01:41:00,860
 about, what is the frequency range we are talking about.

1890
01:41:00,860 --> 01:41:08,140
 Sometimes we need two numbers, omega c1, omega c2 to represent a specific range of the frequency.

1891
01:41:08,140 --> 01:41:15,300
 So all of these numbers, omega c, omega c1, omega c2, we call that cutoff frequency.

1892
01:41:15,300 --> 01:41:20,100
 Means the frequency that I go from surviving to killing, or in other words from passing

1893
01:41:20,100 --> 01:41:22,340
 to stop.

1894
01:41:22,340 --> 01:41:27,300
 That kind of threshold we call the cutoff frequency.

1895
01:41:27,300 --> 01:41:32,260
 So these are some terms we usually use to describe the frequency behavior.

1896
01:41:32,260 --> 01:41:36,460
 So just now I think one of you asked me, I think that gentleman asked me say hey, all

1897
01:41:36,460 --> 01:41:43,500
 of you talk about before, like anti-aliasing filters, reconstruction filters, you are assuming

1898
01:41:43,500 --> 01:41:45,100
 a very ideal case.

1899
01:41:45,100 --> 01:41:48,260
 In other words, all of these transitions are very sharp.

1900
01:41:48,260 --> 01:41:51,020
 Suddenly it goes from passband to stopband.

1901
01:41:51,020 --> 01:41:57,500
 So yes, all of the so-called low pass filter, high pass filter showing up here, we call

1902
01:41:57,500 --> 01:41:59,860
 it ideal filter.

1903
01:41:59,860 --> 01:42:02,940
 Once the ideal, I mean I don't assume any transition.

1904
01:42:02,940 --> 01:42:06,160
 They can do a sudden transition from stopband to passband.

1905
01:42:06,160 --> 01:42:13,040
 So this ideal case will have the magnitude of response equal to one, exact one in the

1906
01:42:13,040 --> 01:42:16,880
 passband and exactly zero to the stopband.

1907
01:42:16,880 --> 01:42:21,760
 That's what we want, but unfortunately not always can be implementable.

1908
01:42:21,760 --> 01:42:25,240
 That's something we're going to talk about later, filter design.

1909
01:42:25,240 --> 01:42:29,599
 But ideal case, we always assume that they have zero phase everywhere.

1910
01:42:29,599 --> 01:42:34,440
 Means the phase response is always zero.

1911
01:42:34,799 --> 01:42:36,639
 I'm talking about ideal case.

1912
01:42:36,639 --> 01:42:42,320
 But this is useful in theory because they make things simple.

1913
01:42:42,320 --> 01:42:46,960
 But bear in mind that if you see such kind of filters, like sharp transition, exactly

1914
01:42:46,960 --> 01:42:51,719
 zero, exactly one, zero phase, it's not something practical.

1915
01:42:51,719 --> 01:42:55,480
 It's only called ideal.

1916
01:42:55,480 --> 01:42:58,559
 So like I said, ideal filter just like a brick wall.

1917
01:42:58,559 --> 01:43:02,000
 The frequency is actually very sharp.

1918
01:43:02,040 --> 01:43:05,760
 And very likely they are not causal.

1919
01:43:05,760 --> 01:43:08,800
 We talked about the causality last time, if you remember.

1920
01:43:08,800 --> 01:43:11,560
 Current signal cannot depend on future input.

1921
01:43:11,560 --> 01:43:14,600
 This is the causality we're talking about.

1922
01:43:14,600 --> 01:43:17,840
 Unfortunately those ideal filters, they are not causal.

1923
01:43:17,840 --> 01:43:23,960
 There's another reason like they will be never realizable in the finite length LTI system

1924
01:43:23,960 --> 01:43:26,880
 because causality, this is something we must have.

1925
01:43:26,880 --> 01:43:28,800
 You cannot see the future value.

1926
01:43:28,800 --> 01:43:30,400
 That's a fundamental rule.

1927
01:43:30,799 --> 01:43:34,879
 This is just to explain that all of these are ideal filters.

1928
01:43:34,879 --> 01:43:39,240
 But of course, they will have some ideal characteristics.

1929
01:43:39,240 --> 01:43:45,160
 For example, you can always do DTFT, IDTFT to convert between transfer function and

1930
01:43:45,160 --> 01:43:46,879
 the impulse response.

1931
01:43:46,879 --> 01:43:50,719
 All of this we have learned, DTFT things.

1932
01:43:50,719 --> 01:43:52,879
 The ideal filter can be represented in this way.

1933
01:43:52,879 --> 01:43:57,799
 The magnitude can be one or zero depends on they are within the color frequency or outside

1934
01:43:57,799 --> 01:44:00,040
 the color frequency.

1935
01:44:00,040 --> 01:44:06,080
 I won't really repeat, but basically these are some mathematical theory for ideal filters

1936
01:44:06,080 --> 01:44:08,920
 and assuming the phase to be zero.

1937
01:44:08,920 --> 01:44:12,680
 Mathematical way, this is what just now the previous slide means mathematically.

1938
01:44:12,680 --> 01:44:16,880
 Likewise, this is actually low pass filter.

1939
01:44:16,880 --> 01:44:18,400
 All of this is low pass filter.

1940
01:44:18,400 --> 01:44:22,240
 You can also do the same thing for high pass filter if you want.

1941
01:44:22,240 --> 01:44:29,599
 I won't really repeat, but you can explain or describe the magnitude of the high pass,

1942
01:44:29,599 --> 01:44:31,120
 sorry, band stop filter.

1943
01:44:31,120 --> 01:44:33,599
 This is band stop filter in this way.

1944
01:44:33,599 --> 01:44:37,639
 And correspondingly, you can also compute the impulse response by simply your inverse

1945
01:44:37,639 --> 01:44:42,080
 DTFT to get it back to the impulse response.

1946
01:44:42,080 --> 01:44:45,160
 But here's a summary of all of this ideal filter.

1947
01:44:45,160 --> 01:44:46,160
 Let's make it specific.

1948
01:44:46,160 --> 01:44:50,679
 Ideal filter, they can be represented in the following way.

1949
01:44:50,680 --> 01:44:56,960
 Low pass, high pass, I won't repeat, but you can use this table as a summary of all of

1950
01:44:56,960 --> 01:45:03,000
 the four popular ideal filters we have, band pass and band stop.

1951
01:45:03,000 --> 01:45:05,920
 But bear in mind that all of them are not practical.

1952
01:45:05,920 --> 01:45:08,560
 You cannot have them in practice.

1953
01:45:08,560 --> 01:45:10,960
 But they are mathematically simple and beautiful.

1954
01:45:10,960 --> 01:45:13,760
 This is something we like it.

1955
01:45:13,760 --> 01:45:19,040
 So now talking about practical implementation.

1956
01:45:19,040 --> 01:45:22,360
 We always start from the ideal filters.

1957
01:45:22,360 --> 01:45:24,800
 Ideal filter is something we can design.

1958
01:45:24,800 --> 01:45:26,960
 We can start in ways.

1959
01:45:26,960 --> 01:45:34,200
 But then when you want to eventually develop something realizable or practical, how can

1960
01:45:34,200 --> 01:45:35,200
 we do this?

1961
01:45:35,200 --> 01:45:38,800
 Or what compromise we have to make?

1962
01:45:38,800 --> 01:45:43,840
 So basically, we can never have this very sharp transition.

1963
01:45:43,840 --> 01:45:51,800
 Once you move to the practical filters, you have to do some so-called relaxation to include

1964
01:45:51,800 --> 01:45:56,080
 a transition band between the pass band and stop band.

1965
01:45:56,080 --> 01:46:00,360
 So the big difference is that in practice, you will never see a sharp transition from

1966
01:46:00,360 --> 01:46:01,600
 zero to one.

1967
01:46:01,600 --> 01:46:06,680
 What you will see in practice is that when I move from pass band to stop band, or maybe

1968
01:46:06,680 --> 01:46:13,640
 the other way around, you have to have a certain range of the frequency to accommodate the

1969
01:46:13,640 --> 01:46:16,800
 transition from one to zero.

1970
01:46:16,800 --> 01:46:21,520
 And the range here is called transition band.

1971
01:46:21,520 --> 01:46:24,040
 When the transition band is zero, that means it's ideal.

1972
01:46:24,040 --> 01:46:26,760
 But in practice, transition band will never be zero.

1973
01:46:26,760 --> 01:46:27,760
 It will be something.

1974
01:46:27,760 --> 01:46:31,080
 We want to minimize it, but you cannot get zero.

1975
01:46:31,080 --> 01:46:37,520
 So this approximation, well, permits the magnitude response to decay slowly.

1976
01:46:37,520 --> 01:46:42,600
 Here it's decay slowly from the maximum to the minimum to zero.

1977
01:46:42,600 --> 01:46:46,920
 In other words, from the pass band to the stop band.

1978
01:46:46,920 --> 01:46:50,000
 And also, this is one compromise we have to make.

1979
01:46:50,000 --> 01:46:55,040
 Another compromise we have to make is that even within the pass band and the stop band,

1980
01:46:55,040 --> 01:46:59,320
 you will not have exactly one and zero.

1981
01:46:59,320 --> 01:47:04,240
 Remember, if you look at all of the functions, very, very ideal, all of these are one.

1982
01:47:04,240 --> 01:47:05,840
 All of the stop band are zero.

1983
01:47:05,840 --> 01:47:07,960
 In practice, this never happens.

1984
01:47:07,960 --> 01:47:16,240
 What you will have is some small deviation, fluctuations around the one, but they will

1985
01:47:16,240 --> 01:47:17,240
 never be one.

1986
01:47:17,240 --> 01:47:19,400
 They will be like up and down, up and down.

1987
01:47:19,400 --> 01:47:25,920
 So this is something we normally call it a ripple or smaller fluctuations.

1988
01:47:25,920 --> 01:47:31,000
 And also, we want to design the filter such that this deviation is minimized, but never

1989
01:47:31,000 --> 01:47:32,400
 be zero.

1990
01:47:32,400 --> 01:47:36,240
 So these are the two major phenomena you will observe.

1991
01:47:36,240 --> 01:47:42,760
 If you go from ideal filter to the practical filter, transition band and the ripples.

1992
01:47:42,760 --> 01:47:47,280
 So bear in mind that when we talk about filter design, these are the two factors you have

1993
01:47:47,280 --> 01:47:52,719
 to bear in mind that you want to use the limited resource to minimize the transition band and

1994
01:47:52,719 --> 01:47:55,200
 also minimize the ripple.

1995
01:47:55,200 --> 01:47:57,920
 So these are the two major phenomena.

1996
01:47:57,920 --> 01:48:01,280
 And again, this is actually magnitude, not phase.

1997
01:48:01,280 --> 01:48:03,400
 Remember we have two things, magnitude and phase.

1998
01:48:03,400 --> 01:48:05,960
 Here, we are talking about the magnitude.

1999
01:48:05,960 --> 01:48:08,720
 We will also talk about the phase separately.

2000
01:48:08,720 --> 01:48:11,600
 So now phase.

2001
01:48:11,600 --> 01:48:17,200
 So ideally we say that ideal kind of filters, you are going to zero phase anywhere.

2002
01:48:17,200 --> 01:48:19,080
 No phase change if you just apply that.

2003
01:48:19,080 --> 01:48:23,040
 They only preserve the signal phase, no change.

2004
01:48:23,040 --> 01:48:27,880
 But in practice, again, this is not kind of practical.

2005
01:48:27,880 --> 01:48:34,920
 So what will actually happen is that there will be a frequency shift property of the

2006
01:48:34,920 --> 01:48:40,280
 DTFT to impulse response of an ideal zero phase low pass filter.

2007
01:48:40,280 --> 01:48:43,320
 So what you will arrive at is the following.

2008
01:48:43,320 --> 01:48:48,000
 So this will be the actual impulse response.

2009
01:48:48,000 --> 01:48:52,080
 If you directly do the inverse DTFT of this low pass filter, you will get some kind of

2010
01:48:52,080 --> 01:48:53,320
 zinc function.

2011
01:48:53,320 --> 01:48:57,480
 If you don't do anything, remember last week we also showed this zinc function, remember?

2012
01:48:57,480 --> 01:49:01,280
 Like a kind of spread out from zero to infinity.

2013
01:49:01,280 --> 01:49:05,800
 But if you don't do anything, this zinc function will give you a non-causal behavior.

2014
01:49:05,800 --> 01:49:11,920
 In other words, you will get an impulse response from both pass and the filters.

2015
01:49:11,920 --> 01:49:16,160
 And also they give you infinitely long kind of impulse response.

2016
01:49:16,160 --> 01:49:21,800
 So both of them will be making the design to be unrealizable.

2017
01:49:21,800 --> 01:49:23,960
 So what you have to do is two things.

2018
01:49:23,960 --> 01:49:31,040
 You have the first truncating impulse response from infinitely long to finite number of terms.

2019
01:49:31,560 --> 01:49:36,519
 And also you have to deal with the non-causality here by doing some shift.

2020
01:49:36,519 --> 01:49:41,920
 So the truncated approximate may or may not exhibit the linear phase.

2021
01:49:41,920 --> 01:49:44,760
 Depends on the value n we choose.

2022
01:49:44,760 --> 01:49:49,600
 So in practice, even though we cannot make the phase to be zero, we wish the phase to

2023
01:49:49,600 --> 01:49:51,600
 be linear.

2024
01:49:51,600 --> 01:49:57,240
 So later we'll see that there is some trick or some rule to select the n such that even

2025
01:49:57,240 --> 01:50:02,040
 if we make the compromise, we can still land it at the linear phase filters.

2026
01:50:02,040 --> 01:50:03,920
 So this is something we wish to achieve.

2027
01:50:03,920 --> 01:50:06,599
 But here I just give you some kind of preview.

2028
01:50:06,599 --> 01:50:12,280
 We will have another lecture, I think maybe next week, to talk about design, the actual

2029
01:50:12,280 --> 01:50:13,280
 design of the filters.

2030
01:50:13,280 --> 01:50:19,040
 But here I just give you some idea of what exactly we need to do, going from ideal filter

2031
01:50:19,040 --> 01:50:23,000
 to practical filters.

2032
01:50:23,000 --> 01:50:28,000
 So the principle is that if you want to pass the impulse signal to a certain frequency

2033
01:50:28,000 --> 01:50:35,440
 range, for example, here is the low frequency range, you do not want to have a lot of distortion.

2034
01:50:35,440 --> 01:50:42,680
 Basically you want the signal to be undistorted, both in magnitude and phase, such that your

2035
01:50:42,680 --> 01:50:50,840
 transfer function should exhibit a unit magnitude response within the passband and also a linear

2036
01:50:50,840 --> 01:50:53,120
 phase response in the band of interest.

2037
01:50:53,120 --> 01:50:57,680
 So this is something we wish to have, like no distortion in the magnitude and only a

2038
01:50:57,680 --> 01:51:01,080
 linear phase in the band of interest.

2039
01:51:01,080 --> 01:51:08,040
 So to do so, what we actually need to do is that we need to make sure the zinc function

2040
01:51:08,040 --> 01:51:10,220
 is going to be like this.

2041
01:51:10,220 --> 01:51:16,400
 So basically you kind of shift the major component to the past, this kind of will solve the non-causality

2042
01:51:16,400 --> 01:51:22,839
 problem and also you want to do the truncation, which make the impulse response finite only

2043
01:51:22,839 --> 01:51:24,759
 within the window.

2044
01:51:24,759 --> 01:51:30,400
 So these are two practical things we normally need to do to make an ideal low pass filter

2045
01:51:30,400 --> 01:51:35,200
 to a practical low pass filter.

2046
01:51:35,200 --> 01:51:40,719
 So but actually these two major steps also need to determine how much you have to shift

2047
01:51:40,719 --> 01:51:43,639
 and what is the windowing function you are going to use.

2048
01:51:43,640 --> 01:51:47,200
 So this is actually something to do with the filter design.

2049
01:51:47,200 --> 01:51:53,080
 But basically if you have a windowing function to truncate the approximation and also doing

2050
01:51:53,080 --> 01:51:59,640
 a proper shift to make the filter causal, you will have something like this.

2051
01:51:59,640 --> 01:52:07,600
 So for example this is a n to equal to 13 point low pass zinc function, this is n equal

2052
01:52:07,600 --> 01:52:09,320
 to 14 zinc function.

2053
01:52:09,320 --> 01:52:16,960
 So both of them because of this time shift and also truncation, they will become a linear

2054
01:52:16,960 --> 01:52:20,679
 phase FIR filter.

2055
01:52:20,679 --> 01:52:21,679
 Remember what is FIR?

2056
01:52:21,679 --> 01:52:26,080
 FIR is counting the number of response in the time domain.

2057
01:52:26,080 --> 01:52:29,920
 If I have finite number of response in the time domain, that's FIR.

2058
01:52:29,920 --> 01:52:36,519
 So once I do truncation, I can convert an IRR into an FIR filter because within the window,

2059
01:52:36,520 --> 01:52:39,600
 the number of impulse or number of spikes are finite.

2060
01:52:39,600 --> 01:52:43,000
 So 13 or 14, this is FIR.

2061
01:52:43,000 --> 01:52:49,200
 And also because all of these spikes are moved to the past, this filter becomes causal.

2062
01:52:49,200 --> 01:52:57,160
 So by doing the shifting and truncation, I can make originally a non-causal, infinitely

2063
01:52:57,160 --> 01:53:02,520
 many kind of response into a causal and FIR filter.

2064
01:53:02,520 --> 01:53:06,760
 So this is what we need for the actual implementation.

2065
01:53:06,760 --> 01:53:12,360
 But this is one example to show you that the following doing this way will give you approximate

2066
01:53:12,360 --> 01:53:20,320
 transfer function which is not the same as the ideal but good enough as the approximate.

2067
01:53:20,320 --> 01:53:25,480
 So we'll get to the actual design later, maybe not today, maybe next week, but I just want

2068
01:53:25,480 --> 01:53:31,120
 to show you what's the gap between all of the things we covered before like ideal filters

2069
01:53:31,120 --> 01:53:33,400
 to the actual things can be designed.

2070
01:53:33,400 --> 01:53:38,840
 But basically you have to get very mind, you know, a time shift and the truncation.

2071
01:53:38,840 --> 01:53:46,120
 These are two things you have to do to overcome the non-causality and also the IR nature of

2072
01:53:46,120 --> 01:53:48,480
 the filters.

2073
01:53:48,480 --> 01:53:51,160
 So I'll also show some simple filter examples.

2074
01:53:51,160 --> 01:53:53,640
 I mean not too much.

2075
01:53:53,640 --> 01:53:55,559
 So here's one example.

2076
01:53:55,559 --> 01:53:57,960
 I don't know if I want to skip this because...

2077
01:53:58,960 --> 01:54:01,960
 Okay, let me see.

2078
01:54:01,960 --> 01:54:05,440
 Maybe I will skip this to the next time because next time I'm going to talk about design.

2079
01:54:05,440 --> 01:54:09,880
 So I will skip that but I will get back to this when I talk about the filter design because

2080
01:54:09,880 --> 01:54:10,880
 I think these are two details.

2081
01:54:10,880 --> 01:54:11,880
 We don't have time here.

2082
01:54:11,880 --> 01:54:16,960
 So I will skip here but I will get back to this next week on the actual design.

2083
01:54:16,960 --> 01:54:21,120
 But I want to directly go to the implementation part.

2084
01:54:21,120 --> 01:54:28,120
 So we talk about that, you know, we want to implement the filters that can be realized

2085
01:54:28,120 --> 01:54:29,120
 in practice.

2086
01:54:29,120 --> 01:54:34,040
 What will be the actual structure of the digital filters?

2087
01:54:34,040 --> 01:54:35,040
 So we have to...

2088
01:54:35,040 --> 01:54:41,180
 Normally with the way we represent feasible filters, we can use something we call it difference

2089
01:54:41,180 --> 01:54:43,200
 function, like this.

2090
01:54:43,200 --> 01:54:45,040
 So what is a difference function?

2091
01:54:45,040 --> 01:54:52,080
 So the difference function will be represented in terms of the output, the Y, as a function

2092
01:54:52,080 --> 01:54:59,840
 of both current time input or past time input plus possibly some past time output.

2093
01:54:59,840 --> 01:55:02,840
 Okay, let me explain why do we need my past time.

2094
01:55:02,840 --> 01:55:09,840
 So first of all, Y always used to denote the output for this course, I mean for filter

2095
01:55:09,840 --> 01:55:10,840
 design.

2096
01:55:10,840 --> 01:55:15,520
 So assume that Y always talking about the output of the system.

2097
01:55:15,520 --> 01:55:18,600
 X refer to the input of the system.

2098
01:55:18,600 --> 01:55:23,000
 I use lowercase because both of them are in time domain.

2099
01:55:23,000 --> 01:55:28,360
 So the index of the signal represent time step.

2100
01:55:28,360 --> 01:55:33,280
 So this N can be something in the past or something in the future.

2101
01:55:33,280 --> 01:55:40,280
 So for example, if I'm care about the output of time N, all the index with M, I can use

2102
01:55:40,719 --> 01:55:43,200
 N minus some positive number.

2103
01:55:43,200 --> 01:55:46,400
 These should be the past time.

2104
01:55:46,400 --> 01:55:47,400
 Make sense?

2105
01:55:47,400 --> 01:55:52,200
 So I want to represent the output at the time step N.

2106
01:55:52,200 --> 01:55:55,040
 Suppose N goes to equal to zero.

2107
01:55:55,040 --> 01:56:00,880
 So all the time step that is kind of smaller than this time step will be the past time.

2108
01:56:00,880 --> 01:56:07,400
 For example, if I'm care about my current time zero, my time minus one, minus two, minus

2109
01:56:07,400 --> 01:56:09,800
 three will be the past time signal.

2110
01:56:10,480 --> 01:56:16,880
 Because of that, I'm saying that here, even though this term involves some Y, but all

2111
01:56:16,880 --> 01:56:20,880
 of this Y are only the past time output.

2112
01:56:20,880 --> 01:56:21,880
 Why?

2113
01:56:21,880 --> 01:56:28,280
 Because if you look at index, it always equal to M minus K, and all the K here are positive

2114
01:56:28,280 --> 01:56:29,280
 number.

2115
01:56:29,280 --> 01:56:34,960
 So we are taking only the past value of the output.

2116
01:56:34,960 --> 01:56:38,000
 This is where the first term represent.

2117
01:56:38,000 --> 01:56:41,000
 They represent some past time output.

2118
01:56:41,000 --> 01:56:45,240
 We can use them to represent the current time output.

2119
01:56:45,240 --> 01:56:49,320
 The first term, the second term X, X means the input.

2120
01:56:49,320 --> 01:56:53,840
 But input can also involve current time input or past time input.

2121
01:56:53,840 --> 01:56:54,840
 So how should I know?

2122
01:56:54,840 --> 01:56:57,160
 I should look at the index.

2123
01:56:57,160 --> 01:57:01,480
 So the index here also equal to M minus K. But remember, be careful.

2124
01:57:01,480 --> 01:57:04,240
 Here the K can be zero.

2125
01:57:04,240 --> 01:57:10,280
 If my K could be zero, it means I'm using exactly the current time input.

2126
01:57:10,280 --> 01:57:14,840
 So here the second term involves both the current time input and the past time input.

2127
01:57:14,840 --> 01:57:22,639
 In other words, a general representation of a futures, in terms of the difference equation,

2128
01:57:22,639 --> 01:57:29,080
 will be representing the current time output using the past time output together with current

2129
01:57:29,080 --> 01:57:30,559
 and the past time input.

2130
01:57:30,560 --> 01:57:35,560
 This is a general expression for any kind of filters.

2131
01:57:35,560 --> 01:57:40,760
 Now what makes a difference for IR and FIR?

2132
01:57:40,760 --> 01:57:42,080
 Remember there are two kind of filters.

2133
01:57:42,080 --> 01:57:48,800
 If you view the filter in terms of how many spikes you have in the impulse response, IR

2134
01:57:48,800 --> 01:57:52,400
 and FIR, these are two categories we're just saying.

2135
01:57:52,400 --> 01:58:01,559
 So if you are talking about an IR, it means this term, this term can be non-zero.

2136
01:58:01,559 --> 01:58:05,480
 Let me repeat.

2137
01:58:05,480 --> 01:58:11,400
 If you have a difference equation that do involve some contribution from the past time

2138
01:58:11,400 --> 01:58:17,440
 output, it means this is an IR.

2139
01:58:17,559 --> 01:58:23,519
 If you don't see this term, for example here, if you see a difference function only representing

2140
01:58:23,519 --> 01:58:32,759
 the output using the past time input or current time input, this is an FIR.

2141
01:58:32,759 --> 01:58:39,240
 This is how you can tell whether it's FIR or IR from the difference equation.

2142
01:58:39,240 --> 01:58:49,920
 This is one thing you can use to tell.

2143
01:58:49,920 --> 01:58:55,840
 And also you can view the FIR as a special case of the IR.

2144
01:58:55,840 --> 01:58:56,840
 Why?

2145
01:58:56,840 --> 01:59:02,800
 Because for IR, if you let the decay, which is the coefficients, to be all zero, you can

2146
01:59:02,800 --> 01:59:06,280
 reduce the IR representation into FIR.

2147
01:59:06,320 --> 01:59:16,360
 So in this perspective, you can actually view the FIR as a special case of the IR.

2148
01:59:16,360 --> 01:59:17,440
 Make sense?

2149
01:59:17,440 --> 01:59:21,320
 So this is how you can view it.

2150
01:59:21,320 --> 01:59:27,960
 So the actual implementation, there will be correspondingly the design principle for

2151
01:59:27,960 --> 01:59:31,000
 FIR and the design principle for IR.

2152
01:59:31,000 --> 01:59:36,880
 And actually the implementation depends on either in software or hardware form.

2153
01:59:36,880 --> 01:59:38,480
 Depends on the applications.

2154
01:59:38,480 --> 01:59:45,440
 So now we have to talk about the structure.

2155
01:59:45,440 --> 01:59:52,960
 How can we design this digital filter structure using, for example, a certain principle to

2156
01:59:52,960 --> 01:59:54,960
 design FIR?

2157
01:59:54,960 --> 01:59:59,920
 So let's see what this slide is talking about.

2158
01:59:59,920 --> 02:00:03,040
 It's a practical interest to do.

2159
02:00:03,040 --> 02:00:07,880
 Using interconnecting the basic buildings of the FIR.

2160
02:00:07,880 --> 02:00:10,080
 Okay I don't even know what this is talking about actually.

2161
02:00:10,080 --> 02:00:14,880
 But anyway, so what I want to say is that, okay, like I mentioned just now I explained

2162
02:00:14,880 --> 02:00:15,880
 FFT.

2163
02:00:15,880 --> 02:00:18,920
 I'm saying that you can represent some filters in the mathematical form.

2164
02:00:18,920 --> 02:00:22,640
 If you remember, I showed you the mathematical form of FFT in the first place.

2165
02:00:23,000 --> 02:00:27,600
 Later I'll show you another block diagram, the butterfly diagram if you remember, to

2166
02:00:27,600 --> 02:00:31,120
 show equivalently what I explained the mathematical form.

2167
02:00:31,120 --> 02:00:34,480
 So why people are interested in that diagram?

2168
02:00:34,480 --> 02:00:36,920
 I mean, of course, sometimes it's simpler.

2169
02:00:36,920 --> 02:00:41,680
 For example, the FFT case, they keep showing how you can divide the eight points all the

2170
02:00:41,680 --> 02:00:43,000
 way to one point.

2171
02:00:43,000 --> 02:00:48,200
 But also people like it is because showing this diagram can also give you a straight

2172
02:00:48,200 --> 02:00:50,880
 forward way for filter design.

2173
02:00:51,000 --> 02:00:55,160
 Because when you design the filter, you are doing nothing but assembly of those components

2174
02:00:55,160 --> 02:00:56,440
 together.

2175
02:00:56,440 --> 02:01:02,400
 So by showing the block diagram, it's also the way to show how the filter is designed.

2176
02:01:02,400 --> 02:01:09,400
 So here's why we need to learn equivalently how can we use this block diagram to represent,

2177
02:01:09,400 --> 02:01:12,400
 let's say, any filters in general.

2178
02:01:12,400 --> 02:01:17,120
 We have already learned that you can represent a filter using a transfer function, using

2179
02:01:17,120 --> 02:01:18,120
 an impulse response.

2180
02:01:18,120 --> 02:01:20,720
 But these are mathematical forms.

2181
02:01:20,720 --> 02:01:26,040
 They are good, but even if you know that, it's not straightforward to design the filter.

2182
02:01:26,040 --> 02:01:31,720
 So here we have to learn that you can actually use a diagram, we call it a block diagram,

2183
02:01:31,720 --> 02:01:35,640
 to represent the actual digital system that you want to design.

2184
02:01:35,640 --> 02:01:38,080
 I think FFT is one example.

2185
02:01:38,080 --> 02:01:41,040
 That's one example you can use the diagram to represent it.

2186
02:01:41,040 --> 02:01:48,080
 But here I wish to share with you the general way to represent the filter using the block

2187
02:01:48,080 --> 02:01:49,360
 diagram.

2188
02:01:49,360 --> 02:01:55,719
 So to do so, normally we need to use some building blocks of the diagram.

2189
02:01:55,719 --> 02:01:58,360
 Some of them you have already seen in FFT.

2190
02:01:58,360 --> 02:02:01,799
 For example, this symbol means addition.

2191
02:02:01,799 --> 02:02:04,440
 You have two inputs, you want to sum them together.

2192
02:02:04,440 --> 02:02:09,280
 You will use this kind of addition, kind of a block, to indicate you are doing adding

2193
02:02:09,280 --> 02:02:10,280
 two numbers.

2194
02:02:10,280 --> 02:02:16,160
 So normally the way is that if you write it like this, it means the output equal to x

2195
02:02:16,160 --> 02:02:17,960
 plus w.

2196
02:02:18,200 --> 02:02:22,040
 The addition is one of the commonly used building blocks.

2197
02:02:22,040 --> 02:02:24,280
 Another one is a multiplication.

2198
02:02:24,280 --> 02:02:27,480
 You want to multiply an input with some number.

2199
02:02:27,480 --> 02:02:34,840
 You will just write a triangle to say that y equals to a times x.

2200
02:02:34,840 --> 02:02:38,640
 Remember, this triangle, the direction matters.

2201
02:02:38,640 --> 02:02:42,720
 The input always goes from the h and output goes from the corner.

2202
02:02:42,720 --> 02:02:44,760
 This is how it means.

2203
02:02:44,760 --> 02:02:48,120
 The orientation matters for the multiplications.

2204
02:02:48,120 --> 02:02:51,800
 The last one may be a little bit new to you.

2205
02:02:51,800 --> 02:02:55,240
 You see this kind of block with z to the power of minus one.

2206
02:02:55,240 --> 02:02:59,760
 So this is actually called a delay, time delay operator.

2207
02:02:59,760 --> 02:03:02,080
 How many of you have learned the z-transform?

2208
02:03:02,080 --> 02:03:03,680
 I want to show you how.

2209
02:03:03,680 --> 02:03:05,400
 Some of you have learned z-transform.

2210
02:03:05,400 --> 02:03:10,120
 For those who do not know z-transform, so z is nothing but e to the power of minus j

2211
02:03:10,120 --> 02:03:11,120
 omega.

2212
02:03:11,120 --> 02:03:13,120
 Sorry, j omega.

2213
02:03:13,760 --> 02:03:18,720
 Basically, it's a simpler way to represent a Fourier transform, basically.

2214
02:03:18,720 --> 02:03:24,120
 But because of that, we learned that if you have a phase shift in the frequency

2215
02:03:24,120 --> 02:03:28,840
 domain, it will be corresponding to a time delay in the time domain.

2216
02:03:28,840 --> 02:03:30,440
 Remember, we learned that.

2217
02:03:30,440 --> 02:03:36,000
 So when you want to implement a time delay in the time domain, it will be

2218
02:03:36,000 --> 02:03:40,120
 equivalent to impose a phase shift in the frequency domain.

2219
02:03:40,120 --> 02:03:44,360
 So that's why they will use a z to the power of minus one to indicate that I'm

2220
02:03:44,360 --> 02:03:49,240
 multiplying a e to the power of minus j omega in the frequency domain, which will

2221
02:03:49,240 --> 02:03:54,599
 be equivalently doing a delay of time by one in the time domain.

2222
02:03:54,599 --> 02:03:57,200
 This is where the z minus one comes from.

2223
02:03:57,200 --> 02:04:01,720
 But basically, if you see a block with z to the power of minus one, it means all

2224
02:04:01,720 --> 02:04:03,960
 the signal will be delayed by one.

2225
02:04:03,960 --> 02:04:05,519
 It's very simple.

2226
02:04:05,520 --> 02:04:10,880
 So using these building blocks, you can use them to represent, I would say, the

2227
02:04:10,880 --> 02:04:13,080
 commonly seen filters for this subject.

2228
02:04:13,080 --> 02:04:14,280
 And it's already good enough.

2229
02:04:14,280 --> 02:04:18,760
 Like I mentioned, the advantage of using that is it's easy to write down a

2230
02:04:18,760 --> 02:04:21,760
 computational algorithm by just looking at the diagram.

2231
02:04:21,760 --> 02:04:26,240
 And also, you can use this diagram to determine explicitly the relationship

2232
02:04:26,240 --> 02:04:30,360
 between the output and input, which is easy for design.

2233
02:04:30,360 --> 02:04:31,360
 So let me show you some.

2234
02:04:31,799 --> 02:04:36,440
 And let me show you the principle of constructing a diagram.

2235
02:04:36,440 --> 02:04:42,120
 Normally, when you want to construct a diagram, you have to first write down the

2236
02:04:42,120 --> 02:04:49,480
 expression for the output signal of each other as the sum of the input signal.

2237
02:04:49,480 --> 02:04:54,320
 So basically, you have to develop a set of equations that relate the input and

2238
02:04:54,320 --> 02:04:57,519
 output signal in terms of all internal signals.

2239
02:04:57,519 --> 02:05:01,000
 And then eventually, you want to eliminate the unwanted internal variable and

2240
02:05:01,000 --> 02:05:02,400
 obtain the expression.

2241
02:05:02,400 --> 02:05:03,480
 So these are basic steps.

2242
02:05:03,480 --> 02:05:09,440
 So you start from the mathematical relationship of the original signal, and

2243
02:05:09,440 --> 02:05:15,800
 you break them down into multiple steps that can be represented using these

2244
02:05:15,800 --> 02:05:17,040
 modules.

2245
02:05:17,040 --> 02:05:19,840
 And eventually, that's how you can write on a diagram.

2246
02:05:19,840 --> 02:05:21,240
 This is how you can design it.

2247
02:05:21,240 --> 02:05:26,480
 But another way you can get for the question is that they can give you a

2248
02:05:26,480 --> 02:05:28,840
 diagram first.

2249
02:05:28,840 --> 02:05:33,080
 And they want to analyze the diagram and write down what is the relationship

2250
02:05:33,080 --> 02:05:34,960
 between the x and y.

2251
02:05:34,960 --> 02:05:38,800
 Okay, I would say this is the most common question you are seeing in the exam or

2252
02:05:38,800 --> 02:05:41,040
 in the homework or quiz.

2253
02:05:41,040 --> 02:05:43,000
 So I mean, and this is actually very important.

2254
02:05:43,000 --> 02:05:45,560
 We have to learn how to do this.

2255
02:05:45,560 --> 02:05:48,040
 So let's look at this example.

2256
02:05:48,040 --> 02:05:52,440
 So as you can see, this is a block diagram where you can tell that there's

2257
02:05:52,440 --> 02:05:56,000
 input x and there's output y.

2258
02:05:56,000 --> 02:05:59,920
 So the entire process here represents the system.

2259
02:05:59,920 --> 02:06:03,640
 Basically, the system processes the input and generate the output.

2260
02:06:03,640 --> 02:06:07,000
 But of course, it's not very easy to tell, for example, the transfer function

2261
02:06:07,000 --> 02:06:09,280
 directly from this block diagram.

2262
02:06:09,280 --> 02:06:14,280
 Because the block diagram only uses the fundamental building blocks, like addition,

2263
02:06:14,280 --> 02:06:17,240
 multiplications, or maybe delay.

2264
02:06:17,240 --> 02:06:22,400
 So our job is to derive, let's say, the transfer function,

2265
02:06:22,400 --> 02:06:26,879
 mathematically represent the filters from diagram here.

2266
02:06:26,879 --> 02:06:28,839
 Okay, how to do it?

2267
02:06:28,839 --> 02:06:33,040
 So just now I'm saying that we're saying that if you want to write the block

2268
02:06:33,040 --> 02:06:40,440
 diagram from the equation, you have to divide the equation into multiple steps.

2269
02:06:40,440 --> 02:06:43,799
 And make sure every step or every sub equation are

2270
02:06:43,799 --> 02:06:46,599
 representable using the building blocks.

2271
02:06:46,599 --> 02:06:48,679
 Now we're doing the opposite, right?

2272
02:06:48,679 --> 02:06:51,000
 So we do have the block diagram.

2273
02:06:51,000 --> 02:06:52,720
 How can we get the equation?

2274
02:06:52,720 --> 02:06:59,040
 We have to first write down the simple relationship at certain

2275
02:06:59,040 --> 02:07:00,560
 portion of the diagram.

2276
02:07:00,560 --> 02:07:04,120
 So for example, I can start from this part, right?

2277
02:07:04,120 --> 02:07:08,880
 I can tell that, well, this w1, even though this w1 is not the final input or

2278
02:07:08,880 --> 02:07:12,240
 final output, but that's the signal I get here, right?

2279
02:07:12,240 --> 02:07:17,240
 I can tell that this w1 will be obtained by adding, let's say,

2280
02:07:17,240 --> 02:07:21,480
 x plus this branch, all right?

2281
02:07:21,480 --> 02:07:24,080
 Remember, this is definition for summation, right?

2282
02:07:24,080 --> 02:07:29,559
 The addition operator says the output equal to the first branch plus the second

2283
02:07:29,559 --> 02:07:30,639
 branch.

2284
02:07:30,639 --> 02:07:34,519
 The first branch will be x, so I write x here, all right?

2285
02:07:34,519 --> 02:07:38,040
 The second branch, you can tell that it's equal to here,

2286
02:07:38,040 --> 02:07:39,920
 let's say this is s2, right?

2287
02:07:39,920 --> 02:07:40,760
 You give a name, right?

2288
02:07:40,760 --> 02:07:43,679
 This is anywhere intermediate kind of a signal.

2289
02:07:43,680 --> 02:07:51,040
 Say if this is my s2, this branch equal to s2 multiplied by minus alpha, right?

2290
02:07:51,040 --> 02:07:56,840
 So the final w1 will be x minus alpha times s2, right?

2291
02:07:56,840 --> 02:08:03,480
 So I complete the simple equation only considering this junction, all right?

2292
02:08:03,480 --> 02:08:09,960
 So the step one is always write down the simple equation considering only,

2293
02:08:09,960 --> 02:08:17,040
 let's say, one junction using those intermediate signal or variables, okay?

2294
02:08:17,040 --> 02:08:18,640
 You can do the same thing for w2, right?

2295
02:08:18,640 --> 02:08:22,560
 W2, for example, here equals to, so what is this?

2296
02:08:22,560 --> 02:08:23,720
 This is actually w1, right?

2297
02:08:23,720 --> 02:08:26,840
 W1 comes here, become the first branch.

2298
02:08:26,840 --> 02:08:32,520
 Now, second branch equal to s1 multiplied by minus, you know, sigma, right?

2299
02:08:32,520 --> 02:08:35,240
 So you can do them sum together, give you w2.

2300
02:08:36,920 --> 02:08:39,440
 All right, you do the same thing for this junction and

2301
02:08:39,440 --> 02:08:42,240
 for this junction, you got w3 and you got w1, right?

2302
02:08:42,240 --> 02:08:49,000
 W, sorry, y, you got y, y is here, this is coming from this junction,

2303
02:08:49,000 --> 02:08:50,919
 w3 coming from this junction.

2304
02:08:50,919 --> 02:08:56,440
 So you can use those key junctions to write multiple but simple equations by

2305
02:08:56,440 --> 02:08:59,320
 considering the fundamental building blocks.

2306
02:08:59,320 --> 02:09:02,919
 But make sure you cover all the building blocks, all right?

2307
02:09:02,919 --> 02:09:05,480
 If you don't cover all the building blocks, you may miss some information.

2308
02:09:06,519 --> 02:09:07,599
 Okay, now what's next?

2309
02:09:07,600 --> 02:09:10,520
 Now you have four equations, but of course,

2310
02:09:10,520 --> 02:09:15,760
 none of this equation will tell you directly what is y over x, the transfer function, right?

2311
02:09:15,760 --> 02:09:17,920
 So the second thing you do is to simplify that.

2312
02:09:18,960 --> 02:09:21,400
 Okay, let's see how many variables we have.

2313
02:09:21,400 --> 02:09:27,880
 We actually have w1, w2, w3, s1 and s2, right?

2314
02:09:27,880 --> 02:09:30,920
 So these are the so-called intermediate variables.

2315
02:09:30,920 --> 02:09:34,120
 So our job is to cancel all of them and

2316
02:09:34,120 --> 02:09:40,200
 to only leave x and y in one equations because that's how you can get the transfer function.

2317
02:09:40,200 --> 02:09:42,920
 So you can do some kind of simple trick.

2318
02:09:42,920 --> 02:09:47,120
 For example, here, we can easily tell that s1 here, right?

2319
02:09:47,120 --> 02:09:48,120
 How can I get s1?

2320
02:09:48,120 --> 02:09:53,280
 s1 will be getting from the w2 multiplied by phase delay, right?

2321
02:09:53,280 --> 02:10:01,760
 So you can use the s1 equal to w2 phase delay and also s2 here is equal to w3 by phase delay.

2322
02:10:01,760 --> 02:10:05,680
 So these two will help you to kill two intermediate variables, right?

2323
02:10:05,680 --> 02:10:13,080
 So eventually, you are saved two and you will have w1, w2, w3,

2324
02:10:13,080 --> 02:10:17,640
 three intermediate variables plus two input output variables.

2325
02:10:17,640 --> 02:10:22,040
 So now you can perfectly solve, let's say, how should I say?

2326
02:10:22,040 --> 02:10:25,520
 Three unknowns with four equations, which is definitely solvable.

2327
02:10:25,520 --> 02:10:27,600
 So you can do all of this kind of cancellation.

2328
02:10:27,600 --> 02:10:33,840
 For example, you can start from the second equation to get rid of one of the, let's say, w3, right?

2329
02:10:33,840 --> 02:10:36,760
 Also, you can use the third equation to get rid of some of them.

2330
02:10:36,760 --> 02:10:43,360
 So to combine them, I won't go into detail, but I believe all of you can know how to cancel variables

2331
02:10:43,360 --> 02:10:45,280
 using multiple linear equations.

2332
02:10:45,280 --> 02:10:51,720
 But all of them, by doing all of them, your job is to cancel or to kill w1, w2, w3 because

2333
02:10:51,720 --> 02:10:52,960
 all of them are intermediate.

2334
02:10:52,960 --> 02:10:56,000
 You invented them, but you have to get rid of them, right?

2335
02:10:56,000 --> 02:11:00,840
 And only ways are there constant in your final expression, OK?

2336
02:11:00,840 --> 02:11:07,920
 So your final expression will still keep the y and x because they are the actual input and output.

2337
02:11:07,920 --> 02:11:14,600
 You can keep all of these constant, which are introduced by the multiplication, right?

2338
02:11:14,600 --> 02:11:18,240
 And divide x, sorry, divide y with x.

2339
02:11:18,240 --> 02:11:21,560
 So these will be your final transfer function, right?

2340
02:11:21,560 --> 02:11:27,640
 Transfer function is defined as the final output spectrum divided by the final input spectrum

2341
02:11:27,640 --> 02:11:29,480
 using the z-transform, right?

2342
02:11:29,480 --> 02:11:34,200
 So these are, this is actually the overall transfer function.

2343
02:11:34,200 --> 02:11:40,680
 Then you can derive from the equivalent block diagram, all right?

2344
02:11:40,680 --> 02:11:42,160
 So let me just repeat, right?

2345
02:11:42,160 --> 02:11:44,920
 Or let me just summarize what we have done.

2346
02:11:44,920 --> 02:11:49,400
 So the question, what the question gave you is just a block diagram, right?

2347
02:11:49,400 --> 02:11:55,599
 The block diagram uniquely determines what is the system, what is the filter, all right?

2348
02:11:55,599 --> 02:12:00,599
 So your job is to derive the transfer function of the filter.

2349
02:12:00,599 --> 02:12:01,920
 So where do you start with?

2350
02:12:01,920 --> 02:12:06,759
 You start with the key conjunction within the plug diagram.

2351
02:12:06,759 --> 02:12:10,839
 So very likely you can use the addition sign as the key junction, right?

2352
02:12:10,839 --> 02:12:13,440
 So here we've got four addition signs.

2353
02:12:13,440 --> 02:12:20,799
 You can use them to formulate four simple equations describing the relationship in that junction.

2354
02:12:20,799 --> 02:12:28,879
 Plus there are also some kind of relationship between W2 and S1, W3 and S2, right?

2355
02:12:28,879 --> 02:12:33,480
 But here you actually have six equations with how many unknown, right?

2356
02:12:33,480 --> 02:12:36,440
 W1, W2, W3, S1 and S2.

2357
02:12:36,440 --> 02:12:39,799
 So you have five intermediate variables you want to get rid of.

2358
02:12:39,799 --> 02:12:41,280
 You have six equations.

2359
02:12:41,280 --> 02:12:43,120
 You should be able to kill all of them.

2360
02:12:43,120 --> 02:12:46,280
 Only leave Y and X survive, right?

2361
02:12:46,280 --> 02:12:52,280
 So your job is to use all of these equations, get rid of the intermediate variable, even though you can start with them,

2362
02:12:52,280 --> 02:12:55,880
 but you have to somehow remove them by cancellation, right?

2363
02:12:55,880 --> 02:13:03,240
 You can do all sorts of cancellation you like, all the way until you only have the constant or phase delay

2364
02:13:03,240 --> 02:13:07,640
 introduced by the block diagram to form your final transfer function.

2365
02:13:07,640 --> 02:13:16,200
 So your job is to find a single line equation representing Y divided by X, right?

2366
02:13:16,200 --> 02:13:17,480
 So this will be the final destination.

2367
02:13:17,480 --> 02:13:19,920
 So if you reach here, you actually get the answer, right?

2368
02:13:19,920 --> 02:13:23,120
 This is actually the transfer function.

2369
02:13:23,120 --> 02:13:24,360
 So this is one example.

2370
02:13:24,360 --> 02:13:32,600
 I hope you give you how you can actually translate a block diagram to a mathematical expression of a transfer function.

2371
02:13:32,600 --> 02:13:36,920
 But both of them are representing the same system, just two different ways.

2372
02:13:36,920 --> 02:13:41,800
 But you have to know how you can go from one to the other, right?

2373
02:13:41,800 --> 02:13:43,400
 OK.

2374
02:13:43,400 --> 02:13:45,560
 So any question for this?

2375
02:13:45,560 --> 02:13:53,560
 I mean, it's important, and I wish you can know at least know the principle, step one, step two, step three, right?

2376
02:13:53,560 --> 02:13:55,640
 So any question about this example?

2377
02:13:55,640 --> 02:13:58,840
 We're better clear now, right?

2378
02:13:58,840 --> 02:14:05,400
 So, OK, one common question is that you somehow get a fewer equation than you need, right?

2379
02:14:05,400 --> 02:14:07,000
 For example, I only get the four, right?

2380
02:14:07,000 --> 02:14:13,480
 I find out, oh, I have six, maybe five variables, intermediate variable, but only have four.

2381
02:14:13,480 --> 02:14:15,799
 Then you must meet something, OK?

2382
02:14:15,799 --> 02:14:19,599
 You will always have, let's say you have n intermediate variable.

2383
02:14:19,599 --> 02:14:22,759
 You should always have n plus 1 equations, OK?

2384
02:14:22,759 --> 02:14:25,400
 If you somehow find you got fewer, you keep finding.

2385
02:14:25,400 --> 02:14:28,120
 You must be able to find some more, all right?

2386
02:14:28,120 --> 02:14:32,519
 So the principle is this, except for X and Y, OK?

2387
02:14:32,519 --> 02:14:35,200
 All of those intermediate variables, let's say n.

2388
02:14:35,200 --> 02:14:37,800
 You have to get n plus 1 equation.

2389
02:14:37,800 --> 02:14:40,960
 That's how you can solve it, all right?

2390
02:14:40,960 --> 02:14:43,559
 So check until you have n plus 1 equation.

2391
02:14:43,559 --> 02:14:49,160
 Then you can start to do this kind of elimination, cancellation of intermediate variables, right?

2392
02:14:49,160 --> 02:14:54,320
 Otherwise, you cannot get rid of all of them, OK?

2393
02:14:54,320 --> 02:14:56,840
 Good.

2394
02:14:56,840 --> 02:14:58,160
 OK, great.

2395
02:14:58,160 --> 02:15:02,000
 So, I mean, this is one of the important things I want to emphasize.

2396
02:15:02,000 --> 02:15:03,160
 Of course, right?

2397
02:15:03,160 --> 02:15:04,360
 This is a general way, right?

2398
02:15:04,360 --> 02:15:11,599
 A general way we show that how you can go from a block diagram to get the actual transfer function.

2399
02:15:11,599 --> 02:15:14,960
 Well, there are some special type of block diagrams.

2400
02:15:14,960 --> 02:15:21,960
 So first of all, if I give you a transfer function, there are actually many, many ways to design the block diagram.

2401
02:15:21,960 --> 02:15:23,519
 So it's not unique.

2402
02:15:23,519 --> 02:15:24,960
 Block diagram is not unique.

2403
02:15:24,960 --> 02:15:32,000
 You can have multiple ways to design the block diagram to represent the same transfer function, all right?

2404
02:15:32,040 --> 02:15:38,440
 And because of that, sometimes we don't want the structure of the block diagram to be arbitrary, to be random.

2405
02:15:38,440 --> 02:15:43,880
 We want the structure of the diagram to be something compact, right?

2406
02:15:43,880 --> 02:15:45,480
 We want to minimize the design.

2407
02:15:45,480 --> 02:15:54,840
 So this is why we need to ensure that the structure or the diagram is called, you know, canonical kind of structure.

2408
02:15:54,840 --> 02:15:56,280
 OK, so what does that mean?

2409
02:15:56,280 --> 02:16:00,760
 Well, if you say a structure is canonical,

2410
02:16:00,800 --> 02:16:10,360
 it means the number of delays in the block diagram will be exactly equal to the order of the transfer function.

2411
02:16:10,360 --> 02:16:13,080
 OK, so first of all, what is the order of the transfer function, right?

2412
02:16:13,080 --> 02:16:15,280
 Here's one example.

2413
02:16:15,280 --> 02:16:18,000
 Suppose this is my so-called difference equation.

2414
02:16:18,000 --> 02:16:21,120
 Difference equation can be easily transferred to a transfer function, right?

2415
02:16:21,120 --> 02:16:22,160
 By the way.

2416
02:16:22,160 --> 02:16:25,480
 But you can analyze the order also from the difference equation.

2417
02:16:25,480 --> 02:16:30,280
 So this difference equation, remember, difference equation, right hand side got two parts, right?

2418
02:16:30,280 --> 02:16:34,760
 One coming from past time output, one coming from the input, right?

2419
02:16:34,760 --> 02:16:40,039
 You look at what's the highest order of each of the polynomial.

2420
02:16:40,039 --> 02:16:43,719
 OK, so this polynomial, what is the highest order?

2421
02:16:43,719 --> 02:16:44,799
 One, right?

2422
02:16:44,799 --> 02:16:46,639
 So and this polynomial is also one.

2423
02:16:46,639 --> 02:16:52,799
 So in other words, the order of this transfer function should be one.

2424
02:16:52,799 --> 02:16:55,360
 It's a first order transfer function.

2425
02:16:55,360 --> 02:17:01,920
 So the canonical structure should also have only one delay function,

2426
02:17:01,920 --> 02:17:05,840
 or delay block, module in the diagram.

2427
02:17:05,840 --> 02:17:12,080
 If you have a block diagram representing this transfer function with only one delay module,

2428
02:17:12,080 --> 02:17:15,000
 that means that structure is canonical.

2429
02:17:15,000 --> 02:17:20,520
 OK, apparently this one is not because this one you can find two delay module, right?

2430
02:17:20,520 --> 02:17:25,720
 That means this block diagram must be redundant.

2431
02:17:25,720 --> 02:17:28,640
 So there will be some redundant structure in this block diagram.

2432
02:17:28,640 --> 02:17:31,360
 It can be further simplified, right?

2433
02:17:31,360 --> 02:17:37,160
 So which means this structure is, we call it the non-canonic, not kind of minimized or not compact,

2434
02:17:37,160 --> 02:17:42,200
 because it used two delay to realize a first order difference equation, right?

2435
02:17:42,200 --> 02:17:47,800
 So the reason we love canonical structures is because it gives you the minimum cost

2436
02:17:47,799 --> 02:17:52,160
 when you actually pass this block diagram for implementation, right?

2437
02:17:52,160 --> 02:17:57,679
 You definitely want to minimize the structure such that the implementation can lower the cost, right?

2438
02:17:57,679 --> 02:18:00,799
 This is the principle.

2439
02:18:00,799 --> 02:18:04,920
 So I mean, this is just some example for you to check.

2440
02:18:04,920 --> 02:18:06,480
 So you can't get something like this.

2441
02:18:06,480 --> 02:18:09,480
 I mean, suppose this is your exam question, right?

2442
02:18:09,480 --> 02:18:13,000
 So say, hey, I kind of give you this block diagram, right?

2443
02:18:13,000 --> 02:18:17,119
 So they want you to first determine the transfer function,

2444
02:18:17,120 --> 02:18:24,040
 and they want you to answer or to check, is this kind of block diagram canonical or not, all right?

2445
02:18:24,040 --> 02:18:25,480
 So you can have something like this in the exam.

2446
02:18:25,480 --> 02:18:28,040
 So how should you do this?

2447
02:18:28,040 --> 02:18:29,640
 Well, you have to think about yourself, right?

2448
02:18:29,640 --> 02:18:35,320
 How can I determine whether a block diagram is canonical or not, right?

2449
02:18:35,320 --> 02:18:39,360
 The principle is to check or count how many delay I have

2450
02:18:39,360 --> 02:18:43,320
 and compare to the order of my transfer function, all right?

2451
02:18:43,320 --> 02:18:45,520
 Is it hard to count to the number of delays?

2452
02:18:45,520 --> 02:18:46,120
 It's not hard, right?

2453
02:18:46,120 --> 02:18:47,560
 You can just say, well, I have how many?

2454
02:18:47,560 --> 02:18:48,360
 One, two, three, four.

2455
02:18:48,360 --> 02:18:50,560
 I have four delays, right, in the blocks.

2456
02:18:50,560 --> 02:18:55,400
 The thing you do not know for sure is what's the order of the transfer function.

2457
02:18:55,400 --> 02:19:01,200
 So the key here is you should always first compute the transfer function,

2458
02:19:01,200 --> 02:19:02,920
 and that's how you can compare, right?

2459
02:19:02,920 --> 02:19:04,960
 So how can we compute the transfer function?

2460
02:19:04,960 --> 02:19:06,160
 We just learned this.

2461
02:19:06,160 --> 02:19:10,120
 You start from some key conjunction, junction in the block diagram.

2462
02:19:10,120 --> 02:19:15,120
 For example, here and here, you can form the three junctions, maybe here as well.

2463
02:19:15,120 --> 02:19:19,040
 You can form a list of equations using these junctions, right?

2464
02:19:19,040 --> 02:19:25,680
 And somehow cancel all of these intermediate variables to learn it at a transfer function, okay?

2465
02:19:25,680 --> 02:19:27,760
 You have to get this first.

2466
02:19:27,760 --> 02:19:29,960
 And this is how you can tell the order, right?

2467
02:19:29,960 --> 02:19:30,800
 How to tell the order?

2468
02:19:30,800 --> 02:19:33,840
 Well, you look at the numerator and the denominator.

2469
02:19:33,840 --> 02:19:38,440
 So apparently this, for the both numerator and the denominator, these are second order,

2470
02:19:38,440 --> 02:19:40,280
 right, because the delay got two, right?

2471
02:19:40,280 --> 02:19:42,280
 You got second order, polynomial.

2472
02:19:42,280 --> 02:19:46,960
 That means this is a second order kind of transfer function.

2473
02:19:46,960 --> 02:19:51,840
 That means if this block got only two delays, that's going to be a canonical, right?

2474
02:19:51,840 --> 02:19:53,480
 Apparently these doubles.

2475
02:19:53,480 --> 02:19:57,040
 So this is not a canonical function, a canonical structure,

2476
02:19:57,040 --> 02:20:03,080
 because it got more than needed in terms of number of delay blocks, okay?

2477
02:20:03,080 --> 02:20:08,640
 So always, if you want to do something, you think about do I have all the condition I need

2478
02:20:08,640 --> 02:20:10,120
 to make a decision, right?

2479
02:20:10,120 --> 02:20:13,880
 To decide whether structure is canonical, I need to know two things.

2480
02:20:13,880 --> 02:20:16,760
 First one is how many delays I have in the block.

2481
02:20:16,760 --> 02:20:21,120
 The second thing is what's the order of my transfer function, okay?

2482
02:20:21,120 --> 02:20:22,880
 The first thing is easy to count.

2483
02:20:22,880 --> 02:20:24,760
 The second thing is you have to compute, right?

2484
02:20:24,760 --> 02:20:27,120
 So always compute the transfer function.

2485
02:20:27,120 --> 02:20:30,160
 Count your number of delay compared to two.

2486
02:20:30,160 --> 02:20:32,080
 If they're equal, that means it's canonical.

2487
02:20:32,080 --> 02:20:37,080
 If not equal, very likely you got more than needed in the block diagram.

2488
02:20:37,080 --> 02:20:40,040
 That means it's actually non-cononical, right?

2489
02:20:40,040 --> 02:20:45,800
 So this is a common pipeline when you do the question like this, okay?

2490
02:20:45,800 --> 02:20:48,600
 But of course you have to know how to compute the transfer function, right?

2491
02:20:48,600 --> 02:20:51,600
 If you do not know how to do this, I cannot help you, all right?

2492
02:20:51,600 --> 02:20:54,280
 So you have to go back to the process, right?

2493
02:20:54,280 --> 02:20:55,800
 Example here.

2494
02:20:55,800 --> 02:21:00,280
 This example shows you how you can exactly compute the transfer function

2495
02:21:00,280 --> 02:21:03,840
 from a given block diagram, right?

2496
02:21:03,840 --> 02:21:08,160
 And then this example tells you how you can link the transfer function

2497
02:21:08,200 --> 02:21:16,320
 to the actual, you know, the property whether the block diagram is canonical or not, right?

2498
02:21:16,320 --> 02:21:18,600
 Okay?

2499
02:21:18,600 --> 02:21:19,600
 Clear everybody?

2500
02:21:19,600 --> 02:21:23,800
 Does it make sense for everyone?

2501
02:21:23,800 --> 02:21:26,440
 All right, so make sure you can do this.

2502
02:21:26,440 --> 02:21:33,640
 Okay, I say this twice means it's important and it could be somewhere in the exam or homework or quiz, right?

2503
02:21:33,640 --> 02:21:35,760
 I hope you know what I mean, right?

2504
02:21:35,760 --> 02:21:42,000
 But you make sure you can do this and, you know, make sure you know all of these definitions, right?

2505
02:21:42,000 --> 02:21:43,400
 Okay, so one last thing I want to cover.

2506
02:21:43,400 --> 02:21:44,400
 I finish this.

2507
02:21:44,400 --> 02:21:45,680
 I can end the lecture today.

2508
02:21:45,680 --> 02:21:54,080
 So just now I say that, you know, if I give you a transfer function, let's say to represent a system, right?

2509
02:21:54,080 --> 02:21:56,800
 You can get more than one block diagram.

2510
02:21:56,800 --> 02:22:00,960
 In fact, you can get many, infinitely many block diagrams if you want, right?

2511
02:22:00,960 --> 02:22:05,919
 But if I give you a block diagram, there should be a unique transfer function.

2512
02:22:05,919 --> 02:22:07,359
 So it's one too many, right?

2513
02:22:07,359 --> 02:22:08,720
 The relationship is one too many.

2514
02:22:08,720 --> 02:22:17,320
 Okay, because of that, if I give you a block diagram, right, it's possible for you to find another block diagram,

2515
02:22:17,320 --> 02:22:20,199
 which represents the same transfer function.

2516
02:22:20,199 --> 02:22:20,720
 Make sense?

2517
02:22:20,720 --> 02:22:22,400
 Right, because it's one too many, right?

2518
02:22:22,400 --> 02:22:28,320
 So these two block diagrams, if they are representing the same transfer function,

2519
02:22:28,320 --> 02:22:34,400
 we call the two as the equivalent structure of the equivalent block diagram.

2520
02:22:34,400 --> 02:22:37,520
 So the equivalent means, even though they look very different,

2521
02:22:37,520 --> 02:22:42,400
 but they are representing the same system or same filter, right?

2522
02:22:42,400 --> 02:22:46,760
 So that's why we say that we define two digital filter structures to be the equivalent

2523
02:22:46,760 --> 02:22:50,000
 if they have the same transfer function, right?

2524
02:22:50,000 --> 02:22:58,680
 So now the question is like, can I have a way to find an equivalent diagram if I have one?

2525
02:22:58,680 --> 02:22:59,840
 Okay, why I want to do this?

2526
02:22:59,840 --> 02:23:02,240
 Because sometimes one version is hard to implement.

2527
02:23:02,240 --> 02:23:03,640
 I want to go for another version, right?

2528
02:23:03,640 --> 02:23:05,920
 Maybe another version may become easier, right?

2529
02:23:05,920 --> 02:23:12,800
 So there are many ways to generate the equivalent structure by giving a block diagram.

2530
02:23:12,800 --> 02:23:14,720
 But we're going to learn one, okay?

2531
02:23:14,720 --> 02:23:18,320
 Not every method, but one method because it's simple, all right?

2532
02:23:18,320 --> 02:23:21,480
 So this method is called a transpose operation.

2533
02:23:21,480 --> 02:23:23,480
 Okay, so what does the transpose means?

2534
02:23:23,480 --> 02:23:29,960
 Because if I give you a structure like this, and I want to find, let's say,

2535
02:23:29,960 --> 02:23:36,360
 one specific equivalent structure, I can actually do the following step

2536
02:23:36,360 --> 02:23:39,600
 to find the transpose of this block diagram.

2537
02:23:39,600 --> 02:23:41,760
 So here's what I mean by transpose, right?

2538
02:23:41,760 --> 02:23:46,039
 So you have to first reverse all of the pass direction.

2539
02:23:46,039 --> 02:23:47,920
 Okay, so what is pass direction?

2540
02:23:48,280 --> 02:23:52,600
 If you see a line here, right, every kind of a signal have a path,

2541
02:23:52,600 --> 02:23:55,480
 and there's a direction indicating by this arrow, right?

2542
02:23:55,480 --> 02:24:00,440
 So this arrow means the signal goes down through the multiplication, right?

2543
02:24:00,440 --> 02:24:07,040
 So the step one you have to do is make the direction reversed for every path.

2544
02:24:07,040 --> 02:24:11,600
 Okay, so if the original is like this, I have to go the other way around, all right?

2545
02:24:11,600 --> 02:24:14,840
 So step one, reverse all the pass direction.

2546
02:24:14,840 --> 02:24:18,280
 Step two, replace the pick off nodes.

2547
02:24:18,280 --> 02:24:20,920
 So this is actually a pick off node.

2548
02:24:20,920 --> 02:24:26,200
 It means the signal will be branched into two from one, all right?

2549
02:24:26,200 --> 02:24:31,200
 So replace all of the pick off nodes with an adder.

2550
02:24:31,200 --> 02:24:37,040
 So if here this is a pick off node, make it an addition operator, and vice versa.

2551
02:24:37,040 --> 02:24:42,040
 So if originally this is my addition, I make it a pick off, okay?

2552
02:24:42,040 --> 02:24:45,240
 So just swap the pick off nodes with the addition.

2553
02:24:46,320 --> 02:24:47,720
 This is step two, right?

2554
02:24:47,720 --> 02:24:50,600
 Step three, interchange the input and output.

2555
02:24:50,600 --> 02:24:54,200
 So in other words, this is going to be my y, this is going to be my x.

2556
02:24:55,400 --> 02:24:56,320
 All right, makes sense?

2557
02:24:56,320 --> 02:24:57,360
 Very simple, right?

2558
02:24:57,360 --> 02:25:02,440
 Change the order, change the direction of the path, replace pick off with addition,

2559
02:25:02,440 --> 02:25:06,600
 replace addition with pick off, swap the input and output, right?

2560
02:25:06,600 --> 02:25:11,960
 So you can easily find something called the transpose diagram, right?

2561
02:25:11,960 --> 02:25:13,279
 So why we call the transpose?

2562
02:25:13,279 --> 02:25:17,279
 So I guess all of you know what is the transpose of a matrix, right?

2563
02:25:17,279 --> 02:25:19,640
 You can flip the matrix and make it a transpose.

2564
02:25:19,640 --> 02:25:23,000
 This is like when you flip the diagram, make the other diagram.

2565
02:25:23,000 --> 02:25:26,960
 And by doing so, these two diagrams, even though they are different,

2566
02:25:28,359 --> 02:25:29,880
 they will be equivalent.

2567
02:25:29,880 --> 02:25:34,679
 So they will give you exactly the same transfer function, okay?

2568
02:25:36,320 --> 02:25:38,119
 But we have to do this in the correct way, right?

2569
02:25:38,119 --> 02:25:40,919
 So you have to exactly follow the three steps.

2570
02:25:40,920 --> 02:25:42,760
 If you miss anyone, you will be wrong.

2571
02:25:42,760 --> 02:25:43,600
 So the answer will be wrong.

2572
02:25:43,600 --> 02:25:49,160
 But if you follow exactly all the steps, you will get at least one equivalent

2573
02:25:49,160 --> 02:25:49,760
 representation.

2574
02:25:50,800 --> 02:25:55,000
 And because of this is easy, so we just learned this, but it's very useful, right?

2575
02:25:55,000 --> 02:25:57,960
 Because it's very easy to get some alternative version.

2576
02:25:57,960 --> 02:26:03,080
 Hopefully it's going to be, how should I say, simpler, right, in implementation.

2577
02:26:03,080 --> 02:26:06,560
 But I hope everybody knows, right, how I can get from here to here.

2578
02:26:08,080 --> 02:26:09,120
 Any question?

2579
02:26:09,120 --> 02:26:10,080
 Ask now, right?

2580
02:26:11,920 --> 02:26:16,200
 So it makes sense for everyone, like how I can go from the top.

2581
02:26:16,200 --> 02:26:17,600
 This is my original diagram.

2582
02:26:18,600 --> 02:26:21,200
 I want to find the equivalent.

2583
02:26:21,200 --> 02:26:22,400
 This is how I end up with.

2584
02:26:22,400 --> 02:26:25,200
 So how can I go from here to the bottom one?

2585
02:26:25,200 --> 02:26:26,240
 I'm doing the three steps.

2586
02:26:27,760 --> 02:26:29,960
 All right, so make sure you see the change, right?

2587
02:26:29,960 --> 02:26:32,520
 And make sure the change makes sense for you, okay?

2588
02:26:34,120 --> 02:26:35,200
 But it's a very simple change.

2589
02:26:35,200 --> 02:26:36,720
 I mean, it shouldn't be very hard to understand.

2590
02:26:36,720 --> 02:26:41,519
 But if you do this, you will guarantee to have an equivalent, I mean,

2591
02:26:41,519 --> 02:26:44,640
 block diagram for any given one, all right?

2592
02:26:46,000 --> 02:26:52,359
 So by doing so, right, I mean, there are other methods for equivalent, but

2593
02:26:52,359 --> 02:26:56,119
 they are either very complicated or they may be based on some specific

2594
02:26:56,119 --> 02:26:59,480
 algorithm for structures, so we won't learn it, right?

2595
02:26:59,480 --> 02:27:05,080
 And in fact, if I give you a diagram, there should be, by theory,

2596
02:27:05,080 --> 02:27:09,640
 infinitely many number of equivalent structures, realizing the same kind

2597
02:27:09,640 --> 02:27:10,400
 of transfer function.

2598
02:27:11,400 --> 02:27:16,120
 And you cannot, it's impossible to develop all the equivalent realization, so

2599
02:27:16,120 --> 02:27:19,960
 we will just focus on the common use structure for this course.

2600
02:27:19,960 --> 02:27:24,560
 So for any given kind of structure, you should be able to apply that method to

2601
02:27:24,560 --> 02:27:25,200
 get the equivalent one.

2602
02:27:25,200 --> 02:27:27,960
 So you don't need to worry about other methods, right?

2603
02:27:27,960 --> 02:27:31,280
 But there will be some special case, which will be beyond the scope of this course.

2604
02:27:32,280 --> 02:27:32,480
 All right?

2605
02:27:33,480 --> 02:27:36,400
 Okay, so I will just leave this for next time, maybe,

2606
02:27:36,400 --> 02:27:39,520
 because it's already not as a promise, I'm gonna end now.

2607
02:27:39,520 --> 02:27:44,279
 So there will be, you will see that there will be some slides removed from these

2608
02:27:44,279 --> 02:27:46,640
 lectures, I will move them to the next lecture, right?

2609
02:27:46,640 --> 02:27:50,000
 So there will be update of the slides, so don't be surprised if you see that.

2610
02:27:50,000 --> 02:27:53,400
 And I could have some updates for the next week, so

2611
02:27:53,400 --> 02:27:56,560
 do check updated version once I make a change.

2612
02:27:56,560 --> 02:28:00,600
 And if you see some slides, I remove them, means you don't need to worry about them.

2613
02:28:00,600 --> 02:28:03,320
 They won't be examined, they won't be taught.

2614
02:28:03,320 --> 02:28:06,360
 You only focus on the content I cover in the lecture, it should be enough.

2615
02:28:07,440 --> 02:28:08,760
 Okay?

2616
02:28:08,760 --> 02:28:10,080
 Okay, great, thank you.

2617
02:28:10,080 --> 02:28:12,960
 Let's end today, I hope you can catch the bus, right?

2618
02:28:12,960 --> 02:28:14,640
 Thank you, I'll see you next week.

