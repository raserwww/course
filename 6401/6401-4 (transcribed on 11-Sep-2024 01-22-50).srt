1
00:01:30,000 --> 00:01:37,000
 All right.

2
00:01:43,000 --> 00:01:44,000
 Let's start.

3
00:01:44,000 --> 00:01:46,000
 So this is our lecture three.

4
00:01:46,000 --> 00:01:51,000
 I hope you have all reviewed the things we talked about before, right?

5
00:01:51,000 --> 00:01:58,000
 Because this will be probably the last lecture we're going to review or recap some of the fundamental things for signal processing.

6
00:01:58,000 --> 00:02:03,000
 So from this week, maybe the later part of this week, we're going to see new things, right?

7
00:02:03,000 --> 00:02:08,000
 So pretty much what we're reviewing right now, as you can see, the first lecture, second lecture of my part,

8
00:02:08,000 --> 00:02:11,000
 is like talking about different representation of the signals.

9
00:02:11,000 --> 00:02:15,000
 And we talk about the repetition of the system, right? The few years last time.

10
00:02:15,000 --> 00:02:19,000
 So today we're going to finish the, you know, future representation.

11
00:02:19,000 --> 00:02:22,000
 So I'm going to do a quick recap of what we talked about last week.

12
00:02:22,000 --> 00:02:25,000
 And also we're going to learn something new, right?

13
00:02:25,000 --> 00:02:33,000
 And after that, we're going to move on to the future design part, which is, you know, maybe may not be the new thing for everyone,

14
00:02:33,000 --> 00:02:35,000
 but definitely new to some of you, right?

15
00:02:35,000 --> 00:02:38,000
 So this will be something we're going to wrap up today.

16
00:02:38,000 --> 00:02:45,000
 And starting from next week, we're going to see multirate processing, which is one of the main focus for my part.

17
00:02:45,000 --> 00:02:48,000
 All right. So this is roughly the plan we have.

18
00:02:48,000 --> 00:02:52,000
 But first of all, let me just do a quick recap of what we covered last week.

19
00:02:52,000 --> 00:03:02,000
 I hope you still remember, right? We spent some time talking about how to pretty much come up with this fast Fourier transform idea,

20
00:03:02,000 --> 00:03:07,000
 which can exactly reproduce DFT, discrete Fourier transform.

21
00:03:07,000 --> 00:03:09,000
 So they will give you the same results.

22
00:03:09,000 --> 00:03:16,000
 But, you know, normally when we talk about theoretical analysis, we do DFT because it's more standard, easier.

23
00:03:16,000 --> 00:03:21,000
 But in the actual implementation, fast Fourier transform is always the thing we're using.

24
00:03:21,000 --> 00:03:24,000
 So you need to understand first, what are they?

25
00:03:24,000 --> 00:03:26,000
 What is DFT? What is FFT?

26
00:03:26,000 --> 00:03:29,000
 And more importantly, you need to know why there's a speedup.

27
00:03:29,000 --> 00:03:33,000
 If you remember, we talked about how we can do this complexity analysis.

28
00:03:33,000 --> 00:03:35,000
 I hope you still remember. Big O, right?

29
00:03:35,000 --> 00:03:44,000
 And we say that, well, the reason people love FFT is because the complexity can go down from n squared to n log n.

30
00:03:45,000 --> 00:03:52,000
 And we say that, well, people love n log n because log n grows much slower than linear function.

31
00:03:52,000 --> 00:03:55,000
 So I showed you the plot. I hope you still remember that.

32
00:03:55,000 --> 00:03:58,000
 And you need to know why there's a speedup.

33
00:03:58,000 --> 00:04:05,000
 And after that, we say, well, all of these DFT, FFT are acting on the signals.

34
00:04:05,000 --> 00:04:08,000
 You can represent the signal using the spectrum.

35
00:04:08,000 --> 00:04:13,000
 And similarly, we can also do different kind of representation of the filter.

36
00:04:13,000 --> 00:04:17,000
 All right, so signal is the data you're processing, right?

37
00:04:17,000 --> 00:04:22,000
 The input you're processing. Consider this as your image, your acoustic signal, your text.

38
00:04:22,000 --> 00:04:24,000
 All of these can be treated as signals.

39
00:04:24,000 --> 00:04:29,000
 So pretty much the first part of the review we were doing are on signals.

40
00:04:29,000 --> 00:04:34,000
 And later we say, well, for the other part of the system, right, the filter,

41
00:04:34,000 --> 00:04:37,000
 they can also be represented in different forms.

42
00:04:37,000 --> 00:04:42,000
 That's why we say, well, we can either represent it using impulse response,

43
00:04:42,000 --> 00:04:46,000
 which is the time domain representation, right?

44
00:04:46,000 --> 00:04:51,000
 And also we can also do, represent the same thing in the frequency domain, right?

45
00:04:51,000 --> 00:04:55,000
 Which in other words, you can do transfer function or frequency response.

46
00:04:55,000 --> 00:04:59,000
 The reason we want to do two is because sometimes frequency domain representation

47
00:04:59,000 --> 00:05:03,000
 give you some better idea to understand the characteristics of filter,

48
00:05:03,000 --> 00:05:05,000
 but sometimes impulse response do, right?

49
00:05:05,000 --> 00:05:08,000
 So you need to know both. So later I'm going to talk more about it.

50
00:05:08,000 --> 00:05:13,000
 And, but basically, we say that by looking at the transform,

51
00:05:13,000 --> 00:05:18,000
 sorry, transfer function, which is nothing but a Z-transform of the impulse response,

52
00:05:18,000 --> 00:05:22,000
 you need to be able to categorize type of filters, right?

53
00:05:22,000 --> 00:05:26,000
 If you still remember, there are, I mean, in terms of the amount of impulse,

54
00:05:26,000 --> 00:05:32,000
 we have FIR, we have IR, in terms of which range of frequency we're representing,

55
00:05:32,000 --> 00:05:35,000
 we have low pass filter, band pass filter, and high pass filter,

56
00:05:35,000 --> 00:05:37,000
 or maybe band pass filter, right?

57
00:05:37,000 --> 00:05:41,000
 So these are different ways to categorize the kind of filters, right?

58
00:05:41,000 --> 00:05:46,000
 So you need to be able to categorize them, and also you need to be able to derive

59
00:05:46,000 --> 00:05:51,000
 the transfer function from the given signal flow chart, the block diagram, right?

60
00:05:51,000 --> 00:05:54,000
 I hope you still remember. We're going to revisit that today as well.

61
00:05:54,000 --> 00:05:58,000
 But block diagram is different from the mathematics expression, right?

62
00:05:58,000 --> 00:06:03,000
 Which we normally write as, you know, HA or maybe uppercase HZ.

63
00:06:03,000 --> 00:06:09,000
 Block diagram is more about a visual way or graphical way to represent the filtering.

64
00:06:09,000 --> 00:06:15,000
 The reason we want to do it is because eventually, if you want somebody to implement the filter for you,

65
00:06:15,000 --> 00:06:19,000
 you have to show them the block diagram, because that's exactly how you assemble

66
00:06:19,000 --> 00:06:25,000
 the multiplier, the adders, the time delay together to really implement the filter, right?

67
00:06:25,000 --> 00:06:31,000
 So theoretical analysis, we use mathematics form for real implementations, real design.

68
00:06:31,000 --> 00:06:35,000
 People normally do block diagram, right? So that is what I mean by flow diagram.

69
00:06:35,000 --> 00:06:39,000
 So you need to be able to derive, let's say I give you a block diagram.

70
00:06:39,000 --> 00:06:45,000
 You need to derive the corresponding transfer function, or maybe the difference equation, right?

71
00:06:45,000 --> 00:06:49,000
 And we also say that how to do it, right, if you still remember.

72
00:06:49,000 --> 00:06:54,000
 And also, another thing, actually the last thing we talked about last week is about

73
00:06:54,000 --> 00:06:58,000
 equivalent structure of a given filter structure, right?

74
00:06:58,000 --> 00:07:03,000
 So we say that if I give you a filter structure, you can always do this transpose operation.

75
00:07:03,000 --> 00:07:07,000
 I hope you still remember what is transpose operation. You just flip the sign,

76
00:07:07,000 --> 00:07:13,000
 you change the addition to the point where you speed out the signals, right?

77
00:07:13,000 --> 00:07:18,000
 And you change the input to output, output to input, so you can easily end up with the equivalent.

78
00:07:18,000 --> 00:07:22,000
 I mean, one of the equivalent block diagram of any given one.

79
00:07:22,000 --> 00:07:27,000
 Alright, so this is called equivalent, sorry, this is called a transpose operation.

80
00:07:27,000 --> 00:07:31,000
 It's not the only one. There are many methods we can do it, but this is the easy one.

81
00:07:31,000 --> 00:07:34,000
 I hope everybody can do it, and that's part of the scope.

82
00:07:34,000 --> 00:07:40,000
 Alright, so this is what we covered last week. But after that, I received some emails

83
00:07:40,000 --> 00:07:46,000
 and asking many of the basic things. I didn't know that you probably, not everyone knows,

84
00:07:46,000 --> 00:07:51,000
 for example, what is Z-transform. And it turns out that some of you have some questions about

85
00:07:51,000 --> 00:07:57,000
 how one can relate a difference equation, transfer function, frequency response together.

86
00:07:57,000 --> 00:08:03,000
 So I wish to spend some time to give you a recap on how are these things related from the mathematics perspective.

87
00:08:03,000 --> 00:08:07,000
 So everything starts from this difference equation. I hope you still remember.

88
00:08:07,000 --> 00:08:13,000
 Difference equation first, every time you see the word difference equation, it's always in time.

89
00:08:13,000 --> 00:08:18,000
 Difference equation is one of the time domain representation of the filter.

90
00:08:18,000 --> 00:08:25,000
 Because if you look at the equation here, how to tell whether a representation is time or frequency.

91
00:08:25,000 --> 00:08:29,000
 The easy way to do it is look at, are we using uppercase or lowercase?

92
00:08:29,000 --> 00:08:34,000
 By convention, we normally use lowercase to represent time domain.

93
00:08:34,000 --> 00:08:41,000
 Uppercase represents frequency domain. So if you are given an equation which has all the lowercase,

94
00:08:41,000 --> 00:08:46,000
 and the index is like n, it indicates this is a time domain representation.

95
00:08:46,000 --> 00:08:50,000
 So difference equation is one of the time domain representation.

96
00:08:50,000 --> 00:08:54,000
 We also learn impulse response, that's another one.

97
00:08:54,000 --> 00:08:57,000
 But difference equation is the starting point.

98
00:08:57,000 --> 00:09:01,000
 Everybody knows how to interpret a difference equation.

99
00:09:01,000 --> 00:09:07,000
 So first, difference equation. The most important thing you want to identify from that is the order.

100
00:09:07,000 --> 00:09:12,000
 So last time we keep saying that there's an order of a given difference equation.

101
00:09:12,000 --> 00:09:21,000
 So how to identify the order? You look at this polynomial, and you look at what is the maximum, let's say time delay here.

102
00:09:21,000 --> 00:09:25,000
 In z domain, it's going to be z to the power of minus something.

103
00:09:25,000 --> 00:09:27,000
 In time domain, you look at the time delay.

104
00:09:27,000 --> 00:09:36,000
 So the largest time delay you have will be the n, which is the order of this difference equation.

105
00:09:36,000 --> 00:09:42,000
 Later we're going to see the same kind of filter in the transfer function.

106
00:09:42,000 --> 00:09:48,000
 But in time domain, this is called difference equation, and you need to be able to tell the order of a difference equation,

107
00:09:48,000 --> 00:09:57,000
 which is the maximum amount of time delay, either in the input or output.

108
00:09:57,000 --> 00:10:04,000
 So last time we said that this is the general expression for difference equation.

109
00:10:04,000 --> 00:10:08,000
 But if you look at the right hand side of the equation, there are two parts.

110
00:10:08,000 --> 00:10:13,000
 This part is something to do with the input signal, which is x.

111
00:10:13,000 --> 00:10:17,000
 And it could be something to do with the past time output.

112
00:10:17,000 --> 00:10:21,000
 Remember, this term, the delay starts from 1.

113
00:10:21,000 --> 00:10:27,000
 There's no current time input, sorry, current time output, because current time output is on the left hand side of the equation.

114
00:10:27,000 --> 00:10:35,000
 So it could be, depends on both the current time, past time input, or the past time output.

115
00:10:35,000 --> 00:10:38,000
 So it depends on whether the first term is 0.

116
00:10:38,000 --> 00:10:43,000
 If the first term is all 0, this filter is called FIR filter.

117
00:10:43,000 --> 00:10:49,000
 Remember, we say that FIR filter, one of the characteristics is that all of the AM will be 0.

118
00:10:49,000 --> 00:10:52,000
 But in general, you have both.

119
00:10:52,000 --> 00:10:55,000
 Because if it's IR, you have both.

120
00:10:55,000 --> 00:11:00,000
 But the same always look for the largest amount of time delay.

121
00:11:00,000 --> 00:11:02,000
 Look for this big N.

122
00:11:02,000 --> 00:11:09,000
 This big N will be the order of the difference equation, no matter if it's RF, IR, IR, IR, it's the same.

123
00:11:09,000 --> 00:11:14,000
 So this N, capital letter N, is the order of the filter.

124
00:11:14,000 --> 00:11:17,000
 That's the first thing. I feel like many people are confused about it.

125
00:11:17,000 --> 00:11:22,000
 Let's just get it straight forward. This N is the order of the filter.

126
00:11:22,000 --> 00:11:27,000
 All of these parameters, like AM, BM, are called the filter parameters.

127
00:11:27,000 --> 00:11:34,000
 The key thing is that if you tell me all the AM and BM, I'm going to uniquely determine this filter.

128
00:11:34,000 --> 00:11:36,000
 So no ambiguity.

129
00:11:36,000 --> 00:11:40,000
 You tell me the AM, BM, I can uniquely determine the filter.

130
00:11:40,000 --> 00:11:42,000
 No ambiguity. That's unique.

131
00:11:42,000 --> 00:11:44,000
 There's a one-to-one mapping.

132
00:11:44,000 --> 00:11:50,000
 The other filter will have a unique set of parameters, and one set of parameters will uniquely determine the filter.

133
00:11:50,000 --> 00:11:57,000
 So basically, these are the only parameters you need to define a filter.

134
00:11:57,000 --> 00:12:05,000
 And then, as I just mentioned, if you see that all of AM equal to 0, this will be an FIR.

135
00:12:05,000 --> 00:12:13,000
 In other words, an FIR, in terms of difference equation, current time output will only be depending on the input.

136
00:12:13,000 --> 00:12:16,000
 What I'm going to do is the past time output. No feedback.

137
00:12:16,000 --> 00:12:18,000
 So this will be an FIR.

138
00:12:18,000 --> 00:12:21,000
 Now, this is all about difference equation.

139
00:12:21,000 --> 00:12:24,000
 Like I mentioned, difference equation is in time domain.

140
00:12:24,000 --> 00:12:26,000
 Nothing to do with the frequency.

141
00:12:26,000 --> 00:12:40,000
 But how can I convert this time domain difference equation to the transfer function or to the frequency domain representation?

142
00:12:40,000 --> 00:12:44,000
 Same filter, but I want to represent it not in time, but in frequency.

143
00:12:44,000 --> 00:12:46,000
 So how can I do it?

144
00:12:46,000 --> 00:12:48,000
 You can actually do the so-called Z-transform.

145
00:12:48,000 --> 00:12:51,000
 If you do Z-transform, you will get the transfer function.

146
00:12:51,000 --> 00:12:56,000
 If you do, let's say, DTFT, you will get the frequency response.

147
00:12:56,000 --> 00:13:00,000
 So either way, you will convert time domain to frequency domain.

148
00:13:00,000 --> 00:13:03,000
 So that's what we talked about last time about the transfer function, if you recall.

149
00:13:03,000 --> 00:13:05,000
 There's something with Z.

150
00:13:05,000 --> 00:13:07,000
 But how do we do this?

151
00:13:07,000 --> 00:13:10,000
 I didn't realize, not everybody knows Z-transform.

152
00:13:10,000 --> 00:13:12,000
 So let's recap about this Z-transform.

153
00:13:12,000 --> 00:13:18,000
 So Z-transform, it has a very similar form as DTFT, if you realize.

154
00:13:18,000 --> 00:13:20,000
 So I hope you still remember what is DTFT.

155
00:13:20,000 --> 00:13:25,000
 DTFT still take the discrete signal on the right-hand side.

156
00:13:25,000 --> 00:13:29,000
 You do a summation from minus infinity to infinity.

157
00:13:29,000 --> 00:13:32,000
 The only difference is the base.

158
00:13:33,000 --> 00:13:36,000
 I hope you still remember what is the base for DTFT.

159
00:13:36,000 --> 00:13:39,000
 E to the power of minus j omega n.

160
00:13:39,000 --> 00:13:43,000
 So here, if it's a Z-transform, you don't see the E to the power of something.

161
00:13:43,000 --> 00:13:47,000
 You have this Z to the power of minus n.

162
00:13:47,000 --> 00:13:52,000
 So the only difference is that it's going to simplify the DTFT.

163
00:13:52,000 --> 00:13:55,000
 We replace E to the power of minus j omega,

164
00:13:55,000 --> 00:13:59,000
 sorry, E to the power of minus j omega, not minus, minus sign is still here.

165
00:13:59,000 --> 00:14:08,000
 So Z-transform is nothing but replacing the E to the power of j omega in the DTFT with simply a Z.

166
00:14:08,000 --> 00:14:10,000
 It's just as that simple.

167
00:14:10,000 --> 00:14:13,000
 It's the same thing, but I just changed the notation.

168
00:14:13,000 --> 00:14:17,000
 Why we want to do this is because doing that will make the whole thing simpler.

169
00:14:17,000 --> 00:14:20,000
 You won't see these E to the power of things time to time.

170
00:14:20,000 --> 00:14:23,000
 You only see Z. So make things simpler.

171
00:14:23,000 --> 00:14:28,000
 By doing so, it still gives you a kind of frequency representation,

172
00:14:28,000 --> 00:14:30,000
 but it's the different kind of frequency.

173
00:14:30,000 --> 00:14:34,000
 They're defining the frequency using Z rather than omega.

174
00:14:34,000 --> 00:14:35,000
 That's the only difference.

175
00:14:35,000 --> 00:14:41,000
 But if you do so, you will end up with a Z-transform of the difference equation.

176
00:14:41,000 --> 00:14:45,000
 And that's going to be your transfer function.

177
00:14:45,000 --> 00:14:47,000
 This is how you can get a transfer function.

178
00:14:47,000 --> 00:14:51,000
 You simply do Z-transform over the difference equation.

179
00:14:52,000 --> 00:14:58,000
 The Z-transform, in fact, is nothing but representing a time delay.

180
00:14:58,000 --> 00:14:59,000
 Why?

181
00:14:59,000 --> 00:15:05,000
 Because talking about this definition of Z, if you have Z to the power of minus m,

182
00:15:05,000 --> 00:15:10,000
 these terms denote an n-time-stab delay.

183
00:15:10,000 --> 00:15:16,000
 Remember we say that in DTFT, the time delay will end up with the phase shift,

184
00:15:16,000 --> 00:15:19,000
 but the phase term is represented as the Z.

185
00:15:19,000 --> 00:15:28,000
 So you can easily denote any number of time delay in terms of Z to the power of minus m in the transfer function.

186
00:15:28,000 --> 00:15:33,000
 This is why last time we were seeing the block diagram, you keep seeing this Z to the power of minus 1.

187
00:15:33,000 --> 00:15:39,000
 So that's the reason that one time delay can be represented as Z to the power of minus 1.

188
00:15:39,000 --> 00:15:41,000
 It's because of that definition.

189
00:15:41,000 --> 00:15:48,000
 So if you have a time delay of m-time-stab, you can see equivalently right as the original transfer function,

190
00:15:48,000 --> 00:15:52,000
 multiplied by Z to the power of minus m.

191
00:15:52,000 --> 00:15:54,000
 So this is the reason.

192
00:15:54,000 --> 00:15:57,000
 It's due to the definition of Z-transform.

193
00:15:57,000 --> 00:15:59,000
 I hope this is clear now.

194
00:15:59,000 --> 00:16:02,000
 Last time I just run this too quick, I think.

195
00:16:02,000 --> 00:16:07,000
 But I wish you understand why we keep writing this E to the power of minus 1 minus 2

196
00:16:07,000 --> 00:16:12,000
 is because it's equivalent to a time-domain delay.

197
00:16:12,000 --> 00:16:15,000
 Okay, make sense?

198
00:16:15,000 --> 00:16:21,000
 So by doing so, originally we have this time-domain difference equation.

199
00:16:21,000 --> 00:16:28,000
 But if you do the Z-transform on both sides, left-hand side, right-hand side, you do Z-transform on both sides,

200
00:16:28,000 --> 00:16:32,000
 you are going to end up with this transfer function.

201
00:16:32,000 --> 00:16:34,000
 Also it's easy to understand.

202
00:16:34,000 --> 00:16:40,000
 So you just need to denote the Z-transform yn as the yz.

203
00:16:40,000 --> 00:16:46,000
 And every time you see a time delay, just write it as a Z to the power of minus m.

204
00:16:46,000 --> 00:16:52,000
 And the other term you can just keep it, am, bm, because these are constant scaling.

205
00:16:52,000 --> 00:16:56,000
 Constant term doesn't really change the scale. It's the same scale.

206
00:16:56,000 --> 00:17:03,000
 So if you extract the common factor, yz and xz, you are going to end up with something like this.

207
00:17:03,000 --> 00:17:06,000
 It's nothing but a Z-transform on both sides.

208
00:17:06,000 --> 00:17:13,000
 After this term, you can now come up with the so-called transfer function.

209
00:17:13,000 --> 00:17:21,000
 Because transfer function is defined as the ratio of the Z-transform of output versus the input.

210
00:17:21,000 --> 00:17:29,000
 So this is the formal definition of transfer function, it's the ratio of yz versus xz.

211
00:17:29,000 --> 00:17:34,000
 And how do you get this? You just simply do a Z-transform of the time-domain.

212
00:17:34,000 --> 00:17:39,000
 Oops, okay, let me use the pointer. You just simply do a Z-transform of the time-domain difference equation.

213
00:17:39,000 --> 00:17:43,000
 Both right-hand side and left-hand side, you're going to end up with the equation here.

214
00:17:43,000 --> 00:17:48,000
 And you just need to move the x to the left-hand side, to the denominator.

215
00:17:48,000 --> 00:17:52,000
 You move this term to the right-hand side to become the denominator.

216
00:17:52,000 --> 00:17:55,000
 So this is how you can get the transfer function.

217
00:17:55,000 --> 00:18:01,000
 So you will always have something at the numerator and something at the denominator.

218
00:18:01,000 --> 00:18:12,000
 So this is how you can derive or compute it the transfer function, given a time-domain representation.

219
00:18:12,000 --> 00:18:16,000
 So is it clear now? How are these two related?

220
00:18:16,000 --> 00:18:21,000
 We haven't talked about frequency response yet, but everybody knows how you can...

221
00:18:21,000 --> 00:18:27,000
 Let's say I give you a difference equation. How can you derive or corresponding transfer function?

222
00:18:27,000 --> 00:18:30,000
 I hope this is clear for everyone.

223
00:18:30,000 --> 00:18:34,000
 Or any question you can ask me before I move on.

224
00:18:34,000 --> 00:18:37,000
 Okay? Clear?

225
00:18:37,000 --> 00:18:41,000
 All right, so why are we interested in this transfer function?

226
00:18:41,000 --> 00:18:44,000
 So you will see this transfer function many, many times.

227
00:18:44,000 --> 00:18:47,000
 It's one of the most commonly used representation.

228
00:18:47,000 --> 00:18:56,000
 It's because if you give me this transfer function, I'm able to analyze the properties of this transform easily.

229
00:18:56,000 --> 00:18:59,000
 So what property I want to know?

230
00:18:59,000 --> 00:19:04,000
 Well, I'm first interested of the denominator here.

231
00:19:04,000 --> 00:19:10,000
 Because, first of all, everybody knows this denominator is actually a polynomial.

232
00:19:10,000 --> 00:19:14,000
 Because you see different terms and every term will have different order.

233
00:19:14,000 --> 00:19:16,000
 This is a very standard polynomial.

234
00:19:16,000 --> 00:19:21,000
 So we are interested of the roots of this polynomial.

235
00:19:21,000 --> 00:19:25,000
 In other words, what are the values that can make this term to be zero?

236
00:19:25,000 --> 00:19:28,000
 The denominator to be zero.

237
00:19:28,000 --> 00:19:37,000
 Okay? Because the roots of that, of course, is going to drive the transfer function to be infinitely large.

238
00:19:37,000 --> 00:19:40,000
 But this value of the roots...

239
00:19:40,000 --> 00:19:45,000
 Sorry, the roots of the denominator is called the poles of the transfer function.

240
00:19:45,000 --> 00:19:47,000
 We'll give a name to that.

241
00:19:47,000 --> 00:19:50,000
 It may be one, maybe two, maybe multiple, so we put an S here.

242
00:19:50,000 --> 00:19:52,000
 So it could be multiple poles.

243
00:19:52,000 --> 00:19:54,000
 Or maybe no poles, right?

244
00:19:54,000 --> 00:19:57,000
 Either way, it depends on the actual denominator.

245
00:19:57,000 --> 00:20:08,000
 And why we're interested of the poles is because if we find that all the poles, all the pKs, which make the denominator be zero,

246
00:20:08,000 --> 00:20:13,000
 if all of these values are somehow located inside a unit circle,

247
00:20:13,000 --> 00:20:16,000
 in other words, you look at the magnitude of these pKs.

248
00:20:16,000 --> 00:20:23,000
 If everyone are within the magnitude of one, you say that this filter is a stable filter.

249
00:20:23,000 --> 00:20:30,000
 In other words, you won't have any input going to drive the response to be infinitely large, right? Exploding.

250
00:20:30,000 --> 00:20:36,000
 So we love this filter because everything is bonded, it's finite, so it's going to be a useful filter, right?

251
00:20:36,000 --> 00:20:38,000
 Consider it as a system.

252
00:20:38,000 --> 00:20:42,000
 How to determine... So if a question asks you, hey, is this filter stable or not?

253
00:20:42,000 --> 00:20:45,000
 You should know that. Okay, what I need to know...

254
00:20:45,000 --> 00:20:49,000
 First, you need to obtain this transfer function, right?

255
00:20:49,000 --> 00:20:53,000
 Second one is looking at the denominator of this transfer function.

256
00:20:53,000 --> 00:20:57,000
 The last step is to figure out, okay, how can I find the roots of it?

257
00:20:57,000 --> 00:21:02,000
 You can do some factorizations, you factor it into multiple terms.

258
00:21:02,000 --> 00:21:06,000
 If you see adding term is making that to be zero, you know that that's a root, right?

259
00:21:06,000 --> 00:21:13,000
 So we can... All the roots, if all of them are within one, you can conclude this is a stable filter, right?

260
00:21:13,000 --> 00:21:17,000
 So this is why we need to use the transfer function.

261
00:21:17,000 --> 00:21:20,000
 Okay, well, another thing people are interested in is the zeros, right?

262
00:21:20,000 --> 00:21:24,000
 Zeros is correspondingly the roots of the numerator, okay?

263
00:21:24,000 --> 00:21:30,000
 Numerator, if you find a root, you will drive the whole transfer function to be zero.

264
00:21:30,000 --> 00:21:37,000
 And also, you know, a filter can have multiple zeros, and those zeros are normally called the z-case.

265
00:21:37,000 --> 00:21:45,000
 So normally, we are interested in all the poles and all of the zeros of a given transfer function, right?

266
00:21:45,000 --> 00:21:51,000
 Okay, so this is actually why we need... I mean, why we like to analyze the transfer function, right?

267
00:21:51,000 --> 00:21:54,000
 And you know how to get there, right? Doing the z-transform.

268
00:21:54,000 --> 00:22:02,000
 Okay, so transfer function, we know that it's by doing the z-transform of the difference equation.

269
00:22:02,000 --> 00:22:09,000
 But like I mentioned, you can also do a DTFT over, you know, let's say, difference equation, right?

270
00:22:09,000 --> 00:22:14,000
 So how are these two related? So both of them are in the frequency domain, right?

271
00:22:14,000 --> 00:22:19,000
 So both of them are considered as the frequency representation of the filter.

272
00:22:19,000 --> 00:22:27,000
 In fact, transfer function and frequency response are nothing but a different way to express it, right?

273
00:22:27,000 --> 00:22:28,000
 They are basically the same thing.

274
00:22:28,000 --> 00:22:34,000
 And how to relate the two? Well, it's very easy because it's just by swapping the parameters.

275
00:22:34,000 --> 00:22:43,000
 So if you give me a z-transform, which is the hz, I simply just let all of the z equal to e to the power of j omega.

276
00:22:43,000 --> 00:22:46,000
 I can end up with my frequency response.

277
00:22:46,000 --> 00:22:52,000
 So it's only a swap of the variables, right? But the form is the same, actually.

278
00:22:52,000 --> 00:22:57,000
 But by swapping the variables, you are going from the z-frequency to the omega frequency.

279
00:22:57,000 --> 00:23:04,000
 So it's a two kind of frequency, but both of them are equivalently represented, right?

280
00:23:04,000 --> 00:23:07,000
 So now you see how they are related, right?

281
00:23:07,000 --> 00:23:10,000
 So you're starting points to the difference equation.

282
00:23:10,000 --> 00:23:13,000
 If you do z-transform, you end up with the transfer function.

283
00:23:13,000 --> 00:23:17,000
 If you do DTFT, you end up with the frequency response.

284
00:23:17,000 --> 00:23:21,000
 And these two are nothing but a swap of the variables, right?

285
00:23:22,000 --> 00:23:31,000
 So this is basically how you can organize all of the possible ways to represent a filter, right?

286
00:23:31,000 --> 00:23:34,000
 Okay, is it clear enough?

287
00:23:34,000 --> 00:23:39,000
 All right, so the next time if there's a question, give you any form, right?

288
00:23:39,000 --> 00:23:41,000
 Let's say one form of the representation.

289
00:23:41,000 --> 00:23:44,000
 You need to be able to convert it to any other form, right?

290
00:23:44,000 --> 00:23:46,000
 Because they are equivalent.

291
00:23:46,000 --> 00:23:50,000
 So you need to know what tool you're going to use, right?

292
00:23:50,000 --> 00:23:52,000
 So let me give you a quick test, right?

293
00:23:52,000 --> 00:23:57,000
 So if I give you the frequency response, I ask for the difference equation.

294
00:23:57,000 --> 00:23:59,000
 What are you going to do?

295
00:23:59,000 --> 00:24:03,000
 What should you do wrong to get the difference equation?

296
00:24:03,000 --> 00:24:04,000
 Okay, let me repeat.

297
00:24:04,000 --> 00:24:10,000
 If a question says, hey, here's a filter, and here's the frequency response of the filter,

298
00:24:10,000 --> 00:24:15,000
 how can I get my difference equation of the same filter?

299
00:24:15,000 --> 00:24:17,000
 What should I do?

300
00:24:18,000 --> 00:24:20,000
 Sorry?

301
00:24:21,000 --> 00:24:23,000
 Any guess?

302
00:24:42,000 --> 00:24:43,000
 Difference equation?

303
00:24:43,000 --> 00:24:44,000
 Yes, that's correct.

304
00:24:44,000 --> 00:24:47,000
 So you are suggesting let's first get to the transfer function, right?

305
00:24:47,000 --> 00:24:50,000
 How to go from frequency response to transfer function?

306
00:24:50,000 --> 00:24:53,000
 Well, you do the variable swapping, right?

307
00:24:53,000 --> 00:24:55,000
 You just swap the variable.

308
00:24:55,000 --> 00:24:56,000
 Let's say you swap it back.

309
00:24:56,000 --> 00:24:58,000
 We have to somehow figure out a way to swap it back.

310
00:24:58,000 --> 00:25:00,000
 And then you do a so-called inverse Z-transform.

311
00:25:00,000 --> 00:25:01,000
 Yes, that's possible.

312
00:25:01,000 --> 00:25:07,000
 But maybe a more straightforward way is just simply do an inverse DTFT, right?

313
00:25:07,000 --> 00:25:13,000
 Because like I mentioned, both of these two terms, like frequency response and also Z-transform are,

314
00:25:13,000 --> 00:25:18,000
 one way to represent them in frequency, but depends on what frequency you are talking about.

315
00:25:18,000 --> 00:25:22,000
 You just need to find the corresponding so-called transform, right?

316
00:25:22,000 --> 00:25:26,000
 If it's a transfer function, it's in the Z-transform.

317
00:25:26,000 --> 00:25:30,000
 If it's a frequency response, it's actually in the omega domain, right?

318
00:25:30,000 --> 00:25:31,000
 You have a question?

319
00:25:39,000 --> 00:25:41,000
 Okay, so you are saying, okay.

320
00:25:41,000 --> 00:25:46,000
 Your question is like, if we already have this frequency response, right,

321
00:25:46,000 --> 00:25:49,000
 which is done by DTFT, why we need a Z-transform anyway?

322
00:25:49,000 --> 00:25:51,000
 Anyway, they are the same, right?

323
00:25:51,000 --> 00:25:52,000
 You're right.

324
00:25:52,000 --> 00:25:55,000
 All of these forms we have, we're talking about here are equivalent.

325
00:25:55,000 --> 00:25:56,000
 The same thing, right?

326
00:25:56,000 --> 00:26:03,000
 But why we need specifically a Z-transform is because it's simpler in terms of the form, right?

327
00:26:03,000 --> 00:26:10,000
 You don't have all of these, you know, the whole idea is to get rid of this repeating Z to the power of something.

328
00:26:10,000 --> 00:26:14,000
 It's not easy to write and also not easy to rate.

329
00:26:14,000 --> 00:26:15,000
 People want to get rid of it.

330
00:26:15,000 --> 00:26:18,000
 And for the sake of simplicity, they replace it with Z.

331
00:26:18,000 --> 00:26:19,000
 That's it.

332
00:26:19,000 --> 00:26:20,000
 No other reason.

333
00:26:20,000 --> 00:26:29,000
 And because people realize that time domain is actually equivalent to just simply a Z to the power of minus one.

334
00:26:29,000 --> 00:26:33,000
 And due to that reason, they purposely invent this Z-transform.

335
00:26:33,000 --> 00:26:37,000
 Because what we're going to do is time delay very frequently.

336
00:26:37,000 --> 00:26:38,000
 Later you will see, right?

337
00:26:38,000 --> 00:26:39,000
 Multi-prosessing.

338
00:26:39,000 --> 00:26:43,000
 Next week we're also going to talk about this time delay very, very frequently.

339
00:26:43,000 --> 00:26:50,000
 So instead of writing this e to the power of minus j omega every time, they just simply write a Z to the power of minus one.

340
00:26:50,000 --> 00:26:52,000
 For simplicity, no other reasons.

341
00:26:52,000 --> 00:26:53,000
 Yeah.

342
00:26:53,000 --> 00:26:57,000
 But you're right, the equivalent is the same thing.

343
00:26:57,000 --> 00:27:03,000
 And in fact, if you're dealing with signal processing, you will find that people invent many, many transforms.

344
00:27:03,000 --> 00:27:08,000
 Like wavelets, cosine transform, Fourier transform, sinusoidal transform.

345
00:27:08,000 --> 00:27:10,000
 And why do we want to do it?

346
00:27:10,000 --> 00:27:13,000
 Because they may be compact in some transform, just like here.

347
00:27:13,000 --> 00:27:17,000
 They may be compact in Z-transform and people like to use it.

348
00:27:17,000 --> 00:27:22,000
 Most likely for the sake of compact representation.

349
00:27:22,000 --> 00:27:23,000
 Yeah.

350
00:27:23,000 --> 00:27:24,000
 Okay.

351
00:27:24,000 --> 00:27:27,000
 Any other questions?

352
00:27:27,000 --> 00:27:29,000
 All right.

353
00:27:29,000 --> 00:27:35,000
 But just ask yourself, are you able to go from one way of representation to the other, any other way?

354
00:27:35,000 --> 00:27:38,000
 Because in the exam I can give you any question.

355
00:27:38,000 --> 00:27:43,000
 But you need to know at least one approach to convert one to the other.

356
00:27:43,000 --> 00:27:44,000
 And that's it.

357
00:27:44,000 --> 00:27:46,000
 You should be safe for the test.

358
00:27:46,000 --> 00:27:52,000
 And I think I already explained basically the pair-wise relationship.

359
00:27:52,000 --> 00:27:53,000
 Okay.

360
00:27:53,000 --> 00:27:55,000
 So we have two time domain representation.

361
00:27:55,000 --> 00:27:57,000
 Impulse response, difference equation.

362
00:27:57,000 --> 00:27:59,000
 We have two frequency domain representation, right?

363
00:27:59,000 --> 00:28:01,000
 Transfer function, frequency response.

364
00:28:01,000 --> 00:28:03,000
 So think about how they are related to each other.

365
00:28:03,000 --> 00:28:04,000
 Right?

366
00:28:04,000 --> 00:28:07,000
 And then you should be very clear about all of these representation.

367
00:28:07,000 --> 00:28:09,000
 Okay.

368
00:28:09,000 --> 00:28:11,000
 So that's it.

369
00:28:11,000 --> 00:28:12,000
 Okay.

370
00:28:12,000 --> 00:28:13,000
 Here's a simple, here's one test.

371
00:28:13,000 --> 00:28:14,000
 All right.

372
00:28:14,000 --> 00:28:15,000
 So one example.

373
00:28:15,000 --> 00:28:19,000
 Suppose that I were given a filter.

374
00:28:19,000 --> 00:28:23,000
 And this, apparently the filter is represented using a difference equation.

375
00:28:23,000 --> 00:28:25,000
 Again, this is a time domain representation.

376
00:28:25,000 --> 00:28:30,000
 So they first want you to find out what is the zeroes and what are the zero and poles.

377
00:28:30,000 --> 00:28:31,000
 Okay.

378
00:28:31,000 --> 00:28:37,000
 So to get the zero and poles, we just say that you can read that only from the transfer function.

379
00:28:37,000 --> 00:28:45,000
 So the first thing to do is to ask yourself, how can I obtain a transfer function from the difference equation?

380
00:28:45,000 --> 00:28:47,000
 It's actually a Z-transform, right?

381
00:28:47,000 --> 00:28:50,000
 You need to apply Z-transform to get the transfer function.

382
00:28:50,000 --> 00:28:51,000
 That's step one.

383
00:28:51,000 --> 00:28:55,000
 So what you need to do is apply to both sides, right?

384
00:28:55,000 --> 00:28:57,000
 Left-hand side, right-hand side.

385
00:28:57,000 --> 00:29:08,000
 So you're going to enabrate this guy goes to YZ and this guy goes to 0.5 times YZ times Z2, sorry, Z2 power of minus 1.

386
00:29:08,000 --> 00:29:11,000
 Because this minus 1 gives you one time delay, right?

387
00:29:11,000 --> 00:29:19,000
 And the right-hand side is also XZ plus XZ times Z2 power of minus 1, right?

388
00:29:19,000 --> 00:29:27,000
 So now what you need to do is you want to figure out the transfer function, which is nothing but YZ over XZ.

389
00:29:27,000 --> 00:29:33,000
 So you want to move the X to the other side and you want to move the other term to the right-hand side, right?

390
00:29:33,000 --> 00:29:35,000
 Both of them become the denominator.

391
00:29:35,000 --> 00:29:40,000
 So that's how you can get this term, which is the ratio between Y and Z.

392
00:29:40,000 --> 00:29:42,000
 Sorry, Y and X, alright?

393
00:29:42,000 --> 00:29:45,000
 So now you need to ask yourself, how can I find a zero?

394
00:29:45,000 --> 00:29:47,000
 How can I find a pole?

395
00:29:47,000 --> 00:29:48,000
 Right, this is the second step.

396
00:29:48,000 --> 00:29:52,000
 So the first step is to get the right representation.

397
00:29:52,000 --> 00:29:55,000
 In this case, it's the Z-transform.

398
00:29:55,000 --> 00:29:56,000
 It's the transfer function.

399
00:29:56,000 --> 00:30:04,000
 Alright, the second step is to figure out the answer to the question by using that function.

400
00:30:04,000 --> 00:30:11,000
 So here, zero will be the value to make the numerator to be zero.

401
00:30:11,000 --> 00:30:13,000
 So what is the zero here?

402
00:30:13,000 --> 00:30:17,000
 The zero will be this term becomes minus 1.

403
00:30:17,000 --> 00:30:22,000
 How many zeroes have... well, I can only have up to 1 because the numerator is order 1.

404
00:30:22,000 --> 00:30:28,000
 For, let's say, nth order, you can have at most n zeros.

405
00:30:28,000 --> 00:30:31,000
 That's the nature of the polynomial.

406
00:30:31,000 --> 00:30:34,000
 And then, correspondingly, how many poles I have?

407
00:30:34,000 --> 00:30:35,000
 Well, I have one pole.

408
00:30:35,000 --> 00:30:44,000
 If this guy is equal to 0.5, it's going to make this denominator to be zero, which drives the whole thing to be infinity.

409
00:30:44,000 --> 00:30:46,000
 So you have one zero, one pole.

410
00:30:46,000 --> 00:30:49,000
 This is how you can answer the first question.

411
00:30:49,000 --> 00:30:50,000
 Now they say, is this stable?

412
00:30:50,000 --> 00:30:55,000
 Well, we just learned how to tell if the filter is stable or not.

413
00:30:55,000 --> 00:30:58,000
 It's by looking at the poles, not the zero, the poles.

414
00:30:58,000 --> 00:31:03,000
 And we're only interested in the magnitude of the poles.

415
00:31:03,000 --> 00:31:06,000
 So now we see the poles is 0.5.

416
00:31:06,000 --> 00:31:08,000
 What's the magnitude?

417
00:31:08,000 --> 00:31:10,000
 0.5 because that's a real number, right?

418
00:31:10,000 --> 00:31:11,000
 No phase.

419
00:31:11,000 --> 00:31:15,000
 So 0.5 gives you a magnitude which is less than 1.

420
00:31:15,000 --> 00:31:20,000
 In other words, that pole is within the unit vector, unit pole.

421
00:31:20,000 --> 00:31:25,000
 So in this case, you will have a stable filter.

422
00:31:25,000 --> 00:31:26,000
 Now you see how to do it.

423
00:31:26,000 --> 00:31:33,000
 So always the step one, ask yourself, what is the right representation I need?

424
00:31:33,000 --> 00:31:35,000
 And figure out how to get there.

425
00:31:35,000 --> 00:31:40,000
 The second is, extract information from that expression, from that representation.

426
00:31:40,000 --> 00:31:44,000
 You need poles, you need zeros, you need stability.

427
00:31:44,000 --> 00:31:46,000
 Find out the corresponding condition, right?

428
00:31:46,000 --> 00:31:48,000
 And answer the question.

429
00:31:48,000 --> 00:31:50,000
 This is how you do it.

430
00:31:50,000 --> 00:31:57,000
 And now the second question says, well, let's compute the frequency response at omega equal to pi over 4.

431
00:31:57,000 --> 00:32:01,000
 So now the keyword is frequency response, right?

432
00:32:01,000 --> 00:32:05,000
 Do we have the frequency response now?

433
00:32:05,000 --> 00:32:06,000
 Not yet, right?

434
00:32:06,000 --> 00:32:08,000
 What we have is the difference equation.

435
00:32:08,000 --> 00:32:09,000
 We already got the transfer function.

436
00:32:09,000 --> 00:32:15,000
 So we need the other type of frequency representation, which is the frequency response.

437
00:32:15,000 --> 00:32:19,000
 So how can I get my frequency response now?

438
00:32:19,000 --> 00:32:20,000
 Sorry?

439
00:32:20,000 --> 00:32:27,000
 Please use the pole minus 12 to replace the unit pole over the j-value.

440
00:32:27,000 --> 00:32:28,000
 Omega, exactly.

441
00:32:28,000 --> 00:32:29,000
 So you're right.

442
00:32:29,000 --> 00:32:30,000
 So actually you have two ways.

443
00:32:30,000 --> 00:32:37,000
 You can simply, that's what you suggested, directly go from the transfer function to the frequency response, right?

444
00:32:37,000 --> 00:32:41,000
 Because most of them are in the frequency, so you don't have to do another transform.

445
00:32:41,000 --> 00:32:44,000
 But just simply change the variables.

446
00:32:44,000 --> 00:32:45,000
 How to change the variable?

447
00:32:45,000 --> 00:32:49,000
 You just need to replace the z-waste corresponding e to the power of j omega.

448
00:32:49,000 --> 00:32:50,000
 Right?

449
00:32:50,000 --> 00:32:52,000
 So this is the simple way.

450
00:32:52,000 --> 00:32:56,000
 Or if you want, you can also do a DTFT to this guy.

451
00:32:56,000 --> 00:32:58,000
 But I don't really recommend that.

452
00:32:58,000 --> 00:32:59,000
 But if you want, you can do it.

453
00:32:59,000 --> 00:33:00,000
 You got the same result.

454
00:33:00,000 --> 00:33:03,000
 The simple way is just go from the z-transform.

455
00:33:03,000 --> 00:33:04,000
 All right?

456
00:33:04,000 --> 00:33:08,000
 So if you do the change of the variables, you're going to end up with something like this.

457
00:33:08,000 --> 00:33:09,000
 Okay?

458
00:33:09,000 --> 00:33:12,000
 So now we have this variable of omega.

459
00:33:12,000 --> 00:33:18,000
 So now you can substitute the value of the omega equal to pi over 4.

460
00:33:18,000 --> 00:33:24,000
 Of course you have to do some calculation, but somehow you can get the corresponding complex number.

461
00:33:24,000 --> 00:33:27,000
 And of course you can use a calculator if you want.

462
00:33:27,000 --> 00:33:29,000
 You're allowed to bring a calculator, by the way.

463
00:33:29,000 --> 00:33:33,000
 So by after having this guy, you look at the question.

464
00:33:33,000 --> 00:33:36,000
 The question is asking for the frequency response.

465
00:33:36,000 --> 00:33:40,000
 So in other words, you need both the magnitude and the phase.

466
00:33:40,000 --> 00:33:41,000
 Right?

467
00:33:41,000 --> 00:33:48,000
 So the magnitude will be the 2.5078, which is the one before the e to the power of something.

468
00:33:48,000 --> 00:33:49,000
 Right?

469
00:33:49,000 --> 00:33:52,000
 And the phase is actually in the exponential term here.

470
00:33:52,000 --> 00:33:54,000
 So these will be the corresponding answers.

471
00:33:54,000 --> 00:33:57,000
 So normally when people ask you a response, you need two things.

472
00:33:57,000 --> 00:34:00,000
 If it's a complex number, you need a magnitude plus phase.

473
00:34:00,000 --> 00:34:03,000
 So that's how you can extract from the complex number.

474
00:34:03,000 --> 00:34:04,000
 Right?

475
00:34:04,000 --> 00:34:05,000
 Okay?

476
00:34:05,000 --> 00:34:07,000
 It makes sense.

477
00:34:07,000 --> 00:34:10,000
 A simple example, but give you some idea, right?

478
00:34:10,000 --> 00:34:13,000
 What could be the question, you know?

479
00:34:13,000 --> 00:34:15,000
 But I don't really give you the same question.

480
00:34:15,000 --> 00:34:16,000
 I can give you something similar.

481
00:34:16,000 --> 00:34:17,000
 Right?

482
00:34:17,000 --> 00:34:21,000
 But any pair of the representation, you need to know how to compute.

483
00:34:21,000 --> 00:34:22,000
 Right?

484
00:34:22,000 --> 00:34:23,000
 Okay?

485
00:34:23,000 --> 00:34:24,000
 Questions?

486
00:34:24,000 --> 00:34:25,000
 No?

487
00:34:25,000 --> 00:34:26,000
 Okay.

488
00:34:26,000 --> 00:34:31,000
 So I think that's pretty much enough recap for those of you who are not familiar with

489
00:34:31,000 --> 00:34:33,000
 the transform function.

490
00:34:33,000 --> 00:34:35,000
 Now we go back to what we left out last week.

491
00:34:35,000 --> 00:34:36,000
 All right?

492
00:34:36,000 --> 00:34:41,000
 If you remember, we talked about the so-called equivalent structure.

493
00:34:41,000 --> 00:34:42,000
 Right?

494
00:34:42,000 --> 00:34:44,000
 We say there is a transpose operation.

495
00:34:44,000 --> 00:34:45,000
 I give you a block diagram.

496
00:34:45,000 --> 00:34:49,000
 You can give me another block diagram with the same kind of a filter design.

497
00:34:49,000 --> 00:34:50,000
 Right?

498
00:34:50,000 --> 00:34:55,000
 By doing the transpose operation.

499
00:34:55,000 --> 00:34:56,000
 Actually, right?

500
00:34:56,000 --> 00:34:58,000
 That's one way to do it.

501
00:34:58,000 --> 00:35:03,000
 But if you're doing that, it's going to give you the exact same filter.

502
00:35:03,000 --> 00:35:04,000
 All right?

503
00:35:04,000 --> 00:35:07,000
 So it's the same kind of equivalent structure.

504
00:35:07,000 --> 00:35:12,000
 But in some cases, even the equivalent structure, right?

505
00:35:12,000 --> 00:35:15,000
 How should I say?

506
00:35:16,000 --> 00:35:22,000
 That kind of transpose operator will not give you something desired, right?

507
00:35:22,000 --> 00:35:24,000
 Because that's only one way to find the equivalent.

508
00:35:24,000 --> 00:35:31,000
 So we want to look at what is the basic structure that we can use to design an FIR filter.

509
00:35:31,000 --> 00:35:32,000
 Right?

510
00:35:32,000 --> 00:35:38,000
 Because FIR filter, which we talked about last week, basically you can have an older

511
00:35:38,000 --> 00:35:43,000
 N FIR filter, which is representing in terms of the transfer function here.

512
00:35:43,000 --> 00:35:44,000
 Right?

513
00:35:44,000 --> 00:35:47,000
 We just say that, well, how to determine the order?

514
00:35:47,000 --> 00:35:49,000
 You look at the highest time delay.

515
00:35:49,000 --> 00:35:50,000
 Right?

516
00:35:50,000 --> 00:35:54,000
 Here the highest time delay will be z to the power of minus upper case N.

517
00:35:54,000 --> 00:35:57,000
 And, well, of course, this is going to be a polynomial.

518
00:35:57,000 --> 00:35:58,000
 Right?

519
00:35:58,000 --> 00:36:02,000
 And corresponding to the time domain, we just say that this can give you a difference equation.

520
00:36:02,000 --> 00:36:04,000
 Also, you know, order of N.

521
00:36:04,000 --> 00:36:12,000
 And actually for an Nth order of a filter, right, you need exactly M plus 1 coefficients

522
00:36:12,000 --> 00:36:14,000
 to represent this filter.

523
00:36:14,000 --> 00:36:15,000
 Right?

524
00:36:15,000 --> 00:36:20,000
 So because just now we say that actually all of the, you actually have M plus 1 terms

525
00:36:20,000 --> 00:36:24,000
 of polynomial, right, including the zeroes order.

526
00:36:24,000 --> 00:36:27,000
 So in total, you have M plus 1 coefficients.

527
00:36:27,000 --> 00:36:33,000
 So to implement this in a block diagram, remember we say that these are the mathematical expression.

528
00:36:33,000 --> 00:36:36,000
 But we also have a corresponding block diagram.

529
00:36:36,000 --> 00:36:44,000
 So if I want to represent an Nth order filter in the block diagram, in general, I'm not talking

530
00:36:44,000 --> 00:36:50,000
 about a special case, but in general case, we need M plus 1 multiplications or multipliers

531
00:36:50,000 --> 00:36:54,000
 and two input adders together.

532
00:36:54,000 --> 00:36:55,000
 Okay?

533
00:36:55,000 --> 00:36:57,000
 Why this is true?

534
00:36:57,000 --> 00:36:58,000
 It's easy, right?

535
00:36:58,000 --> 00:37:01,000
 Because you will have M plus 1 coefficients.

536
00:37:01,000 --> 00:37:06,000
 You need to multiply them to each of the terms in the polynomial.

537
00:37:06,000 --> 00:37:12,000
 And each of the terms in the polynomial represents the current time and the delayed version of the signal.

538
00:37:12,000 --> 00:37:14,000
 So you have to multiply them together.

539
00:37:14,000 --> 00:37:17,000
 And these require M plus 1 multiplication.

540
00:37:17,000 --> 00:37:19,000
 And then you have to sum them up.

541
00:37:19,000 --> 00:37:20,000
 Right?

542
00:37:20,000 --> 00:37:23,000
 Summing up M plus 1 term need N number of adders.

543
00:37:23,000 --> 00:37:28,000
 So these are the necessary amount of computation you need for general case.

544
00:37:28,000 --> 00:37:29,000
 Okay?

545
00:37:29,000 --> 00:37:34,000
 So when you design, let's say a design an FIR filter, right?

546
00:37:34,000 --> 00:37:39,000
 Directly translate that expression into this block diagram.

547
00:37:39,000 --> 00:37:41,000
 So how can I interpret this?

548
00:37:41,000 --> 00:37:43,000
 Well, I have an X and coming in.

549
00:37:43,000 --> 00:37:44,000
 Right?

550
00:37:44,000 --> 00:37:48,000
 So this branch is actually the zero order branch.

551
00:37:48,000 --> 00:37:49,000
 Okay?

552
00:37:49,000 --> 00:37:50,000
 Why?

553
00:37:50,000 --> 00:37:51,000
 Because there's no time delay.

554
00:37:51,000 --> 00:37:52,000
 Right?

555
00:37:52,000 --> 00:37:54,000
 So this branch is actually the zero order.

556
00:37:54,000 --> 00:37:58,000
 In other words, the current time input contributed to the output.

557
00:37:58,000 --> 00:37:59,000
 Right?

558
00:37:59,000 --> 00:38:06,000
 And this branch denotes the delay by one branch, which is the first order polynomial.

559
00:38:06,000 --> 00:38:08,000
 I mean, first order term in the polynomial.

560
00:38:08,000 --> 00:38:09,000
 Right?

561
00:38:09,000 --> 00:38:12,000
 Corresponding this term becomes the second order polynomial.

562
00:38:12,000 --> 00:38:19,000
 So if I give you, let's say, a general form of the difference equation or the transfer function.

563
00:38:19,000 --> 00:38:28,000
 The direct form, we call direct form to design the block diagram is by doing the exact writing

564
00:38:28,000 --> 00:38:34,000
 them down as the, you know, M, sorry, M plus 1 number of multiplication.

565
00:38:34,000 --> 00:38:38,000
 So this is M plus 1 together with N number of addition.

566
00:38:38,000 --> 00:38:39,000
 Right?

567
00:38:39,000 --> 00:38:41,000
 That's how you can form the Nth order.

568
00:38:41,000 --> 00:38:46,000
 In this case, it's the fourth order polynomial for the Z-transform.

569
00:38:46,000 --> 00:38:47,000
 Right?

570
00:38:48,000 --> 00:38:52,000
 Okay, so I just want to repeat this.

571
00:38:52,000 --> 00:38:57,000
 So just now we say that you can represent a filter using either Z-transform or difference

572
00:38:57,000 --> 00:38:58,000
 equation.

573
00:38:58,000 --> 00:38:59,000
 Right?

574
00:38:59,000 --> 00:39:02,000
 And we say that if it's a Z-transform, we can represent it as a polynomial.

575
00:39:02,000 --> 00:39:03,000
 Right?

576
00:39:03,000 --> 00:39:05,000
 And polynomial have an order, highest order.

577
00:39:05,000 --> 00:39:07,000
 Let's say we have Nth order polynomial.

578
00:39:07,000 --> 00:39:08,000
 Right?

579
00:39:08,000 --> 00:39:14,000
 In other words, if it's Nth order polynomial here, you have at most M plus 1 terms if you

580
00:39:14,000 --> 00:39:15,000
 write them up.

581
00:39:15,000 --> 00:39:16,000
 Right?

582
00:39:16,000 --> 00:39:20,000
 Because you have to count from zero's order, first order, all the way to Nth order.

583
00:39:20,000 --> 00:39:24,000
 So you're going to have N number of terms here.

584
00:39:24,000 --> 00:39:26,000
 Make sense?

585
00:39:28,000 --> 00:39:30,000
 Does it make sense?

586
00:39:30,000 --> 00:39:34,000
 I'm saying that if you have an Nth order polynomial, you are going to have M plus 1 term.

587
00:39:34,000 --> 00:39:36,000
 I mean at most, right?

588
00:39:36,000 --> 00:39:40,000
 Some of them could be zero, but let's say in general form, you have M plus 1 terms.

589
00:39:40,000 --> 00:39:41,000
 Okay?

590
00:39:41,000 --> 00:39:45,000
 Every term will have a corresponding coefficient, this hN.

591
00:39:45,000 --> 00:39:48,000
 N range from zero to N, right?

592
00:39:48,000 --> 00:39:50,000
 Eventually have M plus 1 number of coefficients.

593
00:39:50,000 --> 00:39:54,000
 So you have to multiply them with the corresponding Z term.

594
00:39:54,000 --> 00:39:58,000
 So you need M plus 1 number of multiplier.

595
00:39:58,000 --> 00:39:59,000
 Right?

596
00:39:59,000 --> 00:40:08,000
 And that's why in the direct form, you will have 1, 2, 3, 4, 5, 4 plus 1 number of multiplier.

597
00:40:08,000 --> 00:40:11,000
 And these will be the corresponding coefficients here.

598
00:40:11,000 --> 00:40:12,000
 Right?

599
00:40:12,000 --> 00:40:13,000
 Okay.

600
00:40:13,000 --> 00:40:17,000
 And we say that every Z to the power of something denotes a time delay.

601
00:40:17,000 --> 00:40:21,000
 So if it's first order, you have one time delay.

602
00:40:21,000 --> 00:40:23,000
 If it's second order, you have two time delay.

603
00:40:23,000 --> 00:40:27,000
 So in other words, the A's order term will have N number of time delay.

604
00:40:27,000 --> 00:40:28,000
 Right?

605
00:40:28,000 --> 00:40:35,000
 So that's why you end up with the first delay, second delay, third delay, so together, you have N number of delay.

606
00:40:35,000 --> 00:40:36,000
 Right?

607
00:40:36,000 --> 00:40:39,000
 Because this is actually the highest order term.

608
00:40:39,000 --> 00:40:41,000
 Now the only thing to do is just sum them up.

609
00:40:41,000 --> 00:40:43,000
 You need N number of summation.

610
00:40:43,000 --> 00:40:44,000
 Right?

611
00:40:44,000 --> 00:40:51,000
 So this is actually the direct form of writing an Nth order polynomial in a block diagram.

612
00:40:51,000 --> 00:40:54,000
 Right?

613
00:40:54,000 --> 00:40:58,000
 And this is called direct form because we don't do any manipulation.

614
00:40:58,000 --> 00:40:59,000
 Right?

615
00:40:59,000 --> 00:41:04,000
 You are given whatever polynomial you have, just write them down, term by term.

616
00:41:04,000 --> 00:41:07,000
 And you're going to end up with N plus one branches here.

617
00:41:07,000 --> 00:41:16,000
 So these will give you one realization of the FIR, which can be ready for development.

618
00:41:16,000 --> 00:41:17,000
 Right?

619
00:41:17,000 --> 00:41:19,000
 And this is nothing but a convolution.

620
00:41:19,000 --> 00:41:21,000
 If you think about it in this way, right?

621
00:41:21,000 --> 00:41:24,000
 You have a signal, you time something, you delay, you time something, you delay.

622
00:41:24,000 --> 00:41:29,000
 This is actually a convolution sum description indicated for Nth order.

623
00:41:29,000 --> 00:41:32,000
 I mean, fourth order in this case, polynomial.

624
00:41:32,000 --> 00:41:33,000
 Right?

625
00:41:33,000 --> 00:41:36,000
 And these will be the form you need to know how to design.

626
00:41:36,000 --> 00:41:41,000
 If I give you a, you know, difference equation or a Z-transform, right, the transfer function,

627
00:41:41,000 --> 00:41:44,000
 how to write the block diagram.

628
00:41:44,000 --> 00:41:51,000
 So last week, if you remember, we say that if I give you a block diagram, you need to be able to write down the difference equation.

629
00:41:51,000 --> 00:41:52,000
 Right?

630
00:41:52,000 --> 00:41:54,000
 Now this time it's the opposite.

631
00:41:54,000 --> 00:41:57,000
 They can give you a difference equation or transfer function.

632
00:41:57,000 --> 00:42:02,000
 They want you to write down at least the direct form of the block diagram.

633
00:42:02,000 --> 00:42:05,000
 This will be the way to do it.

634
00:42:05,000 --> 00:42:08,000
 Okay?

635
00:42:08,000 --> 00:42:09,000
 Does it make sense?

636
00:42:09,000 --> 00:42:11,000
 I mean, this is actually the easiest way to do it.

637
00:42:11,000 --> 00:42:12,000
 Right?

638
00:42:12,000 --> 00:42:13,000
 No manipulation.

639
00:42:13,000 --> 00:42:18,000
 I mean, you have exactly N plus one number of multiplication plus N number of summation.

640
00:42:18,000 --> 00:42:19,000
 Right?

641
00:42:19,000 --> 00:42:20,000
 And you have N number of time delay.

642
00:42:20,000 --> 00:42:21,000
 Right?

643
00:42:21,000 --> 00:42:22,000
 That's how you can design that.

644
00:42:22,000 --> 00:42:27,000
 So, how wide this structure will be depends on the order.

645
00:42:27,000 --> 00:42:28,000
 Right?

646
00:42:28,000 --> 00:42:32,000
 So the number of branches is exactly equal to N plus one number.

647
00:42:32,000 --> 00:42:34,000
 Right?

648
00:42:34,000 --> 00:42:41,000
 Now, if you do this, right, you can analyze the form by just saying, well, if I'm giving this block diagram,

649
00:42:41,000 --> 00:42:45,000
 I can write my YN as the corresponding summation.

650
00:42:45,000 --> 00:42:46,000
 Right?

651
00:42:46,000 --> 00:42:53,000
 And this will be precisely the form of a convolution sum because you are multiplying the signal gradually with time delay

652
00:42:53,000 --> 00:42:55,000
 where is the filter impulse response?

653
00:42:55,000 --> 00:42:56,000
 Right?

654
00:42:56,000 --> 00:43:00,000
 So this is how you can, how you actually interpret the direct form of it.

655
00:43:00,000 --> 00:43:05,000
 And last time we said that actually you can easily do a so-called transpose.

656
00:43:05,000 --> 00:43:11,000
 Oh, no, no, sorry, no, no, no, no, no, not yet, not yet.

657
00:43:11,000 --> 00:43:12,000
 Okay.

658
00:43:12,000 --> 00:43:17,000
 This is actually called, you can easily do a transpose operation to the direct form.

659
00:43:17,000 --> 00:43:21,000
 So, one can easily convert it into the transpose version.

660
00:43:21,000 --> 00:43:22,000
 Right?

661
00:43:22,000 --> 00:43:24,000
 Remember, we just say that you can do the transpose operation.

662
00:43:24,000 --> 00:43:30,000
 And any form of the block diagram, you simply need to flip the directions, right,

663
00:43:30,000 --> 00:43:36,000
 change the, sort of the addition with the splitting point, you can have another equivalent form.

664
00:43:36,000 --> 00:43:37,000
 Right?

665
00:43:37,000 --> 00:43:38,000
 So this is how you can do it.

666
00:43:38,000 --> 00:43:49,000
 But, and if you do so, both the direct form and the transpose, the transpose version are guaranteed to be canonical with respect to the delays.

667
00:43:49,000 --> 00:43:52,000
 Remember, we say that we want the repetition to be compact.

668
00:43:52,000 --> 00:43:53,000
 Right?

669
00:43:53,000 --> 00:43:57,000
 So there's a rule to check whether the block diagram is actually canonical.

670
00:43:57,000 --> 00:43:58,000
 Right?

671
00:43:58,000 --> 00:44:01,000
 If you do direct form, it's going to be always canonical.

672
00:44:01,000 --> 00:44:04,000
 All right?

673
00:44:04,000 --> 00:44:05,000
 Okay.

674
00:44:05,000 --> 00:44:08,000
 So, so this is actually where we started with.

675
00:44:08,000 --> 00:44:09,000
 Right?

676
00:44:09,000 --> 00:44:13,000
 And, but this is not the only way you can design the block diagram.

677
00:44:13,000 --> 00:44:16,000
 So, just not what we're talking about is the general form.

678
00:44:16,000 --> 00:44:17,000
 Right?

679
00:44:17,000 --> 00:44:22,000
 If you have any polynomial, you can always derive the direct form in that sense.

680
00:44:22,000 --> 00:44:27,000
 Now, normally for a higher order FIR, let's consider FIR which is very high order.

681
00:44:27,000 --> 00:44:32,000
 In other words, you are going to end up with a super long structure.

682
00:44:32,000 --> 00:44:38,000
 Remember, the width of this structure is actually proportional or exactly equal to M plus 1.

683
00:44:38,000 --> 00:44:39,000
 Right?

684
00:44:39,000 --> 00:44:42,000
 In other words, if A increases, your structure will be very long.

685
00:44:42,000 --> 00:44:43,000
 Right?

686
00:44:43,000 --> 00:44:45,000
 Which is not always good for design.

687
00:44:45,000 --> 00:44:51,000
 So, to handle the higher order FIR design, one can actually choose not by simply doing a

688
00:44:51,000 --> 00:44:52,000
 direct form.

689
00:44:52,000 --> 00:44:59,000
 You can actually do something called Cascade, Cascade inversion from the directed form.

690
00:44:59,000 --> 00:45:06,000
 So, the way to do that is by writing this polynomial not by simply just, just N's order kind of

691
00:45:06,000 --> 00:45:07,000
 expression.

692
00:45:07,000 --> 00:45:13,000
 You can try to decompose it into a product of multiple low order polynomial.

693
00:45:13,000 --> 00:45:14,000
 Right?

694
00:45:14,000 --> 00:45:18,000
 So, just now, what we wrote is a summation of the N's order polynomial.

695
00:45:18,000 --> 00:45:26,000
 But if the A is too large, you probably want to factorize it and write it as a product of,

696
00:45:26,000 --> 00:45:29,000
 let's say, 2nd order polynomial.

697
00:45:29,000 --> 00:45:30,000
 Right?

698
00:45:30,000 --> 00:45:34,000
 And by doing so, every term here becomes lower order.

699
00:45:34,000 --> 00:45:35,000
 Right?

700
00:45:35,000 --> 00:45:41,000
 So, in this case, when you realize it, you don't have to realize that always into a direct form.

701
00:45:41,000 --> 00:45:42,000
 Right?

702
00:45:42,000 --> 00:45:45,000
 In other words, making them as a linear kind of form.

703
00:45:45,000 --> 00:45:51,000
 But you can decompose that into multistages, Cascading one by one.

704
00:45:51,000 --> 00:45:52,000
 Right?

705
00:45:52,000 --> 00:45:54,000
 And how to determine every stage?

706
00:45:54,000 --> 00:45:59,000
 Well, every stage will be determined by this, you know, one factor of the polynomial.

707
00:45:59,000 --> 00:46:00,000
 Right?

708
00:46:00,000 --> 00:46:05,000
 So, for example, if I, if I have k equal to 3, I will have three stages.

709
00:46:05,000 --> 00:46:06,000
 Right?

710
00:46:06,000 --> 00:46:12,000
 Every stage, you will have this omega, sorry, beta 1, beta 2, correspondingly as the multiplier

711
00:46:12,000 --> 00:46:13,000
 factor.

712
00:46:13,000 --> 00:46:14,000
 Right?

713
00:46:14,000 --> 00:46:17,000
 And the delay will always be 2 in this case.

714
00:46:17,000 --> 00:46:22,000
 So, it gives you some idea to avoid a super long design, especially when the order is

715
00:46:22,000 --> 00:46:23,000
 very, is very big.

716
00:46:23,000 --> 00:46:24,000
 Right?

717
00:46:24,000 --> 00:46:32,000
 But of course, if you can guarantee that this factorization is true, is correct, the form

718
00:46:32,000 --> 00:46:33,000
 will also be equivalent.

719
00:46:33,000 --> 00:46:34,000
 Right?

720
00:46:34,000 --> 00:46:39,000
 Because you're Anna Boyce's equivalent expression, so the corresponding design will also be equivalent.

721
00:46:39,000 --> 00:46:46,000
 And the coefficients, you know, of the function, if you look at every stage, right, they also

722
00:46:46,000 --> 00:46:49,000
 follow a similar way as the direct form.

723
00:46:49,000 --> 00:46:54,000
 But the order is actually upper bounded by the choice you have for every term.

724
00:46:54,000 --> 00:46:55,000
 Okay?

725
00:46:55,000 --> 00:47:00,000
 So, it's just one way to simplify a higher order FIR.

726
00:47:00,000 --> 00:47:03,000
 All right.

727
00:47:03,000 --> 00:47:05,000
 Make sense?

728
00:47:05,000 --> 00:47:06,000
 Okay?

729
00:47:06,000 --> 00:47:12,000
 But if you want to do it, you have to find a way to decompose your original polynomial.

730
00:47:12,000 --> 00:47:14,000
 But not every polynomial can be decomposed, right?

731
00:47:14,000 --> 00:47:19,000
 But if you find a way to decompose it into multiple factors, then you can come up with

732
00:47:19,000 --> 00:47:23,000
 the corresponding, so-called cascaded version of the block diagram.

733
00:47:23,000 --> 00:47:24,000
 Right?

734
00:47:24,000 --> 00:47:33,000
 So, you know, you need to see first how mathematically this term is related to this term.

735
00:47:33,000 --> 00:47:34,000
 Right?

736
00:47:34,000 --> 00:47:39,000
 So, mathematically, what you do from direct form to the cascaded form is by factorization.

737
00:47:39,000 --> 00:47:40,000
 Right?

738
00:47:40,000 --> 00:47:47,000
 Then, blockwise, you are reducing the width from m plus 1 into multiple stages.

739
00:47:47,000 --> 00:47:50,000
 Then every stage becomes a very small one.

740
00:47:50,000 --> 00:47:51,000
 Right?

741
00:47:51,000 --> 00:47:53,000
 But you have to have multiple stages.

742
00:47:53,000 --> 00:47:54,000
 Okay?

743
00:47:54,000 --> 00:47:55,000
 All right?

744
00:47:55,000 --> 00:48:01,000
 But, you know, by doing so, you probably don't even save any amount of multipliers because

745
00:48:01,000 --> 00:48:04,000
 you still have to do, you know, actually six.

746
00:48:04,000 --> 00:48:05,000
 Right?

747
00:48:05,000 --> 00:48:08,500
 So, the amount of multiplications and additions are the same.

748
00:48:08,500 --> 00:48:14,000
 It's just like you want to avoid a super long design in the implementation stage.

749
00:48:14,000 --> 00:48:15,000
 Right?

750
00:48:15,000 --> 00:48:16,000
 Okay.

751
00:48:16,000 --> 00:48:21,000
 So, this is basically what we end up last week because last week we only covered, like,

752
00:48:21,000 --> 00:48:23,000
 give a block diagram.

753
00:48:23,000 --> 00:48:24,000
 Right?

754
00:48:24,000 --> 00:48:25,500
 How can we derive the mathematic form?

755
00:48:25,500 --> 00:48:27,000
 But now we're doing the opposite way.

756
00:48:27,000 --> 00:48:32,500
 So, we're going to give you a polynomial representation of the difference equation or transfer function.

757
00:48:32,500 --> 00:48:34,500
 How can you design the corresponding block diagram?

758
00:48:34,500 --> 00:48:35,500
 So, the other way.

759
00:48:35,500 --> 00:48:37,000
 So, now you should know both ways.

760
00:48:37,000 --> 00:48:38,000
 Right?

761
00:48:38,000 --> 00:48:42,100
 How to give you a block diagram, write the expression, or give you an expression, write the block

762
00:48:42,100 --> 00:48:43,100
 diagram.

763
00:48:43,100 --> 00:48:47,200
 But, we haven't said anything about the actual transfer function.

764
00:48:47,200 --> 00:48:48,200
 Right?

765
00:48:48,200 --> 00:48:51,500
 So, what are the so-called desired property of the transfer function?

766
00:48:51,500 --> 00:48:54,500
 So, all of these transfer functions we're talking about are in general form.

767
00:48:54,500 --> 00:48:55,500
 Right?

768
00:48:55,500 --> 00:48:57,500
 So, we just write the general form of the polynomial.

769
00:48:57,500 --> 00:49:02,500
 We didn't say what are the polynomial that could potentially be implemented and something

770
00:49:02,500 --> 00:49:03,500
 we like.

771
00:49:03,500 --> 00:49:04,500
 Right?

772
00:49:04,500 --> 00:49:10,300
 So, after that we want to look at one of the pretty much all very desired property for

773
00:49:10,300 --> 00:49:13,200
 the FIR, which is the linear phase.

774
00:49:13,200 --> 00:49:15,500
 I think I briefly mentioned this last week.

775
00:49:15,500 --> 00:49:16,500
 Right?

776
00:49:16,500 --> 00:49:20,500
 So, we say that, well, if you have an ideal low pass filter, right, you won't really implement

777
00:49:20,500 --> 00:49:21,500
 it.

778
00:49:21,500 --> 00:49:24,000
 You have to do some kind of time delay to make it a causal, remember?

779
00:49:24,000 --> 00:49:28,000
 And we say, if you make it a causal, you have this kind of time delay, you're going to

780
00:49:28,000 --> 00:49:29,000
 introduce phase.

781
00:49:29,000 --> 00:49:30,000
 Right?

782
00:49:30,000 --> 00:49:32,500
 So, if you have to have phase, you better make the phase linear.

783
00:49:32,500 --> 00:49:38,300
 So, that's why, if you are talking about the real lasting filter, you won't have the

784
00:49:38,300 --> 00:49:39,500
 ideal low pass filter like that.

785
00:49:39,500 --> 00:49:41,000
 So, you always have phase.

786
00:49:41,000 --> 00:49:46,400
 We cannot make the phase zero, but the second best thing we want is we want to make the

787
00:49:46,400 --> 00:49:49,000
 phase to be linear to the frequency.

788
00:49:49,000 --> 00:49:50,000
 Okay?

789
00:49:50,000 --> 00:49:54,300
 So, we can tell you why this is something people always like.

790
00:49:54,300 --> 00:49:55,300
 That's the first one.

791
00:49:55,300 --> 00:49:58,000
 So, the first one is you understand why the linear phase is desired.

792
00:49:58,000 --> 00:50:01,200
 Or in other words, if you don't have linear phase, what could be wrong?

793
00:50:01,200 --> 00:50:02,200
 Okay?

794
00:50:02,200 --> 00:50:03,200
 That's the first thing I want you to know.

795
00:50:03,200 --> 00:50:06,800
 The second thing is how to make the filter linear phase.

796
00:50:06,800 --> 00:50:07,800
 Okay?

797
00:50:07,800 --> 00:50:12,000
 What are the things you have to constrain such that the filter will be linear phase?

798
00:50:12,000 --> 00:50:16,000
 So, these are the two things very important, right, for the folding part.

799
00:50:16,000 --> 00:50:19,000
 So, first, let's talk about motivation.

800
00:50:19,000 --> 00:50:20,000
 Right?

801
00:50:20,000 --> 00:50:25,000
 We say that, you know, FIFotor can be used to design digital filter.

802
00:50:25,000 --> 00:50:28,000
 But for many cases, you have to make some compromise, right?

803
00:50:28,000 --> 00:50:31,000
 Talking about the causality, talking about the finite length.

804
00:50:31,000 --> 00:50:36,200
 So, you won't really have zero phase, but the second ideal thing you want to have is

805
00:50:36,200 --> 00:50:37,200
 the linear phase response.

806
00:50:37,200 --> 00:50:40,400
 So, why linear phase is always needed?

807
00:50:40,400 --> 00:50:43,480
 Let's just use this example to showcase, right?

808
00:50:43,480 --> 00:50:46,000
 What could be wrong if you don't have linear phase?

809
00:50:46,000 --> 00:50:48,440
 So, this function is also pretty simple.

810
00:50:48,440 --> 00:50:53,720
 You can, as you can tell here, it's just two different kind of single solids, right,

811
00:50:53,720 --> 00:50:54,720
 summed together.

812
00:50:54,720 --> 00:50:59,440
 But the two single solids will have different frequency, right, different kind of, like,

813
00:50:59,440 --> 00:51:00,440
 omega, right?

814
00:51:00,440 --> 00:51:02,320
 This is actually pi over 7.

815
00:51:02,320 --> 00:51:03,840
 This is 2 pi over 5.

816
00:51:03,840 --> 00:51:08,320
 So, if I consider this as my input signal, okay?

817
00:51:08,320 --> 00:51:11,320
 I want you to pass that into a filter.

818
00:51:11,320 --> 00:51:14,480
 Now, this filter, let's make it general, right?

819
00:51:14,480 --> 00:51:19,000
 This filter, let's say, the filter itself doesn't have any magnitude amplification,

820
00:51:19,000 --> 00:51:21,640
 but the phase term depends, right?

821
00:51:21,640 --> 00:51:25,040
 I write this phase term in general as the phi omega, okay?

822
00:51:25,040 --> 00:51:27,560
 The phi omega is a general form for the phase, right?

823
00:51:27,560 --> 00:51:33,000
 It can be linear, it can be anything, but just write it as a phi omega in general.

824
00:51:33,000 --> 00:51:37,560
 Now I want you to pass my signal into this filter.

825
00:51:37,560 --> 00:51:39,560
 What will be the output?

826
00:51:39,560 --> 00:51:40,560
 Okay?

827
00:51:40,560 --> 00:51:44,799
 We say that, you know, you have an input, you have a signal, you have a filter.

828
00:51:44,799 --> 00:51:50,840
 To get the output, you can either do convolution in the time domain, or you can do multiplication

829
00:51:50,840 --> 00:51:52,640
 in the frequency domain, right?

830
00:51:52,640 --> 00:51:54,680
 Two ways to do it.

831
00:51:54,680 --> 00:51:58,279
 Because this guy is actually a very special function, right?

832
00:51:58,279 --> 00:51:59,279
 Synosoys.

833
00:51:59,279 --> 00:52:03,160
 We say that, we have just two spikes in the frequency domain.

834
00:52:03,160 --> 00:52:09,320
 So computing the response in the frequency domain will be very easy, because it's zero

835
00:52:09,400 --> 00:52:13,400
 elsewhere, only impulse function at the corresponding frequency.

836
00:52:13,400 --> 00:52:20,720
 So you will only have some response at the frequency of pi over seven and two pi over

837
00:52:20,720 --> 00:52:21,720
 five, right?

838
00:52:21,720 --> 00:52:23,360
 Only these two places.

839
00:52:23,360 --> 00:52:32,440
 So correspondingly, you can look at the response at these two frequency, but given that, your

840
00:52:32,440 --> 00:52:35,120
 filter is actually in the form of d omega.

841
00:52:35,120 --> 00:52:40,680
 At that frequency, you will have certain amplification and phase change, right?

842
00:52:40,680 --> 00:52:44,400
 The only thing you are going to do is the phase change and also the amplification.

843
00:52:44,400 --> 00:52:48,279
 Oh, sorry, time delay, sorry, time delay at the magnitude, right?

844
00:52:48,279 --> 00:52:51,200
 And we say that, well, let's just make the magnitude to be one, right?

845
00:52:51,200 --> 00:52:52,920
 No amplification.

846
00:52:52,920 --> 00:52:57,240
 So basically, you won't really change the amplitude.

847
00:52:57,240 --> 00:52:59,040
 Amplitude will also be one.

848
00:52:59,040 --> 00:53:02,680
 The only thing we introduce is the delay here, right?

849
00:53:02,680 --> 00:53:03,680
 Time delay here.

850
00:53:03,680 --> 00:53:09,799
 The delay will be correspondingly the phi omega applied at omega equal to the corresponding

851
00:53:09,799 --> 00:53:11,120
 frequency, right?

852
00:53:11,120 --> 00:53:16,919
 So here will be phi at the omega equal to pi over seven.

853
00:53:16,919 --> 00:53:20,480
 Here's the phi at the omega equal to two pi over five, all right?

854
00:53:20,480 --> 00:53:26,480
 So this will be the general form for a filter that without any amplification, right?

855
00:53:26,480 --> 00:53:29,720
 In other words, the unit amplitude response.

856
00:53:29,720 --> 00:53:30,720
 All right?

857
00:53:30,720 --> 00:53:32,799
 But we haven't said anything about the phi, right?

858
00:53:32,800 --> 00:53:35,360
 The phi here can be anything, okay?

859
00:53:35,360 --> 00:53:37,520
 Now we consider two scenarios.

860
00:53:37,520 --> 00:53:43,400
 The first scenario is that this phi is actually minus three omega square.

861
00:53:43,400 --> 00:53:46,760
 Okay, what does this mean?

862
00:53:46,760 --> 00:53:48,640
 This is not a linear function, right?

863
00:53:48,640 --> 00:53:49,640
 So what is a linear function?

864
00:53:49,640 --> 00:53:53,040
 A linear function cannot have a second order term.

865
00:53:53,040 --> 00:53:55,320
 It can be a first order term, right?

866
00:53:55,320 --> 00:53:59,880
 So if you have a second order term, you violate the linear phase assumption.

867
00:53:59,880 --> 00:54:05,040
 So the first way to design the phase response is a nonlinear way.

868
00:54:05,040 --> 00:54:06,040
 Agree?

869
00:54:06,040 --> 00:54:08,240
 I mean, second order is not linear, right?

870
00:54:08,240 --> 00:54:10,320
 This is a very mathematical question.

871
00:54:10,320 --> 00:54:13,720
 You can go for third order, fourth order, but none of that will be linear, right?

872
00:54:13,720 --> 00:54:20,080
 We can also design a linear phase scenario which is equal to, let's say, minus three

873
00:54:20,080 --> 00:54:21,080
 omega.

874
00:54:21,080 --> 00:54:24,040
 So this is actually a linear function, all right?

875
00:54:24,040 --> 00:54:25,600
 So let's consider two, right?

876
00:54:25,600 --> 00:54:28,720
 Either way, how will be the output look like?

877
00:54:28,720 --> 00:54:29,720
 Okay?

878
00:54:29,720 --> 00:54:34,040
 So I just plot, let's say, the first row to be the input signal, right?

879
00:54:34,040 --> 00:54:38,120
 So this is just some arbitrary input signal, sorry, not arbitrary, cosine, right?

880
00:54:38,120 --> 00:54:42,399
 So cosine sum together, this is actually the input signal, all right?

881
00:54:42,399 --> 00:54:48,279
 So this is the signal corresponding to the nonlinear phase case, all right?

882
00:54:48,279 --> 00:54:52,720
 And the last row will be the output corresponding to the linear phase case.

883
00:54:52,720 --> 00:54:58,200
 Okay, so one thing we can tell is that, let's say, first, let's compare the first row with

884
00:54:58,200 --> 00:55:00,439
 the last row, okay?

885
00:55:00,439 --> 00:55:02,520
 Compare these two waveforms.

886
00:55:02,520 --> 00:55:04,319
 So first of all, they are not the same, right?

887
00:55:04,319 --> 00:55:06,720
 Apparently they are not the same wave, okay?

888
00:55:06,720 --> 00:55:08,720
 You don't really find a match.

889
00:55:08,720 --> 00:55:13,240
 But the good thing is that you realize the only difference between the two, right?

890
00:55:13,240 --> 00:55:17,120
 The first row and the last row is the time delay, right?

891
00:55:17,120 --> 00:55:21,919
 For example, you can see here the minimum goes here, right?

892
00:55:21,919 --> 00:55:23,680
 This minimum goes here.

893
00:55:23,680 --> 00:55:24,799
 Here the minimum goes here.

894
00:55:24,920 --> 00:55:29,520
 So basically you will have a fixed amount of time delay in the last row.

895
00:55:30,760 --> 00:55:33,960
 But you, except for that, the waveform is not distorted.

896
00:55:35,400 --> 00:55:38,040
 In other words, even though I have a different kind of output,

897
00:55:38,040 --> 00:55:41,840
 I can simply do a reverse time shift to get back to my original input.

898
00:55:43,480 --> 00:55:48,320
 All right, so this is something easy to restore or easy to represent, right?

899
00:55:48,320 --> 00:55:53,640
 But if you are going to have a nonlinear phase kind of system, you will have distortion.

900
00:55:53,640 --> 00:55:56,000
 So this is actually the corresponding to a scenario

901
00:55:56,000 --> 00:55:58,839
 in which you have nonlinear phase response, right?

902
00:55:58,839 --> 00:56:02,480
 In this case, you won't have the exact match.

903
00:56:02,480 --> 00:56:07,359
 You won't get some distortion because this is not more than just time delay, right?

904
00:56:07,359 --> 00:56:12,720
 And in this case, you may not even have a chance to revert back to the original signal.

905
00:56:12,720 --> 00:56:16,879
 In other words, you have distortion, okay?

906
00:56:16,879 --> 00:56:21,279
 So this is actually one example to show that linear phase,

907
00:56:21,280 --> 00:56:25,600
 if you cannot get zero phase, linear phase is the second best thing you want

908
00:56:25,600 --> 00:56:28,280
 in designing the filter, right?

909
00:56:28,280 --> 00:56:32,120
 And just now, last time we already explained that if you want to stick to zero phase,

910
00:56:32,120 --> 00:56:34,880
 you normally are going to end up with the non-causality,

911
00:56:34,880 --> 00:56:37,120
 which is impossible in practice, right?

912
00:56:37,120 --> 00:56:41,760
 So that's the reason in practice, linear phase is always what we want

913
00:56:41,760 --> 00:56:44,880
 because you cannot get zero phase, so you do linear phase, right?

914
00:56:46,280 --> 00:56:48,560
 Well, pretty simple, if you don't have a linear phase,

915
00:56:48,560 --> 00:56:50,920
 the output could have distortion.

916
00:56:50,920 --> 00:56:55,640
 Compared to input, all right?

917
00:56:55,640 --> 00:57:00,440
 So this is the reason, I mean, the reason why we care about the linear phase, okay?

918
00:57:00,440 --> 00:57:01,880
 I'm not going to prove it.

919
00:57:01,880 --> 00:57:03,080
 I mean, you can try to prove it.

920
00:57:03,080 --> 00:57:05,960
 It's not so hard, but at least I want to have some feeling, right?

921
00:57:05,960 --> 00:57:12,960
 Why linear phase is important to avoid apparent distortion except for time delay, okay?

922
00:57:12,960 --> 00:57:14,440
 That's the first thing, why?

923
00:57:14,440 --> 00:57:17,160
 You know, motivation to do it, okay?

924
00:57:17,160 --> 00:57:21,359
 So now, the second question is always ask how to do it, right?

925
00:57:21,359 --> 00:57:24,720
 How to get this property of linear phase.

926
00:57:24,720 --> 00:57:28,000
 In fact, if we're only talking about FIR, right?

927
00:57:28,000 --> 00:57:30,080
 So far, we only talk about FIR.

928
00:57:30,080 --> 00:57:33,040
 I believe Prof. Lin is going to talk about IR in the second part,

929
00:57:33,040 --> 00:57:35,520
 but my part, FIR, just FIR, right?

930
00:57:35,520 --> 00:57:39,000
 For FIR, linear phase is actually very simple, okay?

931
00:57:39,000 --> 00:57:44,839
 Only two conditions, and all of the two are related to symmetry property, okay?

932
00:57:44,839 --> 00:57:46,759
 Make it very easy to remember.

933
00:57:46,840 --> 00:57:48,800
 Okay, let's look at the first condition, right?

934
00:57:48,800 --> 00:57:53,440
 The first condition will be exactly symmetric, okay?

935
00:57:53,440 --> 00:58:00,320
 So the theory says if I'm going to analyze this FIR, apparently this is the transfer function, right?

936
00:58:00,320 --> 00:58:07,360
 So I'm going to say if this FIR is going to satisfy the following symmetric condition.

937
00:58:07,360 --> 00:58:10,200
 In other words, they look at the BMs.

938
00:58:10,200 --> 00:58:11,360
 Okay, what are the BMs?

939
00:58:11,360 --> 00:58:13,640
 BM are the coefficients, right?

940
00:58:13,640 --> 00:58:16,920
 Of the input signals, right?

941
00:58:16,920 --> 00:58:22,840
 So I'm looking at all of these BM if I observe a symmetric condition of the BM.

942
00:58:22,840 --> 00:58:28,640
 In other words, for any M ranging from 0 all the way to M minus 1,

943
00:58:28,640 --> 00:58:31,960
 okay, M minus 1 is equal to N, right, in this case.

944
00:58:31,960 --> 00:58:38,000
 So if I have all the BM equal to BM minus 1 minus M,

945
00:58:38,000 --> 00:58:42,120
 in other words, the corresponding the symmetric part, right?

946
00:58:42,120 --> 00:58:47,560
 Like 0 versus M minus 1, sorry, 0 versus M minus 1, 1 versus M minus 2,

947
00:58:47,560 --> 00:58:51,640
 sorry, 2 versus M minus 3, right?

948
00:58:51,640 --> 00:58:53,200
 So you have this kind of symmetry.

949
00:58:53,200 --> 00:59:03,600
 If they are pairwise equal, I can see that this future will be linear phase, okay?

950
00:59:03,600 --> 00:59:04,320
 But pay attention.

951
00:59:05,320 --> 00:59:09,080
 It's like, okay, so it's not a sufficient necessary condition.

952
00:59:09,080 --> 00:59:10,440
 It's actually a sufficient condition.

953
00:59:10,440 --> 00:59:18,040
 In other words, if the symmetric is true, it's going to be a linear phase, okay?

954
00:59:18,040 --> 00:59:20,040
 But the opposite is not right, all right?

955
00:59:20,040 --> 00:59:21,520
 So I'm not saying the equivalent.

956
00:59:21,520 --> 00:59:26,440
 I'm saying if I have this symmetric property, I'm going to have a linear phase.

957
00:59:26,440 --> 00:59:31,560
 Okay, the reason I'm saying that is because there's another condition also give you the linear phase.

958
00:59:31,560 --> 00:59:33,120
 So it's either one, all right?

959
00:59:33,120 --> 00:59:35,240
 This is only one of them, okay?

960
00:59:35,240 --> 00:59:40,520
 So but this one is actually saying that pairwise, for example, B0 and B4,

961
00:59:40,520 --> 00:59:45,240
 B1 and B3, B2 and B2, they must be equal, okay?

962
00:59:45,240 --> 00:59:50,120
 The value doesn't matter, but they have the pairwise equal along the center point.

963
00:59:52,240 --> 00:59:53,240
 Okay, makes sense?

964
00:59:55,440 --> 00:59:59,160
 Okay, so let's look at some example, right?

965
00:59:59,160 --> 01:00:02,440
 So let's say this one, right?

966
01:00:02,440 --> 01:00:04,120
 This is actually a transfer function.

967
01:00:04,120 --> 01:00:08,279
 So if I give you this transfer function, tell me what's the order of this transfer function?

968
01:00:11,160 --> 01:00:11,680
 Three, right?

969
01:00:11,680 --> 01:00:13,680
 Because the highest z-order is three, right?

970
01:00:13,680 --> 01:00:17,319
 So this is a order of three transfer function.

971
01:00:17,319 --> 01:00:21,399
 So you're going to have four terms, all right?

972
01:00:21,399 --> 01:00:23,319
 So based on the definition, right?

973
01:00:23,319 --> 01:00:24,279
 Let's go back to the definition.

974
01:00:24,280 --> 01:00:29,640
 The definition says you need to make sure if you want to conclude that this guy is a linear phase,

975
01:00:29,640 --> 01:00:33,760
 you have to make sure B0 equals to the last term, right?

976
01:00:33,760 --> 01:00:38,280
 So here, sorry, the last term is actually B3, right?

977
01:00:38,280 --> 01:00:42,760
 So you must make sure B0, the first term, equal to the last term.

978
01:00:44,600 --> 01:00:49,200
 The second term equal to the second last term, okay?

979
01:00:49,200 --> 01:00:51,720
 That's how you can pose the pairs, all right?

980
01:00:51,720 --> 01:00:55,560
 So if all of them are pairwise equal, you can make the conclusion,

981
01:00:55,560 --> 01:00:58,160
 say, hey, this is a linear phase, all right?

982
01:00:58,160 --> 01:01:03,560
 So for this example, you need to make sure B0 equal to B3, apparently they are equal, right?

983
01:01:03,560 --> 01:01:05,319
 And B1 equal to B2, right?

984
01:01:05,319 --> 01:01:06,240
 Apparently they are equal.

985
01:01:06,240 --> 01:01:10,399
 So if all of them are equal, you can conclude this guy is a linear phase.

986
01:01:13,359 --> 01:01:14,080
 Simple, right?

987
01:01:14,080 --> 01:01:18,600
 You just need to pair them up, first term, last term, second term, second last term.

988
01:01:18,600 --> 01:01:20,720
 Everything is equal, then it's a linear phase, right?

989
01:01:22,359 --> 01:01:24,120
 Very simple, right?

990
01:01:24,120 --> 01:01:26,759
 But you also have to be careful, right?

991
01:01:26,759 --> 01:01:30,319
 Especially, let's look at this example, okay?

992
01:01:30,319 --> 01:01:34,439
 Hz equal to this guy, all right?

993
01:01:34,439 --> 01:01:35,359
 Tell me what's the order?

994
01:01:37,680 --> 01:01:39,120
 What's the order of this transfer function?

995
01:01:42,640 --> 01:01:43,319
 Ha, seven?

996
01:01:46,399 --> 01:01:48,759
 Okay, how to tell, okay, we just talked about this, right?

997
01:01:48,759 --> 01:01:50,799
 How to tell the order of a transfer function?

998
01:01:52,600 --> 01:01:57,759
 We just talked about this one hour ago, right?

999
01:01:59,759 --> 01:02:03,160
 What, okay, my question is what's the order of the transfer function?

1000
01:02:03,160 --> 01:02:05,439
 Here, this is the transfer function, right?

1001
01:02:05,439 --> 01:02:06,359
 What's the order of it?

1002
01:02:08,200 --> 01:02:08,879
 Five, right?

1003
01:02:08,879 --> 01:02:10,160
 Just look at the highest order.

1004
01:02:10,160 --> 01:02:13,480
 Just now this is three, now this is five, right?

1005
01:02:13,480 --> 01:02:20,759
 Okay, so now my question is, out of so many terms, right?

1006
01:02:20,760 --> 01:02:22,800
 What should be the first term here?

1007
01:02:23,840 --> 01:02:26,560
 First term referred to the B0, right?

1008
01:02:26,560 --> 01:02:27,800
 What is the first term here?

1009
01:02:29,920 --> 01:02:30,420
 Sorry?

1010
01:02:31,800 --> 01:02:34,760
 Zero, okay, anyone else, any other suggestions?

1011
01:02:34,760 --> 01:02:36,200
 What's the first term we're talking about here?

1012
01:02:42,320 --> 01:02:44,000
 Okay, it should be zero, right?

1013
01:02:44,000 --> 01:02:49,240
 The reason is every time you count, when you write the polynomial, right?

1014
01:02:49,240 --> 01:02:52,200
 If it's a fifth-order polynomial, how many terms should I have?

1015
01:02:54,080 --> 01:02:54,959
 Sixth term, right?

1016
01:02:54,959 --> 01:02:57,040
 Remember, don't forget the zero-order term.

1017
01:02:57,040 --> 01:03:02,720
 So if it's nth-order polynomial, you will have in general form n plus one number of

1018
01:03:02,720 --> 01:03:06,000
 terms because the zero-order also counts, right?

1019
01:03:06,000 --> 01:03:11,520
 Apparently, these expression only have one, two, three, four, five, five terms.

1020
01:03:12,680 --> 01:03:18,600
 It means the B0 is actually zero and that's why it didn't write it down, okay?

1021
01:03:18,600 --> 01:03:22,759
 But that doesn't mean that you only have five terms, you have six terms.

1022
01:03:22,759 --> 01:03:24,400
 So don't forget the B0.

1023
01:03:24,400 --> 01:03:27,319
 Here, the B0 equal to zero, all right?

1024
01:03:27,319 --> 01:03:29,400
 So when you want to create these pairs,

1025
01:03:31,680 --> 01:03:37,600
 the term to pair up with the number five is actually B0, right?

1026
01:03:37,600 --> 01:03:40,839
 Not one, okay, not this term, but B0.

1027
01:03:40,839 --> 01:03:44,640
 The first term must be starting from B0, all right?

1028
01:03:44,640 --> 01:03:47,160
 Okay, now if I look at simply this guy, right?

1029
01:03:47,160 --> 01:03:52,839
 I find that, well, B0 equal to zero, my B5 equal to one, so they're not equal, right?

1030
01:03:52,839 --> 01:03:56,279
 So can I direct conclude that this is not a linear phase?

1031
01:04:00,640 --> 01:04:03,799
 Remember, it's not necessary and sufficient, right?

1032
01:04:03,799 --> 01:04:05,560
 It's actually only sufficient condition.

1033
01:04:05,560 --> 01:04:10,879
 Means if you can find all the way to form the symmetric,

1034
01:04:10,879 --> 01:04:13,440
 you can conclude it's a linear phase, right?

1035
01:04:13,440 --> 01:04:14,480
 But not the other way around.

1036
01:04:14,480 --> 01:04:21,360
 So if I form this as the fifth order polynomial, I cannot find the pairs, right?

1037
01:04:21,360 --> 01:04:25,840
 It doesn't mean it's not a linear because it could be other condition, okay?

1038
01:04:25,840 --> 01:04:31,160
 So here, the solution to that or the other way to look at it is to pose the whole

1039
01:04:31,160 --> 01:04:33,240
 polynomial as the sixth order polynomial.

1040
01:04:34,680 --> 01:04:38,120
 Okay, because you can actually have a sixth order polynomial, but

1041
01:04:38,120 --> 01:04:41,720
 treating the BZ6 to be zero, right?

1042
01:04:41,720 --> 01:04:45,399
 It's actually a sixth order polynomial, but the B6 equal to zero.

1043
01:04:46,680 --> 01:04:51,359
 Why I wanna do this is because now I have a zero to match with my B0.

1044
01:04:53,040 --> 01:04:57,000
 All right, just now we see that B0 is zero, that's why it didn't show up.

1045
01:04:57,000 --> 01:04:58,560
 Now I want to pair up this zero.

1046
01:04:58,560 --> 01:05:02,279
 I can add another term, even higher order, right?

1047
01:05:02,279 --> 01:05:04,879
 That gives me another zero to pair them up.

1048
01:05:04,879 --> 01:05:07,240
 So this is how you can view the polynomial, right?

1049
01:05:07,240 --> 01:05:09,359
 We use the A equal to six case.

1050
01:05:09,360 --> 01:05:12,360
 Makes sense?

1051
01:05:12,360 --> 01:05:17,360
 So that's why you can see that, well, my B0 is equal to B6, right?

1052
01:05:17,360 --> 01:05:19,440
 So this is a valid pair.

1053
01:05:19,440 --> 01:05:22,960
 Now I look at the second term, which is the B1, and the second last term,

1054
01:05:22,960 --> 01:05:25,320
 which is B5, they are also equal, right?

1055
01:05:25,320 --> 01:05:28,080
 One versus one, okay?

1056
01:05:28,080 --> 01:05:32,120
 Now B2 is also equal to B4, right?

1057
01:05:33,240 --> 01:05:35,400
 And then, let me see.

1058
01:05:36,640 --> 01:05:39,000
 One versus that, here, here.

1059
01:05:39,000 --> 01:05:42,040
 Okay, now, the only term here is B3, right?

1060
01:05:42,040 --> 01:05:43,480
 So what is the pair for B3?

1061
01:05:45,640 --> 01:05:46,600
 B3 itself, right?

1062
01:05:46,600 --> 01:05:49,400
 Because by definition, if you look at this definition, right?

1063
01:05:49,400 --> 01:05:52,240
 It says BM equal to BM minus M.

1064
01:05:52,240 --> 01:05:56,880
 So here the N, after increasing order, becomes six, right?

1065
01:05:56,880 --> 01:06:02,240
 So in this case, I have B3 equals to B6 minus three, which is also B3, right?

1066
01:06:02,240 --> 01:06:05,000
 So can I say B3 equal to B3?

1067
01:06:05,000 --> 01:06:06,600
 It's always equal, right?

1068
01:06:06,600 --> 01:06:09,279
 So that pair also is valid.

1069
01:06:09,279 --> 01:06:13,880
 And due to that, I form all the pairs to, I need all of them are equal.

1070
01:06:13,880 --> 01:06:16,759
 So then I'm going to end up with a conclusion saying,

1071
01:06:16,759 --> 01:06:19,640
 this is a linear phase filter, right?

1072
01:06:20,880 --> 01:06:25,040
 So this is one example to tell you that it could be a little bit tricky, right?

1073
01:06:25,040 --> 01:06:28,640
 So don't conclude so quickly, because, I mean, two lessons.

1074
01:06:28,640 --> 01:06:31,400
 First one is, don't forget the B0, all right?

1075
01:06:31,400 --> 01:06:35,000
 So my suggestion is always looking at the order.

1076
01:06:35,000 --> 01:06:38,280
 And you need to write, let's say you have an order of N, right?

1077
01:06:38,280 --> 01:06:41,240
 You always need N plus one term.

1078
01:06:41,240 --> 01:06:46,560
 If you miss any term, it could be B0, or maybe there's any order missing there.

1079
01:06:46,560 --> 01:06:49,840
 So do a careful check if there's any term missing.

1080
01:06:49,840 --> 01:06:51,840
 That's step one, all right?

1081
01:06:51,840 --> 01:06:54,720
 If you're somehow treating this guy as the first term of the day,

1082
01:06:54,720 --> 01:06:55,480
 I cannot help you, right?

1083
01:06:55,480 --> 01:06:57,640
 You'll get the wrong answer, all right?

1084
01:06:57,640 --> 01:06:58,600
 That's the first thing.

1085
01:06:58,600 --> 01:07:02,320
 The second thing is, if you cannot work it out for, let's say,

1086
01:07:02,320 --> 01:07:05,000
 Nth order, try N plus one.

1087
01:07:05,000 --> 01:07:07,400
 Because you can always put in the N plus one,

1088
01:07:07,400 --> 01:07:09,920
 the N plus one order term to be zero, right?

1089
01:07:09,920 --> 01:07:14,200
 That's also a valid expression, all right?

1090
01:07:15,840 --> 01:07:18,040
 So that's actually the lesson, right?

1091
01:07:18,040 --> 01:07:22,080
 But if you get that settled, everything should be quite simple.

1092
01:07:22,080 --> 01:07:24,280
 You just follow the definition here, right?

1093
01:07:24,280 --> 01:07:27,520
 That's how you can conclude, all right?

1094
01:07:27,520 --> 01:07:29,640
 So okay, how many slides I have?

1095
01:07:30,640 --> 01:07:33,040
 Maybe we can take a break right now.

1096
01:07:33,040 --> 01:07:35,839
 So I will take maybe a 10-minute break.

1097
01:07:35,839 --> 01:07:37,279
 Maybe a slide there.

1098
01:07:37,279 --> 01:07:40,640
 Let's come back around 7.45, all right?

1099
01:07:40,640 --> 01:07:43,600
 7.45, then we can start the second half, all right?

1100
01:07:43,600 --> 01:07:44,480
 7.45, all right?

1101
01:07:44,480 --> 01:07:47,960
 So like a 13-minute break, okay?

1102
01:07:47,960 --> 01:07:48,960
 All right, thank you.

1103
01:25:59,640 --> 01:26:24,320
 Sorry, I think I started a bit late.

1104
01:26:24,320 --> 01:26:25,720
 Just not got a lot of questions.

1105
01:26:25,720 --> 01:26:29,480
 All right, so let's resume what we talked about just now.

1106
01:26:30,400 --> 01:26:33,320
 So I think through this example, sorry, actually,

1107
01:26:33,320 --> 01:26:35,959
 yeah, so this example you can tell that

1108
01:26:35,959 --> 01:26:38,879
 if you are given a transfer function, right?

1109
01:26:38,879 --> 01:26:42,759
 Using a theorem one, you can at least say something

1110
01:26:42,759 --> 01:26:44,240
 according to the symmetric property.

1111
01:26:44,240 --> 01:26:46,200
 Even though later we're going to learn another condition,

1112
01:26:46,200 --> 01:26:48,320
 but this is one of the condition, right?

1113
01:26:48,320 --> 01:26:51,679
 And I hope all of you can first identify

1114
01:26:51,679 --> 01:26:54,839
 whether or not the symmetric property is satisfied, right?

1115
01:26:54,839 --> 01:26:56,679
 So there could be some trap, for example, here.

1116
01:26:56,679 --> 01:26:57,519
 This is one example,

1117
01:26:57,520 --> 01:27:00,080
 but you have to clearly form the pairs.

1118
01:27:00,080 --> 01:27:01,840
 If you can form them, you can conclude

1119
01:27:01,840 --> 01:27:04,800
 this is definitely going to be linear phase, right?

1120
01:27:04,800 --> 01:27:06,800
 Okay, but just know what I'm telling you

1121
01:27:06,800 --> 01:27:08,920
 is directly give you the theorem, right?

1122
01:27:08,920 --> 01:27:10,160
 I didn't prove it.

1123
01:27:10,160 --> 01:27:12,840
 I'm just saying that if you have this, right?

1124
01:27:12,840 --> 01:27:14,280
 You will have a linear phase,

1125
01:27:14,280 --> 01:27:17,200
 but I never say anything why, right?

1126
01:27:17,200 --> 01:27:19,640
 In fact, you can try to prove this yourself

1127
01:27:19,640 --> 01:27:21,920
 if you want to do a general form.

1128
01:27:21,920 --> 01:27:24,080
 What I'm going to do is I'm going to prove it

1129
01:27:24,080 --> 01:27:26,400
 for two special forms.

1130
01:27:26,400 --> 01:27:28,879
 In other words, these theories should be true

1131
01:27:28,879 --> 01:27:30,620
 for any order, right?

1132
01:27:30,620 --> 01:27:32,719
 Order one, order two, any n,

1133
01:27:32,719 --> 01:27:35,519
 but I'm going to show you two special case, right?

1134
01:27:35,519 --> 01:27:38,879
 Why having this condition, the theorem one satisfied,

1135
01:27:38,879 --> 01:27:40,040
 you will have a linear phase.

1136
01:27:40,040 --> 01:27:43,879
 Four, m equal to three and m equal to four, okay?

1137
01:27:43,879 --> 01:27:45,080
 m minus one is n.

1138
01:27:45,080 --> 01:27:49,120
 So in other words, I'm proving for n equal to two

1139
01:27:49,120 --> 01:27:51,040
 and n equal to three, all right?

1140
01:27:51,040 --> 01:27:52,400
 So let's look at the first case.

1141
01:27:52,400 --> 01:27:54,160
 Well, m equal to three,

1142
01:27:54,160 --> 01:27:57,960
 you're going to have a second order polynomial, right?

1143
01:27:57,960 --> 01:27:59,480
 Second order polynomial,

1144
01:27:59,480 --> 01:28:02,460
 the standard form should have three terms, okay?

1145
01:28:02,460 --> 01:28:04,040
 So under three terms,

1146
01:28:04,040 --> 01:28:09,040
 the way you can form them is to group the zero order term

1147
01:28:10,639 --> 01:28:12,180
 with the second order term, right?

1148
01:28:12,180 --> 01:28:14,040
 This is actually the pair you have.

1149
01:28:14,040 --> 01:28:16,960
 And then this first order term aside, right?

1150
01:28:16,960 --> 01:28:21,440
 So if let's say I do have the symmetric condition, okay?

1151
01:28:21,440 --> 01:28:23,680
 What I'm proving here is I'm saying

1152
01:28:23,680 --> 01:28:26,640
 if the symmetry property holds,

1153
01:28:26,640 --> 01:28:29,480
 I want to show you that the phase is linear, all right?

1154
01:28:29,480 --> 01:28:33,560
 So I can assume that the B zero equal to B two.

1155
01:28:33,560 --> 01:28:37,080
 I can get rid of B two and just write it as B zero.

1156
01:28:37,080 --> 01:28:40,080
 Okay, that's why I can simplify everything into this form

1157
01:28:40,080 --> 01:28:42,680
 and I can extract the Z minus one out

1158
01:28:42,680 --> 01:28:44,840
 and leaving the other term left, right?

1159
01:28:44,840 --> 01:28:47,040
 So if this is my Z transform,

1160
01:28:47,040 --> 01:28:51,180
 again, I can easily get my frequency response, right?

1161
01:28:51,180 --> 01:28:53,400
 We can just simply swap the Z

1162
01:28:53,400 --> 01:28:55,839
 ways e to the power of j omega, right?

1163
01:28:55,839 --> 01:28:59,160
 So by doing so, I will have my frequency response

1164
01:28:59,160 --> 01:29:01,580
 which equal to this form, all right?

1165
01:29:01,580 --> 01:29:05,679
 So why you can merge these two into a cosine?

1166
01:29:05,679 --> 01:29:07,839
 Actually, this is actually called Euler formula, right?

1167
01:29:07,839 --> 01:29:11,120
 Euler equation where for those of you who know it, right?

1168
01:29:11,120 --> 01:29:12,280
 If you have e to the power of something,

1169
01:29:12,280 --> 01:29:15,360
 you got a real and imaginary, right?

1170
01:29:15,360 --> 01:29:18,400
 The real part is cosine, imaginary part is sine.

1171
01:29:18,400 --> 01:29:20,320
 And if you have the two terms sum up,

1172
01:29:20,320 --> 01:29:22,240
 the imaginary part will be canceled.

1173
01:29:22,240 --> 01:29:24,200
 That's why you have a cosine term

1174
01:29:24,200 --> 01:29:27,599
 doubled by the magnitude, right?

1175
01:29:27,599 --> 01:29:31,719
 Okay, so now if this is my frequency response, right?

1176
01:29:31,719 --> 01:29:34,360
 I want to analyze, if I want to analyze the frequency,

1177
01:29:34,360 --> 01:29:35,679
 sorry, the phase response,

1178
01:29:35,679 --> 01:29:39,719
 I need to separate the magnitude and the phase.

1179
01:29:39,719 --> 01:29:42,440
 In other words, I need to write this term

1180
01:29:42,440 --> 01:29:45,300
 in the polar form, right, in other words.

1181
01:29:45,300 --> 01:29:47,519
 So in the form like this.

1182
01:29:47,519 --> 01:29:49,679
 So you have to rewrite this form

1183
01:29:49,680 --> 01:29:54,560
 into the magnitude times e to the power of J phase, right?

1184
01:29:54,560 --> 01:29:58,660
 And this kind of a theta R becomes our phase term.

1185
01:29:58,660 --> 01:29:59,840
 Okay, so how to do it?

1186
01:29:59,840 --> 01:30:04,840
 Well, so you can tell that HR is actually equal to,

1187
01:30:07,400 --> 01:30:09,800
 okay, now I'm just separating the two terms, right?

1188
01:30:09,800 --> 01:30:13,080
 So these terms have nothing contributing to the magnitude.

1189
01:30:13,080 --> 01:30:14,960
 Only the second term has magnitudes.

1190
01:30:14,960 --> 01:30:18,200
 But this term I know is a real number, right?

1191
01:30:18,200 --> 01:30:21,240
 So I can actually form the polar form,

1192
01:30:21,240 --> 01:30:23,519
 but only for the second form, second term,

1193
01:30:23,519 --> 01:30:24,840
 not the first term.

1194
01:30:24,840 --> 01:30:29,840
 And this term I can tell that my theta R is equal to,

1195
01:30:29,880 --> 01:30:31,599
 because it's a real number, remember?

1196
01:30:31,599 --> 01:30:33,080
 If it is a real number,

1197
01:30:33,080 --> 01:30:36,519
 I will get either zero or pi, right?

1198
01:30:36,519 --> 01:30:38,200
 Because I cannot get other value.

1199
01:30:38,200 --> 01:30:39,040
 If I get other value,

1200
01:30:39,040 --> 01:30:40,840
 I'm going to end up with a complex number, right?

1201
01:30:40,840 --> 01:30:42,440
 Not the real number.

1202
01:30:42,440 --> 01:30:45,160
 So this is actually the phase response

1203
01:30:45,160 --> 01:30:47,840
 for only the second term, all right?

1204
01:30:47,880 --> 01:30:51,240
 So it's going to be, if my real part,

1205
01:30:51,240 --> 01:30:56,240
 sorry, my magnitude goes up, positive, I have no phase, zero.

1206
01:30:56,640 --> 01:30:58,920
 If my magnitude is actually negative,

1207
01:30:58,920 --> 01:31:01,360
 I have to absolve the minus sign, right?

1208
01:31:01,360 --> 01:31:02,520
 So I will have a pi,

1209
01:31:02,520 --> 01:31:05,360
 but either way, they will not have other possible phase

1210
01:31:05,360 --> 01:31:08,520
 because this part is actually real number.

1211
01:31:09,680 --> 01:31:12,400
 Okay, real number means basically zero phase, right?

1212
01:31:12,400 --> 01:31:15,240
 But positive real number means zero phase.

1213
01:31:15,240 --> 01:31:19,120
 Negative number means minus pi phase, or pi phase, right?

1214
01:31:19,120 --> 01:31:22,000
 Okay, so, but this is only the second part.

1215
01:31:22,000 --> 01:31:24,760
 Now I have to consider the first part,

1216
01:31:24,760 --> 01:31:25,960
 which is this guy, right?

1217
01:31:25,960 --> 01:31:29,240
 Sorry, this guy, e to the power of minus j omega.

1218
01:31:29,240 --> 01:31:33,360
 So what I need to do is I have to kind of multiply

1219
01:31:33,360 --> 01:31:36,940
 the minus pi into my phase response.

1220
01:31:36,940 --> 01:31:39,480
 Just now I'm talking about the theta R,

1221
01:31:39,480 --> 01:31:41,800
 which is either zero or pi, right?

1222
01:31:41,800 --> 01:31:44,840
 But now I have to take into account of this minus omega.

1223
01:31:44,840 --> 01:31:49,680
 So my overall phase response will be minus omega

1224
01:31:49,680 --> 01:31:51,980
 plus theta R omega.

1225
01:31:52,920 --> 01:31:55,840
 Okay, so this will become my overall phase response.

1226
01:31:57,340 --> 01:31:59,520
 So can we see something about this function?

1227
01:32:00,760 --> 01:32:03,280
 Right, so this function apparently have two terms.

1228
01:32:03,280 --> 01:32:05,720
 The first term, I think everybody agree,

1229
01:32:05,720 --> 01:32:06,800
 this is a linear term, right?

1230
01:32:06,800 --> 01:32:09,920
 Minus omega, it's a first order, it's a linear term.

1231
01:32:09,920 --> 01:32:13,560
 The second term, well, it's not a constant, okay?

1232
01:32:13,600 --> 01:32:15,120
 Sorry, it's not always constant,

1233
01:32:15,120 --> 01:32:16,760
 it's actually a piecewise constant.

1234
01:32:16,760 --> 01:32:21,320
 Means sometimes zero, sometimes pi, but this is for range.

1235
01:32:21,320 --> 01:32:23,960
 All right, so by having this kind of function,

1236
01:32:23,960 --> 01:32:26,960
 we can say that the overall phase response

1237
01:32:26,960 --> 01:32:30,200
 is actually a so-called piecewise linear.

1238
01:32:30,200 --> 01:32:32,320
 In other words, if they have some sudden change

1239
01:32:32,320 --> 01:32:35,480
 from the, let's say pi, three by zero, right?

1240
01:32:35,480 --> 01:32:38,920
 But in the entire range, except for that sudden change,

1241
01:32:38,920 --> 01:32:40,860
 everything is linear, right?

1242
01:32:40,860 --> 01:32:43,000
 So this is also something we desired.

1243
01:32:43,000 --> 01:32:44,880
 In the relaxed kind of a concept,

1244
01:32:44,880 --> 01:32:47,680
 this is also considered as a linear, right?

1245
01:32:47,680 --> 01:32:50,480
 So by doing so, we can show that the theorem one

1246
01:32:50,480 --> 01:32:53,960
 will be always true, at least for m equal to three.

1247
01:32:53,960 --> 01:32:54,800
 All right?

1248
01:32:56,360 --> 01:32:57,200
 Makes sense?

1249
01:32:57,200 --> 01:32:59,560
 I'm just showing a very simple example, right?

1250
01:32:59,560 --> 01:33:03,200
 And the key to do that is by first grouping the term,

1251
01:33:03,200 --> 01:33:07,160
 applying the symmetric property, group them together,

1252
01:33:07,160 --> 01:33:09,400
 and form something you can easily represent

1253
01:33:09,400 --> 01:33:11,600
 and using the polar form, right?

1254
01:33:11,600 --> 01:33:14,000
 And that's why you can deal with the magnitude

1255
01:33:14,000 --> 01:33:15,560
 and the phase separately, right?

1256
01:33:15,560 --> 01:33:18,480
 Now, if you look at the phase response,

1257
01:33:18,480 --> 01:33:21,200
 which is piecewise linear, right?

1258
01:33:22,400 --> 01:33:24,500
 Okay, this is the m equal to three case.

1259
01:33:24,500 --> 01:33:26,480
 Now, m equal to four.

1260
01:33:26,480 --> 01:33:28,840
 So m equal to four, you will have third order,

1261
01:33:28,840 --> 01:33:30,080
 order equal to three.

1262
01:33:30,080 --> 01:33:32,000
 You will have four terms in total.

1263
01:33:32,000 --> 01:33:34,760
 So the right way to group them together is by

1264
01:33:34,760 --> 01:33:37,680
 zero order versus third order, right?

1265
01:33:37,680 --> 01:33:39,160
 So these two terms together,

1266
01:33:39,160 --> 01:33:41,120
 let b three equal to b zero, right?

1267
01:33:41,120 --> 01:33:43,200
 So now you can extract the b zero out.

1268
01:33:43,200 --> 01:33:45,040
 And then the middle pair, right?

1269
01:33:45,040 --> 01:33:47,680
 Middle pair is here, you extract the b one out.

1270
01:33:47,680 --> 01:33:49,920
 You do some kind of a common factor extraction,

1271
01:33:49,920 --> 01:33:53,660
 which is z to power minus three over two.

1272
01:33:53,660 --> 01:33:55,400
 Now, these are the pairs.

1273
01:33:55,400 --> 01:33:58,160
 You can actually cancel the imaginary part.

1274
01:33:58,160 --> 01:34:01,280
 So you can tell that the way I'm doing here

1275
01:34:01,280 --> 01:34:04,860
 is just to form this so-called compressed conjugate, right?

1276
01:34:04,860 --> 01:34:08,040
 Because if you extract, so if you swap the z

1277
01:34:08,040 --> 01:34:10,300
 with e to power minus j omega,

1278
01:34:10,300 --> 01:34:13,300
 you can tell that every pair in the bracket

1279
01:34:13,300 --> 01:34:15,580
 are actually compressed conjugate.

1280
01:34:15,580 --> 01:34:18,440
 Means the phase is exactly the opposite, right?

1281
01:34:18,440 --> 01:34:21,780
 So by doing so, these two will always cancel

1282
01:34:21,780 --> 01:34:23,700
 their imaginary part, right?

1283
01:34:23,700 --> 01:34:25,340
 So the summation of a compressed conjugate

1284
01:34:25,340 --> 01:34:28,020
 will always be real number, right?

1285
01:34:28,020 --> 01:34:30,320
 So that's the only way you can form the cosine,

1286
01:34:30,320 --> 01:34:33,180
 similar for the second term, you'll form two cosine.

1287
01:34:33,180 --> 01:34:34,900
 Very similar to the previous question.

1288
01:34:34,900 --> 01:34:37,020
 We can guarantee that these four,

1289
01:34:37,060 --> 01:34:40,580
 these terms will be always real, right?

1290
01:34:40,580 --> 01:34:42,220
 So because there's no imaginary,

1291
01:34:42,220 --> 01:34:44,220
 cosine, cosine is always real.

1292
01:34:44,220 --> 01:34:48,260
 So let's analyze the phase response inside the second term,

1293
01:34:48,260 --> 01:34:51,980
 right, which is let's call it HR omega, okay?

1294
01:34:51,980 --> 01:34:53,860
 So how to analyze HR omega?

1295
01:34:53,860 --> 01:34:56,780
 Because it's real, so it can be either zero or pi,

1296
01:34:56,780 --> 01:35:00,300
 depends on the term itself is positive or negative, right?

1297
01:35:00,300 --> 01:35:03,340
 Because if it's negative, you have to absorb the minus one,

1298
01:35:03,340 --> 01:35:04,180
 right?

1299
01:35:04,180 --> 01:35:08,620
 So it's equal to e to the power of minus j pi, right?

1300
01:35:08,620 --> 01:35:10,220
 So in this case, you can tell that,

1301
01:35:10,220 --> 01:35:12,420
 well, the theta omega, sorry,

1302
01:35:12,420 --> 01:35:15,020
 theta r omega is kind of piecewise constant.

1303
01:35:16,260 --> 01:35:18,620
 And plus the turning front,

1304
01:35:18,620 --> 01:35:21,900
 this guy has a linear phase, right?

1305
01:35:21,900 --> 01:35:24,020
 Because a linear function is here.

1306
01:35:24,020 --> 01:35:26,420
 So together, the entire phase response

1307
01:35:26,420 --> 01:35:30,340
 will again be the piecewise linear, right?

1308
01:35:30,340 --> 01:35:33,220
 So it's going to be linear except for the sudden change

1309
01:35:33,220 --> 01:35:35,020
 from zero to pi, right?

1310
01:35:35,020 --> 01:35:36,580
 Otherwise it's always a linear.

1311
01:35:37,620 --> 01:35:40,260
 So now you can tell that at least for m equal to three,

1312
01:35:40,260 --> 01:35:41,660
 m equal to four,

1313
01:35:41,660 --> 01:35:44,940
 both of them will guarantee to be the linear phase filter,

1314
01:35:44,940 --> 01:35:45,780
 right?

1315
01:35:45,780 --> 01:35:47,580
 In fact, you can easily do five, four, six, right?

1316
01:35:47,580 --> 01:35:48,740
 Because it's the same way.

1317
01:35:48,740 --> 01:35:50,980
 You just need to group the similar term together,

1318
01:35:50,980 --> 01:35:53,700
 form the complex conjugate, extract the real term,

1319
01:35:53,700 --> 01:35:56,620
 and then tell that the real term will have the phase change,

1320
01:35:56,620 --> 01:35:58,420
 the other term will always be linear, right?

1321
01:35:58,420 --> 01:36:01,300
 You can do this perfectly for other kind of orders,

1322
01:36:02,300 --> 01:36:03,300
 which I won't repeat,

1323
01:36:03,300 --> 01:36:06,100
 but give you some idea why this is true, all right?

1324
01:36:07,940 --> 01:36:08,780
 Okay?

1325
01:36:10,140 --> 01:36:11,180
 Make sense, everyone?

1326
01:36:12,940 --> 01:36:15,360
 Okay, so now after the proof, right?

1327
01:36:15,360 --> 01:36:19,820
 Now we pretty much knows why the theorem one is true

1328
01:36:19,820 --> 01:36:23,540
 for saying that it's linear and how to use the theorem one,

1329
01:36:23,540 --> 01:36:25,580
 right, to tell whether the filter is linear or not,

1330
01:36:25,580 --> 01:36:26,740
 right, linear phase.

1331
01:36:26,740 --> 01:36:30,100
 But theorem one is not the only condition

1332
01:36:30,100 --> 01:36:32,340
 to end up with a linear phase.

1333
01:36:32,340 --> 01:36:33,780
 In fact, there's another condition,

1334
01:36:33,780 --> 01:36:35,660
 which we call in the theorem two,

1335
01:36:35,660 --> 01:36:39,860
 also can show that a filter is linear phase, okay?

1336
01:36:39,860 --> 01:36:43,020
 So instead of showing the symmetric property,

1337
01:36:43,020 --> 01:36:44,700
 you are talking about the opposite,

1338
01:36:44,700 --> 01:36:47,300
 it's anti-symmetric property, right?

1339
01:36:47,300 --> 01:36:50,260
 So the only difference is that instead of saying that

1340
01:36:50,260 --> 01:36:52,820
 the pair of coefficient are equal,

1341
01:36:52,820 --> 01:36:56,620
 they can be also the opposite, right?

1342
01:36:56,620 --> 01:36:58,900
 The only difference here is previously,

1343
01:36:58,900 --> 01:37:02,900
 it was Bm equal to Bm minus one minus M,

1344
01:37:02,900 --> 01:37:07,780
 but right now it's actually the minus sign here, okay?

1345
01:37:07,780 --> 01:37:09,460
 If they are the exact opposite,

1346
01:37:09,460 --> 01:37:14,460
 we call it anti-symmetric, anti-symmetric property, okay?

1347
01:37:15,179 --> 01:37:17,500
 But it's the same, you just form a polynomial,

1348
01:37:17,500 --> 01:37:19,299
 you determine the order, you find the first term

1349
01:37:19,299 --> 01:37:22,179
 and last term, you check are they opposite, right?

1350
01:37:22,179 --> 01:37:25,280
 If they're opposite, fine, you look at the second pair, right?

1351
01:37:25,280 --> 01:37:27,219
 If they're also opposite, every pair is opposite,

1352
01:37:27,220 --> 01:37:29,380
 you can also conclude that this filter

1353
01:37:29,380 --> 01:37:33,700
 is actually linear phase, all right?

1354
01:37:33,700 --> 01:37:35,860
 So in this case, you will also end up

1355
01:37:35,860 --> 01:37:37,860
 with the phase response in the following term,

1356
01:37:37,860 --> 01:37:40,560
 but you will have a slightly different form

1357
01:37:40,560 --> 01:37:42,860
 than the condition one, but both of them

1358
01:37:42,860 --> 01:37:46,540
 are giving you the linear phase kind of a filter, right?

1359
01:37:47,660 --> 01:37:50,140
 Now I won't prove it, but I'm giving you one example

1360
01:37:50,140 --> 01:37:52,140
 to apply that, right?

1361
01:37:52,140 --> 01:37:56,060
 So I'm saying that, well,

1362
01:37:56,980 --> 01:38:01,860
 let's look at this kind of a transfer function, right?

1363
01:38:01,860 --> 01:38:04,140
 So this transfer function, right?

1364
01:38:04,140 --> 01:38:05,380
 What is the order of it?

1365
01:38:06,740 --> 01:38:08,420
 It's order four, right?

1366
01:38:08,420 --> 01:38:11,980
 So I should have five terms, right?

1367
01:38:11,980 --> 01:38:15,060
 Fourth order polynomial got to give you five terms.

1368
01:38:15,060 --> 01:38:18,000
 Now, how many terms are showing up here?

1369
01:38:19,580 --> 01:38:20,500
 Four terms, right?

1370
01:38:20,500 --> 01:38:22,220
 You got zero term, first order term,

1371
01:38:22,220 --> 01:38:26,040
 but the second order term is somehow missing here, right?

1372
01:38:26,340 --> 01:38:29,180
 It didn't show up, but it's there, it's zero, right?

1373
01:38:29,180 --> 01:38:30,780
 We know B two is zero.

1374
01:38:30,780 --> 01:38:34,540
 I got B three, I got B four, right?

1375
01:38:34,540 --> 01:38:36,340
 So now I want to form the pairs.

1376
01:38:36,340 --> 01:38:40,820
 I need to pair up the B zero and the B four, right?

1377
01:38:40,820 --> 01:38:43,380
 So B zero is one, B four is minus one,

1378
01:38:43,380 --> 01:38:46,660
 so these two are actually anti-symmetric,

1379
01:38:46,660 --> 01:38:49,100
 okay, which sounds like the second condition, okay?

1380
01:38:49,100 --> 01:38:53,860
 Now B one, which is minus two, and B three is actually two.

1381
01:38:53,860 --> 01:38:56,420
 So minus two, two are exactly opposite.

1382
01:38:56,420 --> 01:38:59,219
 So I have the second pair, right?

1383
01:38:59,219 --> 01:39:02,339
 The last pair, okay, this is tricky.

1384
01:39:02,339 --> 01:39:07,179
 So for this scenario, if I'm going to the condition two,

1385
01:39:07,179 --> 01:39:09,900
 and I have a middle term, which is the B two, right?

1386
01:39:10,980 --> 01:39:14,620
 The only number that equal to the negative sign

1387
01:39:14,620 --> 01:39:16,940
 of the same is equal to zero, right?

1388
01:39:16,940 --> 01:39:19,540
 You have to make sure the middle number must be zero.

1389
01:39:20,860 --> 01:39:23,339
 Other than that, for example, if I have a,

1390
01:39:23,340 --> 01:39:28,420
 let's say, plus z to the power of minus two there,

1391
01:39:28,420 --> 01:39:32,540
 I'm going to violate my condition two, right?

1392
01:39:32,540 --> 01:39:34,820
 Only the zero equal to minus zero.

1393
01:39:35,660 --> 01:39:38,020
 So let's say if you are talking about the fear of two,

1394
01:39:38,020 --> 01:39:40,560
 and you have a middle term like this,

1395
01:39:40,560 --> 01:39:42,300
 you need to make sure this guy equal to zero.

1396
01:39:42,300 --> 01:39:44,340
 Otherwise, you won't have the condition two, right?

1397
01:39:44,340 --> 01:39:46,820
 This is the special case for fear of two.

1398
01:39:46,820 --> 01:39:50,540
 Fear of one, you can easily form an equal pair.

1399
01:39:50,540 --> 01:39:51,720
 Any number equal to itself,

1400
01:39:51,720 --> 01:39:55,080
 but not every number equal to the opposite of itself.

1401
01:39:55,080 --> 01:39:57,320
 Only zero does, okay?

1402
01:39:57,320 --> 01:39:59,720
 So this is actually the special case for condition two,

1403
01:39:59,720 --> 01:40:02,840
 but this one apparently satisfy the condition two.

1404
01:40:02,840 --> 01:40:05,440
 So it's going to be a linear phase response, right?

1405
01:40:05,440 --> 01:40:08,000
 A linear phase filter, okay?

1406
01:40:09,360 --> 01:40:11,960
 So this shows you that there's another way

1407
01:40:11,960 --> 01:40:16,440
 to prove or to design a linear phase filter.

1408
01:40:16,440 --> 01:40:18,840
 So we have two conditions, right?

1409
01:40:18,840 --> 01:40:21,400
 Symmetric condition or anti-symmetric condition.

1410
01:40:21,400 --> 01:40:24,639
 And these are the only two condition

1411
01:40:24,639 --> 01:40:27,160
 that will lead to a linear phase FIR.

1412
01:40:27,160 --> 01:40:32,080
 In other words, if I say condition one or condition two

1413
01:40:32,080 --> 01:40:35,759
 becomes a sufficient and necessary condition

1414
01:40:35,759 --> 01:40:37,240
 for linear phase filter.

1415
01:40:38,080 --> 01:40:40,920
 So it's like both sides, right?

1416
01:40:40,920 --> 01:40:42,920
 If I'm telling you that there's a FIR filter

1417
01:40:42,920 --> 01:40:44,480
 that's a linear phase,

1418
01:40:44,480 --> 01:40:46,480
 you can always say that it's either condition one

1419
01:40:46,480 --> 01:40:50,240
 or condition two to be true, all right?

1420
01:40:50,240 --> 01:40:52,120
 Because that's the only two possible condition

1421
01:40:52,120 --> 01:40:55,440
 that can give you a linear phase, okay?

1422
01:40:55,440 --> 01:40:58,679
 So any filter, I mean, any linear phase FIR

1423
01:40:58,679 --> 01:41:02,160
 will satisfy either condition one or condition two.

1424
01:41:02,160 --> 01:41:06,080
 So you can treat this as the equivalent condition, right?

1425
01:41:06,080 --> 01:41:09,179
 To tell the linear phase, all right?

1426
01:41:10,719 --> 01:41:14,760
 Okay, so I mean, this is actually a general form,

1427
01:41:14,760 --> 01:41:16,080
 but I really won't go through it

1428
01:41:16,080 --> 01:41:18,599
 because it's, I think it's a little bit hard,

1429
01:41:18,920 --> 01:41:21,200
 but you can remember that normally we're talking about

1430
01:41:21,200 --> 01:41:24,120
 there are four types of linear phase, right?

1431
01:41:24,120 --> 01:41:26,680
 Depends on whether they are, okay,

1432
01:41:26,680 --> 01:41:29,120
 k equal to zero means it's symmetric.

1433
01:41:29,120 --> 01:41:31,080
 k equal to one means it's actually anti-symmetric.

1434
01:41:31,080 --> 01:41:35,320
 So the general form of the symmetric condition is this,

1435
01:41:35,320 --> 01:41:36,160
 right?

1436
01:41:36,160 --> 01:41:38,120
 You can easily find, you write down the symmetric

1437
01:41:38,120 --> 01:41:40,120
 as minus one to the power of k, right?

1438
01:41:40,120 --> 01:41:41,480
 k equal to zero is actually equal,

1439
01:41:41,480 --> 01:41:43,040
 k equal to minus one is the,

1440
01:41:43,040 --> 01:41:45,440
 sorry, k equal to one equal to negative sign.

1441
01:41:45,440 --> 01:41:48,639
 But it depends on whether they are symmetric

1442
01:41:48,639 --> 01:41:51,419
 or anti-symmetric, whether the M is ordered,

1443
01:41:51,419 --> 01:41:54,559
 even or odd, you have four type of filter,

1444
01:41:54,559 --> 01:41:56,799
 which are all linear phase, right?

1445
01:41:56,799 --> 01:41:59,280
 So next time if you heard of like type one,

1446
01:41:59,280 --> 01:42:02,540
 type two, type three, this is what they mean, right?

1447
01:42:02,540 --> 01:42:04,820
 It depends on different type of symmetry

1448
01:42:04,820 --> 01:42:08,679
 and different number of, different order of your polynomial,

1449
01:42:08,679 --> 01:42:09,879
 right?

1450
01:42:09,879 --> 01:42:14,879
 So, and okay, so, but basically, I mean,

1451
01:42:16,280 --> 01:42:18,280
 it's also easy to remember, right?

1452
01:42:18,280 --> 01:42:20,599
 Type one and type two are both symmetric,

1453
01:42:20,599 --> 01:42:23,200
 corresponding to the theorem one, right?

1454
01:42:23,200 --> 01:42:26,000
 Three and four corresponding to a theorem two.

1455
01:42:26,000 --> 01:42:30,120
 Now, one just says M is even, in other words, N is odd, right?

1456
01:42:30,120 --> 01:42:32,120
 It means that even number of terms,

1457
01:42:32,120 --> 01:42:34,280
 odd number of order, right?

1458
01:42:34,280 --> 01:42:37,280
 Type two is actually the odd number of terms

1459
01:42:37,280 --> 01:42:39,120
 and even number of order, right?

1460
01:42:39,120 --> 01:42:40,919
 But basically, I mean, if you want, you can memorize that,

1461
01:42:40,919 --> 01:42:42,960
 but it's also not hard to memorize, right?

1462
01:42:43,000 --> 01:42:46,520
 But what I mean is, if you see a question tell you,

1463
01:42:46,520 --> 01:42:49,320
 it is type one, you must know what they mean, right?

1464
01:42:49,320 --> 01:42:53,860
 Type one means it's going to be a symmetric property

1465
01:42:53,860 --> 01:42:57,280
 and also we're talking about the number of terms to be odd,

1466
01:42:57,280 --> 01:42:58,360
 right?

1467
01:42:58,360 --> 01:43:01,840
 So M is odd, in other words, N is actually even, right?

1468
01:43:01,840 --> 01:43:05,160
 So you may have a question like this saying that,

1469
01:43:05,160 --> 01:43:07,480
 okay, I give you a type one,

1470
01:43:07,480 --> 01:43:11,240
 if I transfer function and if they say type one,

1471
01:43:11,240 --> 01:43:13,960
 you have to make sure it's actually theorem one

1472
01:43:13,960 --> 01:43:14,920
 not theorem two.

1473
01:43:15,800 --> 01:43:16,760
 If they didn't say anything,

1474
01:43:16,760 --> 01:43:19,519
 they say it's in your face, that is either one, right?

1475
01:43:19,519 --> 01:43:22,000
 But they explicitly say type one,

1476
01:43:22,000 --> 01:43:24,760
 it means you cannot have anti-symmetric property,

1477
01:43:24,760 --> 01:43:27,400
 it must be symmetric property, right?

1478
01:43:27,400 --> 01:43:30,559
 So, okay, if they explicitly say M equal to six,

1479
01:43:30,559 --> 01:43:34,080
 type one, you have to make sure the coefficient

1480
01:43:34,080 --> 01:43:38,320
 satisfy the type one, sorry, symmetric property.

1481
01:43:38,320 --> 01:43:41,000
 So in other words, you can group the first term

1482
01:43:41,000 --> 01:43:43,800
 and the last term together and make them equal, right?

1483
01:43:43,800 --> 01:43:47,720
 H zero to be equal to H six, all right?

1484
01:43:47,720 --> 01:43:49,800
 So this is how you can write it.

1485
01:43:49,800 --> 01:43:52,680
 And if you have this linear face,

1486
01:43:52,680 --> 01:43:57,360
 kind of property for your future, right?

1487
01:43:57,360 --> 01:43:59,040
 Due to this symmetric property,

1488
01:43:59,040 --> 01:44:02,880
 your broad diagram can be simplified, right?

1489
01:44:02,880 --> 01:44:03,720
 Why?

1490
01:44:03,720 --> 01:44:05,760
 Because it's simple, you kind of reduce the degree of freedom,

1491
01:44:05,760 --> 01:44:06,600
 right?

1492
01:44:06,600 --> 01:44:10,200
 Your choice of the coefficients are not completely free.

1493
01:44:10,200 --> 01:44:15,200
 So by doing so, you can save half of the multiplier, right?

1494
01:44:15,240 --> 01:44:19,639
 Because here the H zero can be used for both,

1495
01:44:19,639 --> 01:44:23,240
 the zero order term, which is going to this branch,

1496
01:44:23,240 --> 01:44:25,800
 and also the delayed version, right?

1497
01:44:25,800 --> 01:44:28,639
 The delayed version of the six will be here.

1498
01:44:29,760 --> 01:44:32,920
 So both of them will be multiplied by H zero.

1499
01:44:32,920 --> 01:44:35,639
 So H zero are applied twice, right?

1500
01:44:35,639 --> 01:44:38,679
 For the original signal and the delayed six version.

1501
01:44:38,680 --> 01:44:43,600
 Similarly, your H one will be used for the delayed one version

1502
01:44:43,600 --> 01:44:47,920
 and also the delayed five time version, right?

1503
01:44:47,920 --> 01:44:51,360
 So basically having the linear phase property

1504
01:44:51,360 --> 01:44:54,440
 on one side you avoid distortion of your signal,

1505
01:44:54,440 --> 01:44:56,840
 just now we show in the beginning, right?

1506
01:44:56,840 --> 01:44:59,480
 Nonlinear response has a risk of distortion.

1507
01:44:59,480 --> 01:45:00,560
 That's the first thing.

1508
01:45:00,560 --> 01:45:02,640
 The other thing is that in designing the filter,

1509
01:45:02,640 --> 01:45:04,440
 you also save some of the commutation

1510
01:45:04,440 --> 01:45:06,160
 because this symmetric property

1511
01:45:06,160 --> 01:45:09,000
 will save you half of the multiplier, right?

1512
01:45:09,000 --> 01:45:12,360
 So this is another kind of a benefit

1513
01:45:12,360 --> 01:45:16,519
 to ensure your filter is linear phase, all right?

1514
01:45:18,200 --> 01:45:19,400
 Make sense?

1515
01:45:19,400 --> 01:45:22,599
 So the previous kind of direct form is a general form, right?

1516
01:45:22,599 --> 01:45:24,360
 No property, they have anything,

1517
01:45:24,360 --> 01:45:29,040
 but this is the form with the type one symmetry property.

1518
01:45:29,040 --> 01:45:31,639
 All right, but not every polynomial can be written like this.

1519
01:45:31,639 --> 01:45:35,920
 Only with your type one symmetric property, all right?

1520
01:45:35,920 --> 01:45:37,200
 But this is just one way to show it

1521
01:45:37,200 --> 01:45:40,200
 and here's another possibility like type two, right?

1522
01:45:40,200 --> 01:45:42,120
 So if it's a type two,

1523
01:45:42,120 --> 01:45:46,320
 the only difference is length become a eighth length, right?

1524
01:45:46,320 --> 01:45:48,120
 In other words, you still have the symmetric property

1525
01:45:48,120 --> 01:45:50,480
 but you will have another length.

1526
01:45:50,480 --> 01:45:54,120
 In other words, you are going to end up with this term here,

1527
01:45:54,120 --> 01:45:54,960
 right?

1528
01:45:54,960 --> 01:45:58,520
 And similarly, you save half of the multiplier.

1529
01:45:58,520 --> 01:46:01,400
 Instead of eight, you have four multiplier in this case.

1530
01:46:03,200 --> 01:46:04,040
 All right?

1531
01:46:04,040 --> 01:46:06,040
 This is the same thing, but just give you some idea, right?

1532
01:46:06,040 --> 01:46:09,480
 Why the linear phase is like everybody loves the linear phase,

1533
01:46:09,480 --> 01:46:10,320
 right?

1534
01:46:11,160 --> 01:46:13,200
 Okay, so just to summarize,

1535
01:46:13,200 --> 01:46:14,920
 I think normally this is a good table

1536
01:46:14,920 --> 01:46:19,760
 to remember the four type of a symmetric property, sorry,

1537
01:46:19,760 --> 01:46:22,400
 four type of a linear phase filter, right?

1538
01:46:22,400 --> 01:46:25,120
 So type one, symmetric, left is odd,

1539
01:46:25,120 --> 01:46:28,080
 but basically you can use this to memorize, right?

1540
01:46:28,080 --> 01:46:30,040
 And I mean, the only way,

1541
01:46:30,040 --> 01:46:31,800
 the only thing I want you to remember is

1542
01:46:31,800 --> 01:46:33,480
 you need to know correspondingly, right?

1543
01:46:33,480 --> 01:46:36,240
 Type one, two, three, four, what do they mean?

1544
01:46:36,240 --> 01:46:39,200
 In terms of length, in terms of the symmetric property, right?

1545
01:46:39,200 --> 01:46:42,599
 But it shouldn't be there, they're hard to analyze.

1546
01:46:42,599 --> 01:46:45,240
 But basically I show you the, you know,

1547
01:46:45,240 --> 01:46:48,080
 some of the example and why this is true, right?

1548
01:46:48,080 --> 01:46:50,440
 The only thing you remember is how to apply that, right?

1549
01:46:50,440 --> 01:46:54,160
 So this is actually the table you probably want to memorize.

1550
01:46:54,160 --> 01:46:56,200
 I don't know whether they will be provided in the exam,

1551
01:46:56,200 --> 01:46:58,360
 but it's not very hard to memorize.

1552
01:46:58,360 --> 01:47:00,759
 So you can actually easily memorize it, right?

1553
01:47:01,760 --> 01:47:04,440
 Okay, and also here's another table.

1554
01:47:04,440 --> 01:47:07,240
 I don't think this is actually needed,

1555
01:47:07,240 --> 01:47:10,400
 but this one shows not only the symmetric,

1556
01:47:10,400 --> 01:47:13,760
 but also what is the corresponding phase response, right?

1557
01:47:13,760 --> 01:47:17,920
 But you know, I won't test on this, but it's for information.

1558
01:47:17,920 --> 01:47:20,040
 You have the corresponding form of the phase response

1559
01:47:20,040 --> 01:47:21,600
 and also the coefficients, right?

1560
01:47:21,600 --> 01:47:24,240
 If they are belonging to each of the type

1561
01:47:24,240 --> 01:47:26,160
 of the linear phase filter, right?

1562
01:47:27,400 --> 01:47:30,440
 Okay, so I think that's pretty much all I want to cover

1563
01:47:30,440 --> 01:47:33,519
 for this part, so let's look at this one last example, right?

1564
01:47:34,519 --> 01:47:38,320
 So basically, okay, this is slightly more challenging,

1565
01:47:38,320 --> 01:47:41,120
 but you know, it's still relevant to what we learned.

1566
01:47:41,120 --> 01:47:44,960
 So they're saying that I have a linear phase FIR,

1567
01:47:44,960 --> 01:47:48,759
 but this FIR can be written as a product

1568
01:47:48,759 --> 01:47:50,599
 of two kind of filters, right?

1569
01:47:50,599 --> 01:47:52,919
 You can consider one filter after the other,

1570
01:47:52,919 --> 01:47:57,919
 and I'm giving you the F1, which is one of the filter, okay?

1571
01:47:58,480 --> 01:47:59,519
 I give you one of the filter,

1572
01:47:59,520 --> 01:48:02,760
 exactly as the order two polynomial.

1573
01:48:02,760 --> 01:48:06,880
 I want you to determine the other filter, F2,

1574
01:48:07,760 --> 01:48:11,700
 in order to make the overall response to be linear phase.

1575
01:48:12,840 --> 01:48:16,480
 Okay, so this is like slightly more challenging question

1576
01:48:16,480 --> 01:48:18,000
 than the one I showed you just now, right?

1577
01:48:18,000 --> 01:48:18,920
 Which one?

1578
01:48:18,920 --> 01:48:20,800
 The previous one were like pretty straightforward.

1579
01:48:20,800 --> 01:48:22,920
 This one is slightly, you need to think about it,

1580
01:48:22,920 --> 01:48:24,880
 but basically you have to understand, right?

1581
01:48:24,880 --> 01:48:27,760
 Every time when they say linear phase,

1582
01:48:27,760 --> 01:48:31,360
 you need to ask yourself, what does the linear phase mean?

1583
01:48:31,360 --> 01:48:32,200
 Right?

1584
01:48:32,200 --> 01:48:36,320
 So in this case, what they mean is that the overall product

1585
01:48:36,320 --> 01:48:40,520
 must have something like a symmetric property, right?

1586
01:48:40,520 --> 01:48:43,140
 So this is actually the product we were talking about.

1587
01:48:43,140 --> 01:48:47,800
 To match with this guy, how can I form a product

1588
01:48:47,800 --> 01:48:49,880
 which are going to be symmetric?

1589
01:48:51,140 --> 01:48:52,560
 If one of them is given, right?

1590
01:48:52,560 --> 01:48:54,160
 How can I form another one?

1591
01:48:54,160 --> 01:48:55,760
 Multiply it together can give you

1592
01:48:55,760 --> 01:48:57,720
 some kind of symmetric kind of structure.

1593
01:48:58,760 --> 01:49:00,120
 I mean, there are many ways to form it,

1594
01:49:00,120 --> 01:49:05,120
 but one way to do it is by using the symmetric of this term.

1595
01:49:05,300 --> 01:49:06,140
 Right?

1596
01:49:06,140 --> 01:49:07,920
 So right now I have a number,

1597
01:49:07,920 --> 01:49:10,200
 I can extract the 2.1 out.

1598
01:49:10,200 --> 01:49:13,720
 I'm going to have the second order polynomial like this.

1599
01:49:13,720 --> 01:49:16,960
 I can easily construct a corresponding term,

1600
01:49:16,960 --> 01:49:21,560
 which is the same term, multiply by e to power of minus two.

1601
01:49:21,560 --> 01:49:23,520
 So, but these terms, I have to make sure

1602
01:49:23,520 --> 01:49:25,520
 every term is the complex conjugate.

1603
01:49:26,440 --> 01:49:27,280
 Remember?

1604
01:49:27,280 --> 01:49:29,320
 So here's z to power of minus two,

1605
01:49:29,320 --> 01:49:30,400
 here I have z to power of two.

1606
01:49:30,400 --> 01:49:34,240
 So it's a complex conjugate of the first second order term.

1607
01:49:34,240 --> 01:49:36,880
 Now I have a positive second order term, right?

1608
01:49:36,880 --> 01:49:39,560
 Similarly, here I got z to power of minus one.

1609
01:49:39,560 --> 01:49:42,060
 I can construct a z, right?

1610
01:49:42,060 --> 01:49:43,800
 Which is also the complex conjugate

1611
01:49:43,800 --> 01:49:46,400
 of my original first order term.

1612
01:49:46,400 --> 01:49:51,000
 So why do I need to construct a complex conjugate?

1613
01:49:51,000 --> 01:49:53,440
 The reason is to cancel each other, right?

1614
01:49:53,440 --> 01:49:55,000
 Remember, complex conjugate,

1615
01:49:55,000 --> 01:49:56,960
 if you multiply the two together,

1616
01:49:56,960 --> 01:49:59,200
 is going to give you the constant, right?

1617
01:49:59,200 --> 01:50:00,839
 Because the order cancel each other.

1618
01:50:00,839 --> 01:50:05,400
 So the only thing left out is the cross term, right?

1619
01:50:05,400 --> 01:50:08,919
 And the cross term will have the symmetric property,

1620
01:50:08,919 --> 01:50:11,440
 which are because by having the same coefficient,

1621
01:50:11,440 --> 01:50:13,200
 I'm going to have the symmetric property.

1622
01:50:13,200 --> 01:50:16,000
 So all the cross term will be canceled,

1623
01:50:16,000 --> 01:50:19,200
 and the other term will be the symmetric property.

1624
01:50:19,200 --> 01:50:22,519
 So I can form some kind of a symmetric property like this,

1625
01:50:23,000 --> 01:50:26,360
 where this term will be equal to the first term

1626
01:50:26,360 --> 01:50:29,360
 because of my symmetric property here.

1627
01:50:29,360 --> 01:50:31,840
 So this one times this one, this one times this one,

1628
01:50:31,840 --> 01:50:34,360
 both of you give you the two, right?

1629
01:50:34,360 --> 01:50:37,000
 And similarly, five is like here and here,

1630
01:50:37,000 --> 01:50:39,840
 this one and this one, which will give you both five

1631
01:50:39,840 --> 01:50:40,680
 in this term.

1632
01:50:40,680 --> 01:50:41,840
 So all of the cross term,

1633
01:50:41,840 --> 01:50:44,080
 or sorry, all of the, how should I say,

1634
01:50:44,080 --> 01:50:46,320
 corresponding multiply will be canceled.

1635
01:50:46,320 --> 01:50:48,380
 All of the cross term will survive.

1636
01:50:48,380 --> 01:50:51,480
 But the cross term, you can always form the symmetric part

1637
01:50:51,480 --> 01:50:55,160
 because the first term in the first factor multiplied

1638
01:50:55,160 --> 01:50:57,400
 by the second term will always have a counterpart,

1639
01:50:57,400 --> 01:50:59,599
 which equal to the second term in the first factor

1640
01:50:59,599 --> 01:51:02,599
 multiplied by the first term in the second factor.

1641
01:51:02,599 --> 01:51:05,559
 So that's the only way you can create the symmetric term

1642
01:51:05,559 --> 01:51:10,299
 that end up with a condition one kind of polynomial here.

1643
01:51:10,299 --> 01:51:13,599
 So the small trick to play with the complex conjugate.

1644
01:51:14,519 --> 01:51:17,200
 But the important thing is that you have to understand

1645
01:51:17,200 --> 01:51:20,280
 what is the objective I'm trying to do here, right?

1646
01:51:20,280 --> 01:51:23,280
 The objective is to form the final polynomial

1647
01:51:23,280 --> 01:51:25,080
 to be linear phase.

1648
01:51:25,080 --> 01:51:30,080
 And that means your polynomial for the final kind of filter

1649
01:51:30,400 --> 01:51:33,240
 must have the symmetric property, right?

1650
01:51:35,120 --> 01:51:36,400
 So I know it's a little bit challenging,

1651
01:51:36,400 --> 01:51:39,719
 but I'm just saying that in the exam,

1652
01:51:39,719 --> 01:51:42,080
 I may not give you something like very straightforward.

1653
01:51:42,080 --> 01:51:43,940
 I mean, very straightforward, I already go through them,

1654
01:51:43,940 --> 01:51:45,920
 but I can be a little bit tricky,

1655
01:51:45,920 --> 01:51:49,460
 but the key here is to understand what is the objective

1656
01:51:49,460 --> 01:51:52,220
 when you want to derive something, all right?

1657
01:51:52,220 --> 01:51:53,820
 So, but think about it,

1658
01:51:53,820 --> 01:51:56,020
 that won't give you some kind of idea, right?

1659
01:51:56,020 --> 01:51:58,340
 So what can be the varied version of the basic question

1660
01:51:58,340 --> 01:52:00,500
 I already covered, all right?

1661
01:52:02,180 --> 01:52:06,860
 Okay, but I'm with that, I'm actually end with all of this,

1662
01:52:06,860 --> 01:52:08,100
 how do I say?

1663
01:52:08,100 --> 01:52:10,000
 Linear phase, block diagram,

1664
01:52:10,000 --> 01:52:14,500
 and also equivalent expression of the block diagram, right?

1665
01:52:14,500 --> 01:52:17,000
 Okay, now I want to, okay, how much time I have?

1666
01:52:17,000 --> 01:52:19,560
 Okay, maybe slightly more than 30 minutes,

1667
01:52:19,560 --> 01:52:20,600
 I think I can finish this part.

1668
01:52:20,600 --> 01:52:22,880
 So the other thing I want to,

1669
01:52:22,880 --> 01:52:24,280
 I mean, actually starting from this week

1670
01:52:24,280 --> 01:52:26,200
 and continue next week,

1671
01:52:26,200 --> 01:52:29,880
 I'm going to move on to the so-called filter design, right?

1672
01:52:29,880 --> 01:52:32,000
 I mean, this is also very straightforward.

1673
01:52:32,000 --> 01:52:33,480
 We talk about ideal filters,

1674
01:52:33,480 --> 01:52:36,840
 we talk about what is that ideal frequency response,

1675
01:52:36,840 --> 01:52:40,120
 but we also mentioned that not all of this ideal filter

1676
01:52:40,120 --> 01:52:42,040
 can be realizable.

1677
01:52:42,040 --> 01:52:43,920
 In other words, we also want to care about

1678
01:52:43,920 --> 01:52:47,600
 how can I really implement some filters?

1679
01:52:47,600 --> 01:52:49,680
 If not the same as my design,

1680
01:52:49,680 --> 01:52:52,360
 how can I make the actual implementation

1681
01:52:52,360 --> 01:52:55,760
 to be as close as possible to my design, right?

1682
01:52:55,760 --> 01:52:58,400
 So this is normally referred as digital filter design.

1683
01:52:58,400 --> 01:53:02,280
 In other words, I need to design a realizable filter,

1684
01:53:02,280 --> 01:53:05,400
 in other words, realizable transfer function

1685
01:53:05,400 --> 01:53:08,600
 for a given kind of specification.

1686
01:53:08,600 --> 01:53:12,840
 So the idea is that my theory give me my specification.

1687
01:53:12,840 --> 01:53:15,160
 I want to have a low pass filter, maybe,

1688
01:53:15,160 --> 01:53:17,320
 but I want to find the corresponding

1689
01:53:17,320 --> 01:53:19,600
 realizable transfer function

1690
01:53:19,600 --> 01:53:23,840
 to be enough approximating my specification.

1691
01:53:23,840 --> 01:53:26,120
 All right, so this is actually what we want to do.

1692
01:53:26,120 --> 01:53:29,360
 And apparently we have two kind of filters.

1693
01:53:29,360 --> 01:53:31,720
 There's FIR, this is IR.

1694
01:53:31,720 --> 01:53:36,720
 So, you know, our focus will be mainly on FIR, to be honest.

1695
01:53:37,760 --> 01:53:41,840
 And we're going to look at how the design process will be,

1696
01:53:41,840 --> 01:53:46,600
 right, so for example, we need to derive the transfer function

1697
01:53:46,600 --> 01:53:51,120
 to be approximating enough of the intended specification.

1698
01:53:51,120 --> 01:53:52,880
 And what is objective, right?

1699
01:53:52,880 --> 01:53:54,560
 So when we say approximate,

1700
01:53:54,560 --> 01:53:58,200
 we need to talk about minimizing some errors.

1701
01:53:58,200 --> 01:54:00,880
 So what exactly is the quantity we want to minimize

1702
01:54:00,880 --> 01:54:02,600
 when we do design?

1703
01:54:02,600 --> 01:54:05,320
 So these will be some problems we're going to study,

1704
01:54:05,320 --> 01:54:08,720
 not complete by this week, but continue next week, all right?

1705
01:54:08,720 --> 01:54:11,720
 But this week, we're going to, let's say,

1706
01:54:12,160 --> 01:54:14,760
 focus about the magnitude approximation

1707
01:54:14,760 --> 01:54:16,760
 of an FIR filter first.

1708
01:54:16,760 --> 01:54:18,720
 Okay, so first, forget about IR.

1709
01:54:18,720 --> 01:54:22,080
 So IR, I'm not going to talk about for my part, all right?

1710
01:54:22,080 --> 01:54:23,440
 So FIR only.

1711
01:54:23,440 --> 01:54:25,280
 The second thing is forget about the phase first.

1712
01:54:25,280 --> 01:54:27,680
 Let's look at the magnitude first, all right?

1713
01:54:27,680 --> 01:54:32,680
 So how can I approximate the specified magnitude response

1714
01:54:34,040 --> 01:54:37,160
 with a feasible filter design, right?

1715
01:54:37,160 --> 01:54:40,640
 This will be the problem we're going to talk about first.

1716
01:54:40,640 --> 01:54:44,400
 So let's look at this low pass filter as example, right?

1717
01:54:44,400 --> 01:54:46,200
 We see that there are many, many kind of filters,

1718
01:54:46,200 --> 01:54:48,440
 there's low pass, high pass, band pass,

1719
01:54:48,440 --> 01:54:51,480
 but let's look at the low pass filter as example, right?

1720
01:54:51,480 --> 01:54:54,460
 So we say that for ideal low pass filter,

1721
01:54:54,460 --> 01:54:57,600
 normally you will have the form like this red line here,

1722
01:54:57,600 --> 01:54:58,440
 right?

1723
01:54:58,440 --> 01:55:01,760
 Very sharp transition, ideally no transition period,

1724
01:55:01,760 --> 01:55:05,200
 suddenly going from the pass band to the stop band, right?

1725
01:55:05,200 --> 01:55:07,520
 This will be your ideal low pass filter.

1726
01:55:07,520 --> 01:55:09,560
 So you can consider this ideal low pass filter

1727
01:55:09,560 --> 01:55:13,080
 as the specification, means that this is the objective

1728
01:55:13,080 --> 01:55:14,920
 you're trying to achieve, right?

1729
01:55:14,920 --> 01:55:16,640
 The ideal design.

1730
01:55:16,640 --> 01:55:21,440
 And also this is your so-called target magnitude response, right?

1731
01:55:21,440 --> 01:55:26,440
 So this is actually what indicated as the design objective,

1732
01:55:27,100 --> 01:55:29,720
 but in practice, you won't get this,

1733
01:55:29,720 --> 01:55:31,600
 you won't get the red line here.

1734
01:55:31,600 --> 01:55:35,280
 You will have the practical response,

1735
01:55:35,280 --> 01:55:36,920
 kind of frequency response,

1736
01:55:36,920 --> 01:55:40,520
 indicated as the black line like this, all right?

1737
01:55:40,520 --> 01:55:44,440
 So the entire objective of design

1738
01:55:44,440 --> 01:55:49,440
 is to make this black line to be approximately enough

1739
01:55:49,860 --> 01:55:51,720
 the red lines, right?

1740
01:55:51,720 --> 01:55:53,240
 In other words, you want to make the error

1741
01:55:53,240 --> 01:55:55,440
 between the black line and the red line

1742
01:55:55,440 --> 01:55:57,400
 as small as possible, right?

1743
01:55:57,400 --> 01:55:59,520
 But of course, you have to give all of this constraint

1744
01:55:59,520 --> 01:56:02,200
 you have in a practical design.

1745
01:56:02,200 --> 01:56:05,480
 So this is actually the objective.

1746
01:56:05,480 --> 01:56:09,440
 So, but just now we said that you won't really

1747
01:56:09,440 --> 01:56:11,759
 have the perfect red line,

1748
01:56:11,759 --> 01:56:15,480
 so you are going to fight against all of this

1749
01:56:15,480 --> 01:56:17,599
 non-ideal kind of phenomenon.

1750
01:56:17,599 --> 01:56:19,200
 So what are the non-ideal for phenomenon

1751
01:56:19,200 --> 01:56:20,559
 we are talking about, right?

1752
01:56:20,559 --> 01:56:22,480
 Mainly there are two, sorry,

1753
01:56:22,480 --> 01:56:24,959
 there are actually three to be specific.

1754
01:56:24,959 --> 01:56:29,019
 The first one is the so-called repose in the pass band, right?

1755
01:56:29,019 --> 01:56:30,200
 So what is the repose in the pass band?

1756
01:56:30,200 --> 01:56:32,519
 You will have some fluctuations here,

1757
01:56:32,520 --> 01:56:34,280
 not always centered at one,

1758
01:56:34,280 --> 01:56:36,480
 but a value is kind of alternating

1759
01:56:36,480 --> 01:56:39,520
 between one plus sigma p and one minus sigma p.

1760
01:56:39,520 --> 01:56:43,240
 So you are going to minimize the variance in the pass band,

1761
01:56:43,240 --> 01:56:44,080
 right?

1762
01:56:44,080 --> 01:56:46,480
 This is actually one of the first the term you want to minimize.

1763
01:56:46,480 --> 01:56:50,120
 The second term is actually the transition band here.

1764
01:56:50,120 --> 01:56:52,800
 So ideally the transition band will be zero

1765
01:56:52,800 --> 01:56:54,880
 because you suddenly transit from the pass band

1766
01:56:54,880 --> 01:56:56,100
 to the stop band.

1767
01:56:56,100 --> 01:56:59,600
 But in practice, the transition band will be not zero

1768
01:56:59,600 --> 01:57:03,640
 and normally it's actually specified by the range

1769
01:57:03,640 --> 01:57:06,040
 between the omega p and omega s.

1770
01:57:06,040 --> 01:57:09,520
 So omega p is the end of the pass band.

1771
01:57:09,520 --> 01:57:12,800
 The omega s is the start of the stop band, right?

1772
01:57:12,800 --> 01:57:16,520
 The distance between them is actually the transition band.

1773
01:57:16,520 --> 01:57:17,360
 All right?

1774
01:57:17,360 --> 01:57:18,200
 So last but not least,

1775
01:57:18,200 --> 01:57:20,120
 we also have some repose in the stop band, right?

1776
01:57:20,120 --> 01:57:22,080
 We also want to minimize the repose here.

1777
01:57:22,080 --> 01:57:24,920
 So all of these quantities that we want to minimize

1778
01:57:24,920 --> 01:57:28,640
 are something as the objective of our,

1779
01:57:29,280 --> 01:57:32,120
 of our design kind of a procedure, right?

1780
01:57:32,120 --> 01:57:34,160
 So let's look at them one by one, right?

1781
01:57:34,160 --> 01:57:36,400
 The first one is the pass band.

1782
01:57:36,400 --> 01:57:41,400
 So the pass band is defined between zero and omega t, right?

1783
01:57:41,400 --> 01:57:43,720
 So this is actually the pass band range.

1784
01:57:44,520 --> 01:57:45,360
 All right?

1785
01:57:45,360 --> 01:57:46,520
 Remember, this is the low pass filter.

1786
01:57:46,520 --> 01:57:48,880
 So the low pass filter will always be pass band

1787
01:57:48,880 --> 01:57:51,100
 centered as zero, all right?

1788
01:57:51,100 --> 01:57:56,100
 So this omega p will define how large is the pass band.

1789
01:57:56,440 --> 01:57:58,320
 So basically within the range,

1790
01:57:58,320 --> 01:58:00,160
 it's going to be the pass band.

1791
01:58:00,160 --> 01:58:04,599
 And the magnitude of the response will be not exactly one,

1792
01:58:04,599 --> 01:58:07,240
 but approximately equal to one.

1793
01:58:07,240 --> 01:58:11,840
 Raise the arrow plus or minus this small sigma p, right?

1794
01:58:11,840 --> 01:58:15,880
 And basically your pass band magnitude response

1795
01:58:15,880 --> 01:58:19,139
 will be bounded by this range.

1796
01:58:19,139 --> 01:58:20,559
 So we want to make sure this bound

1797
01:58:20,559 --> 01:58:22,480
 is actually as small as possible, right?

1798
01:58:22,480 --> 01:58:25,880
 So this is actually the first kind of non-idealness

1799
01:58:25,880 --> 01:58:27,240
 we're talking about.

1800
01:58:27,240 --> 01:58:29,280
 The second one is so-called the pass band,

1801
01:58:29,280 --> 01:58:30,559
 sorry, the stop band.

1802
01:58:30,559 --> 01:58:34,040
 The stop band is defined between the omega s and the pi.

1803
01:58:34,040 --> 01:58:37,599
 Remember, we normally only look at the zero to pi

1804
01:58:37,599 --> 01:58:40,679
 because first, right, this is actually digital filter.

1805
01:58:40,679 --> 01:58:43,639
 So the period is always two pi, right?

1806
01:58:43,639 --> 01:58:46,280
 And we're talking about the symmetric kind of response.

1807
01:58:46,280 --> 01:58:51,280
 So the negative half will be the same as the positive half.

1808
01:58:52,440 --> 01:58:54,639
 So we only look at zero to pi, right?

1809
01:58:54,640 --> 01:58:56,840
 So the stop band will be completely determined

1810
01:58:56,840 --> 01:58:58,360
 by this range.

1811
01:58:58,360 --> 01:59:00,520
 And again, there will be some repo

1812
01:59:00,520 --> 01:59:04,680
 and the stop band will not exactly equal to zero,

1813
01:59:04,680 --> 01:59:06,840
 but approximately zero.

1814
01:59:06,840 --> 01:59:08,940
 And everywhere will also be bounded

1815
01:59:08,940 --> 01:59:11,640
 by the so-called the peak repo in the stop band.

1816
01:59:11,640 --> 01:59:15,160
 So basically for any practical design,

1817
01:59:15,160 --> 01:59:18,340
 you will need these four parameters

1818
01:59:18,340 --> 01:59:22,160
 to specify how ideal or how practical

1819
01:59:22,160 --> 01:59:23,960
 your design filter is.

1820
01:59:25,640 --> 01:59:27,600
 So you will keep seeing these four parameters

1821
01:59:27,600 --> 01:59:30,240
 in the filter design kind of questions.

1822
01:59:30,240 --> 01:59:33,120
 But you need to know what are the four parameters here, right?

1823
01:59:33,120 --> 01:59:37,720
 So omega p specify the end of the pass band.

1824
01:59:37,720 --> 01:59:40,460
 Omega s is the start of the stop band.

1825
01:59:40,460 --> 01:59:43,560
 All of these are H frequency called, all right?

1826
01:59:43,560 --> 01:59:47,960
 Repo are two, p is for the peak repo,

1827
01:59:47,960 --> 01:59:50,000
 s is for the stop band repo.

1828
01:59:50,000 --> 01:59:51,960
 Sorry, it's a piece for the pass band repo, right?

1829
01:59:51,960 --> 01:59:56,100
 So all of these two are the quantity of the variance

1830
01:59:56,100 --> 01:59:59,240
 in the stop band and the pass band correspondingly.

1831
01:59:59,240 --> 02:00:00,080
 All right?

1832
02:00:00,080 --> 02:00:00,980
 And of course, the transition band

1833
02:00:00,980 --> 02:00:03,080
 will be the difference between the two H frequency, right?

1834
02:00:03,080 --> 02:00:06,400
 That will also be something you want to minimize.

1835
02:00:06,400 --> 02:00:07,240
 All right?

1836
02:00:07,240 --> 02:00:10,320
 So this is the filter specification, okay?

1837
02:00:10,320 --> 02:00:14,640
 So, you know, in practice,

1838
02:00:14,640 --> 02:00:16,840
 where we're going to have, like I just explained, right?

1839
02:00:16,840 --> 02:00:20,560
 In practice, your so-called DTFT response

1840
02:00:20,560 --> 02:00:22,800
 will always be a periodic function.

1841
02:00:22,800 --> 02:00:25,560
 And ideally, right,

1842
02:00:25,560 --> 02:00:27,840
 we're talking about a real coefficient filter.

1843
02:00:27,840 --> 02:00:30,800
 So in other words, we're talking about the filter

1844
02:00:30,800 --> 02:00:32,080
 are originally real.

1845
02:00:32,080 --> 02:00:35,600
 So after DTFT, you're going to have an even function

1846
02:00:35,600 --> 02:00:36,800
 of the omega.

1847
02:00:36,800 --> 02:00:39,880
 Remember, you do a DTFT of the real function.

1848
02:00:39,880 --> 02:00:43,280
 You're going to have the even symmetric kind of functions,

1849
02:00:43,280 --> 02:00:44,120
 right?

1850
02:00:44,120 --> 02:00:46,720
 In other words, you know, every point here

1851
02:00:46,720 --> 02:00:51,640
 will be the same as two pi minus the magnitude, right?

1852
02:00:51,640 --> 02:00:52,480
 Okay?

1853
02:00:52,480 --> 02:00:54,120
 In this case, that's why normally,

1854
02:00:54,120 --> 02:00:55,720
 even though we know that function is actually

1855
02:00:55,720 --> 02:01:00,220
 two pi periodic, we only look at the range of zero to two pi

1856
02:01:00,220 --> 02:01:03,320
 because pi to two pi will be exactly the reflect

1857
02:01:03,320 --> 02:01:06,040
 of the first kind of a first half, right?

1858
02:01:06,040 --> 02:01:07,720
 So no point to analyze that, right?

1859
02:01:07,720 --> 02:01:10,680
 So that's why every time when you look at the frequency

1860
02:01:10,680 --> 02:01:13,080
 response of a real coefficient filter,

1861
02:01:13,080 --> 02:01:15,200
 they only show you zero to pi

1862
02:01:15,200 --> 02:01:19,720
 because all the information is contained there, all right?

1863
02:01:19,720 --> 02:01:23,679
 So that's why you see that all of the specifications

1864
02:01:23,679 --> 02:01:27,519
 are within the zero to pi range.

1865
02:01:27,519 --> 02:01:29,280
 But let's be clear.

1866
02:01:29,280 --> 02:01:32,960
 This only applied to real coefficient filter.

1867
02:01:32,960 --> 02:01:36,120
 And for this course, it will only be real coefficient.

1868
02:01:36,120 --> 02:01:37,760
 But for a complex coefficient filter,

1869
02:01:37,760 --> 02:01:42,120
 which may happen sometime, you do need a zero to two pi range

1870
02:01:42,120 --> 02:01:44,320
 because it's not even symmetric, all right?

1871
02:01:45,400 --> 02:01:46,240
 Okay?

1872
02:01:48,080 --> 02:01:52,280
 All right, so the specification,

1873
02:01:52,280 --> 02:01:53,840
 just now we're talking about,

1874
02:01:53,840 --> 02:01:57,840
 it's usually given in the term of the loss function.

1875
02:01:57,840 --> 02:01:59,960
 In other words, when you design that,

1876
02:01:59,960 --> 02:02:02,519
 you need to make sure this loss function

1877
02:02:02,519 --> 02:02:04,360
 is somehow minimized, right?

1878
02:02:04,360 --> 02:02:06,840
 And usually the loss function is represented

1879
02:02:06,840 --> 02:02:08,679
 in the dB term, right?

1880
02:02:08,679 --> 02:02:10,280
 The decibel term.

1881
02:02:10,280 --> 02:02:11,120
 What is decibel?

1882
02:02:11,120 --> 02:02:13,480
 You take the log function of it

1883
02:02:13,480 --> 02:02:15,559
 and then you do minus two, 20, right?

1884
02:02:15,559 --> 02:02:17,040
 That one will give you the dB scale

1885
02:02:17,040 --> 02:02:18,599
 rather than the linear scale.

1886
02:02:18,599 --> 02:02:21,559
 It just changes of scale, right?

1887
02:02:21,559 --> 02:02:25,080
 But that's the usual way people quantify, for example,

1888
02:02:25,080 --> 02:02:28,959
 the amount of repose, amount of energy loss, right?

1889
02:02:28,959 --> 02:02:31,280
 So in this case, usually, for example,

1890
02:02:31,280 --> 02:02:34,839
 the peak passband repo will be represented

1891
02:02:34,839 --> 02:02:37,000
 in the form of dB, right?

1892
02:02:37,000 --> 02:02:39,360
 And also the minimum stop attenuation

1893
02:02:39,360 --> 02:02:42,879
 will also be represented in terms of dB, right?

1894
02:02:42,880 --> 02:02:45,920
 So next time if you see the dB as the unit,

1895
02:02:45,920 --> 02:02:47,960
 you should know what it really means.

1896
02:02:47,960 --> 02:02:49,960
 It kind of converts the linear scale

1897
02:02:49,960 --> 02:02:54,640
 into minus 20 times log scale, all right?

1898
02:02:54,640 --> 02:02:58,120
 So the magnitude to specification

1899
02:02:58,120 --> 02:03:01,480
 may be alternatively, sometimes giving you

1900
02:03:01,480 --> 02:03:04,960
 a normalized form or if it's normalized, right?

1901
02:03:04,960 --> 02:03:08,360
 The passband will always be one in this case, right?

1902
02:03:08,360 --> 02:03:11,000
 But if it's not normalized, the passband may not be one.

1903
02:03:11,000 --> 02:03:12,680
 It can be something larger, right?

1904
02:03:12,680 --> 02:03:15,800
 But very likely, if they give you a normalized form,

1905
02:03:15,800 --> 02:03:19,440
 you can always assume that the passband is centered at one,

1906
02:03:19,440 --> 02:03:20,480
 all right?

1907
02:03:20,480 --> 02:03:26,600
 So this is normalized kind of a magnitude response, OK?

1908
02:03:26,600 --> 02:03:31,360
 Some of the other things you need to be careful are,

1909
02:03:31,360 --> 02:03:35,160
 for example, the magnitude, the maximum value of the magnitude

1910
02:03:35,160 --> 02:03:37,360
 in the passband is assigned to be unity, right?

1911
02:03:37,360 --> 02:03:41,560
 In other words, if this is one, if you take the log of one,

1912
02:03:41,560 --> 02:03:43,200
 you always get a zero, right?

1913
02:03:43,200 --> 02:03:47,600
 So in other words, kind of a passband is actually

1914
02:03:47,600 --> 02:03:49,480
 starting from zero dB.

1915
02:03:49,480 --> 02:03:52,600
 That's actually where you only have one response, right?

1916
02:03:52,600 --> 02:03:55,360
 This is actually why people use dB,

1917
02:03:55,360 --> 02:03:57,840
 because dB will always put one into zero,

1918
02:03:57,840 --> 02:04:00,120
 means no game and no loss, right?

1919
02:04:00,120 --> 02:04:02,200
 This is really the case.

1920
02:04:02,200 --> 02:04:08,800
 And also, one over square root of one plus epsilon square

1921
02:04:08,800 --> 02:04:11,040
 is actually the maximum passband deviation given

1922
02:04:11,040 --> 02:04:14,000
 by the minimum value of the magnitude in the passband, right?

1923
02:04:14,000 --> 02:04:16,720
 So I won't repeat this, but basically these

1924
02:04:16,720 --> 02:04:22,080
 are some of the specifications that say that sometimes they

1925
02:04:22,080 --> 02:04:26,800
 will represent, for example, a tenuation gain in terms of dB.

1926
02:04:26,800 --> 02:04:29,560
 So you need to be able to tell the difference between two,

1927
02:04:29,560 --> 02:04:30,060
 right?

1928
02:04:30,060 --> 02:04:33,240
 How to convert from linear square, linear scale to the dB scale.

1929
02:04:33,240 --> 02:04:35,560
 It's just like a conversion.

1930
02:04:35,560 --> 02:04:38,000
 It shouldn't be too kind of specific, right?

1931
02:04:38,440 --> 02:04:43,880
 What else are we talking about here?

1932
02:04:43,880 --> 02:04:48,720
 So normalized band age frequency are needed to compute it.

1933
02:04:48,720 --> 02:04:50,800
 OK, same thing.

1934
02:04:50,800 --> 02:04:53,320
 The frequency also need to compute it

1935
02:04:53,320 --> 02:04:55,200
 from a specification in the hertz, right?

1936
02:04:55,200 --> 02:04:58,680
 So we talk about that when you represent the frequency,

1937
02:04:58,680 --> 02:05:02,280
 you can represent it in terms of radians, or maybe the hertz.

1938
02:05:02,280 --> 02:05:06,280
 How to convert the two, you should do 2 pi f, right?

1939
02:05:06,280 --> 02:05:08,360
 That's how you can convert the two.

1940
02:05:08,360 --> 02:05:13,800
 But if they are talking about the frequency in terms of hertz,

1941
02:05:13,800 --> 02:05:18,800
 and you must do 2 pi f to convert between hertz

1942
02:05:18,800 --> 02:05:19,960
 and also the radians, right?

1943
02:05:19,960 --> 02:05:24,880
 That's how you can unify the, how should I say, the units,

1944
02:05:24,880 --> 02:05:27,480
 right?

1945
02:05:27,480 --> 02:05:28,639
 So this is one example.

1946
02:05:28,639 --> 02:05:31,040
 If you are given, for example, the stopband color frequency

1947
02:05:31,040 --> 02:05:35,920
 at 7 kHz, passband at 3.

1948
02:05:35,920 --> 02:05:38,960
 So you can convert into the radius kind of units

1949
02:05:38,960 --> 02:05:43,000
 by simply times 2 pi with it, and divided

1950
02:05:43,000 --> 02:05:46,760
 by the kind of a sampling frequency, which is actually

1951
02:05:46,760 --> 02:05:48,200
 25 Hz, right?

1952
02:05:48,200 --> 02:05:52,000
 So this is something we presented using the omega

1953
02:05:52,000 --> 02:05:53,240
 rather than the hertz, right?

1954
02:05:53,240 --> 02:05:54,920
 So there's some kind of a unit conversion.

1955
02:05:54,920 --> 02:05:59,840
 You must be careful about it, right?

1956
02:05:59,840 --> 02:06:01,280
 So what else do I have?

1957
02:06:01,280 --> 02:06:08,000
 Sorry, I just want to see how many slides I have.

1958
02:06:08,000 --> 02:06:11,240
 I'm reaching, OK, almost here, almost here.

1959
02:06:11,240 --> 02:06:13,840
 This is the last slide I have, OK.

1960
02:06:13,840 --> 02:06:17,320
 Because I still have some slides about the frequency, sorry,

1961
02:06:17,320 --> 02:06:18,400
 about the windowing method.

1962
02:06:18,400 --> 02:06:20,200
 All right, I think I can finish overnight.

1963
02:06:20,200 --> 02:06:21,360
 That's great.

1964
02:06:21,360 --> 02:06:27,240
 OK, so like I mentioned, we're talking about FIR in this course.

1965
02:06:27,240 --> 02:06:30,200
 So very likely the starting point of the design

1966
02:06:30,200 --> 02:06:33,160
 will be the transfer function, which we just talked about.

1967
02:06:33,160 --> 02:06:35,200
 And the transfer function can be represented

1968
02:06:35,200 --> 02:06:38,080
 as a polynomial in the Z-transform domain.

1969
02:06:38,080 --> 02:06:44,200
 And usually, we have to make sure that this n is as small

1970
02:06:44,200 --> 02:06:45,599
 as possible, right?

1971
02:06:45,599 --> 02:06:48,639
 So in other words, we will not handle a very high order

1972
02:06:48,639 --> 02:06:50,760
 polynomial in most of the cases.

1973
02:06:50,760 --> 02:06:53,360
 Another thing I really explained is that the linear phase

1974
02:06:53,360 --> 02:06:55,000
 is always desired.

1975
02:06:55,000 --> 02:06:56,840
 So in other words, most likely when

1976
02:06:56,840 --> 02:06:58,679
 we talk about the field design, we

1977
02:06:58,680 --> 02:07:01,080
 will use linear phase filter.

1978
02:07:01,080 --> 02:07:04,480
 So very likely you will apply the symmetry property

1979
02:07:04,480 --> 02:07:08,000
 or anti-symmetric property to really reduce

1980
02:07:08,000 --> 02:07:10,360
 the coefficients by almost half, right?

1981
02:07:10,360 --> 02:07:13,160
 This is some of the common scenarios

1982
02:07:13,160 --> 02:07:15,280
 you can foresee in the field design.

1983
02:07:15,280 --> 02:07:19,280
 So like I mentioned, we are focused on FIR,

1984
02:07:19,280 --> 02:07:21,200
 but you need to know the advantages

1985
02:07:21,200 --> 02:07:23,760
 and these advantages of FIR, right?

1986
02:07:23,760 --> 02:07:25,800
 Apparently, the advantages that FIR

1987
02:07:25,800 --> 02:07:28,800
 will give you simpler kind of design.

1988
02:07:28,800 --> 02:07:32,320
 And you can easily design for linear phase, which we just

1989
02:07:32,320 --> 02:07:33,520
 talked about, right?

1990
02:07:33,520 --> 02:07:36,080
 Two properties, symmetric, anti-symmetric.

1991
02:07:36,080 --> 02:07:40,560
 And always, because FIR, you will always

1992
02:07:40,560 --> 02:07:43,440
 get a constant denominator.

1993
02:07:43,440 --> 02:07:46,760
 So FIR will always be stable.

1994
02:07:46,760 --> 02:07:47,560
 Makes sense?

1995
02:07:47,560 --> 02:07:49,280
 Because just how we say that the way you determine

1996
02:07:49,280 --> 02:07:52,360
 is stable or not is by looking at the poles, right?

1997
02:07:52,360 --> 02:07:55,480
 The poles are the roots for the denominator.

1998
02:07:55,480 --> 02:07:58,639
 FIR will have denominator always equal to 1.

1999
02:07:58,639 --> 02:08:00,959
 So in other ways, you got no poles.

2000
02:08:00,959 --> 02:08:04,000
 So in other words, you will not have any pole

2001
02:08:04,000 --> 02:08:05,839
 outside the unit circle.

2002
02:08:05,839 --> 02:08:11,679
 So FIR is always a stable filter, right?

2003
02:08:11,679 --> 02:08:13,879
 So this is another properties that you don't have to check.

2004
02:08:13,879 --> 02:08:15,360
 It's always stable.

2005
02:08:15,360 --> 02:08:18,639
 But of course, FIR will also have something not perfect.

2006
02:08:18,639 --> 02:08:20,719
 Otherwise, nobody care about IR, right?

2007
02:08:20,719 --> 02:08:23,400
 So the first thing is that if you

2008
02:08:23,400 --> 02:08:27,240
 want to design some specific kind of filter,

2009
02:08:27,240 --> 02:08:30,639
 comparing to IR, if you stick to FIR,

2010
02:08:30,639 --> 02:08:34,080
 usually the cause is that you have to go for higher order,

2011
02:08:34,080 --> 02:08:34,440
 right?

2012
02:08:34,440 --> 02:08:36,719
 So you have, equivalently, comparing

2013
02:08:36,719 --> 02:08:40,080
 FIR and IR to achieve something similar.

2014
02:08:40,080 --> 02:08:42,920
 FIR normally force you to go to higher order,

2015
02:08:42,920 --> 02:08:47,799
 whereas IR can sometimes afford a smaller order, right?

2016
02:08:47,799 --> 02:08:51,240
 So that is actually the reason that FIR is usually,

2017
02:08:51,240 --> 02:08:54,639
 to do the similar performance.

2018
02:08:54,639 --> 02:08:57,519
 And as IR, it's going to give you a higher

2019
02:08:57,519 --> 02:08:59,400
 computational complexity.

2020
02:08:59,400 --> 02:08:59,760
 Why?

2021
02:08:59,760 --> 02:09:02,960
 Because higher order means more number of multiplier,

2022
02:09:02,960 --> 02:09:06,800
 more number of addition, and more number of time delay.

2023
02:09:06,800 --> 02:09:11,240
 So that's something you have to pay for the ease of the design.

2024
02:09:11,240 --> 02:09:13,559
 This is actually the trade-off between the two.

2025
02:09:13,559 --> 02:09:14,080
 OK.

2026
02:09:14,080 --> 02:09:17,760
 So I think here I lay some kind of foundation

2027
02:09:17,760 --> 02:09:18,840
 for filter design.

2028
02:09:18,840 --> 02:09:20,160
 We talk about the specification.

2029
02:09:20,160 --> 02:09:26,400
 We talk about how to interpret the design from the FIR

2030
02:09:26,400 --> 02:09:27,360
 perspective.

2031
02:09:27,360 --> 02:09:30,000
 So today we're going to look at the one specific method

2032
02:09:30,000 --> 02:09:34,080
 for designing a kind of a practical filter, right?

2033
02:09:34,080 --> 02:09:36,720
 Which is pretty much the easiest possible method I can think

2034
02:09:36,720 --> 02:09:37,519
 about.

2035
02:09:37,519 --> 02:09:38,599
 It's the windowing method.

2036
02:09:38,599 --> 02:09:41,680
 I'm not going to complete today, but next week we're

2037
02:09:41,680 --> 02:09:42,920
 going to continue, right?

2038
02:09:42,920 --> 02:09:47,400
 But first, what is this kind of design

2039
02:09:47,400 --> 02:09:51,160
 for kind of FIR, right?

2040
02:09:51,160 --> 02:09:59,920
 So FIR, usually we need to develop a direct approximation

2041
02:09:59,920 --> 02:10:02,320
 of the specific magnitude of response.

2042
02:10:02,320 --> 02:10:05,960
 In other words, if I give you a, let's say, ideal low-pass

2043
02:10:05,960 --> 02:10:10,360
 filter, I want to use my FIR to approximate that.

2044
02:10:10,360 --> 02:10:15,160
 And also I wish to have this additional linear phase property.

2045
02:10:15,160 --> 02:10:21,280
 But FIR will only have up to n order of the polynomial, right?

2046
02:10:21,280 --> 02:10:25,559
 So in other words, I will have a limited amount of response

2047
02:10:25,559 --> 02:10:30,360
 functions in the entire kind of domain, right?

2048
02:10:30,360 --> 02:10:33,800
 But the ideal filter will not be that, right?

2049
02:10:33,800 --> 02:10:34,840
 We talk about this.

2050
02:10:34,840 --> 02:10:36,200
 If you have ideal low-pass filter,

2051
02:10:36,200 --> 02:10:38,200
 you're going to end up with a zinc function.

2052
02:10:38,200 --> 02:10:40,720
 And the zinc function will have infinitely many impulse

2053
02:10:40,720 --> 02:10:41,840
 response.

2054
02:10:41,840 --> 02:10:47,000
 So in this case, you will not have the exact ideal kind of

2055
02:10:47,000 --> 02:10:49,640
 a low-pass filter by using FIR.

2056
02:10:49,640 --> 02:10:52,560
 So that's actually why we have to do something

2057
02:10:52,560 --> 02:10:55,360
 onto the original low-pass filter to enable

2058
02:10:55,360 --> 02:10:58,360
 an FIR to approximate that, right?

2059
02:10:58,360 --> 02:11:00,600
 So the commonly used approach are many.

2060
02:11:00,600 --> 02:11:02,360
 I mean, there are many ways you can do it.

2061
02:11:02,360 --> 02:11:03,400
 There's a windowing method.

2062
02:11:03,400 --> 02:11:05,480
 There's frequency sampling approach.

2063
02:11:05,480 --> 02:11:08,120
 There's also like your computer-aided or computer-based

2064
02:11:08,120 --> 02:11:09,000
 optimization method.

2065
02:11:09,000 --> 02:11:11,440
 So we're going to look at the windowing method only

2066
02:11:11,440 --> 02:11:13,759
 for this course, all right?

2067
02:11:13,759 --> 02:11:17,320
 But you should be aware that there are other methods, which

2068
02:11:17,320 --> 02:11:19,879
 I'm going to give you some slides, but I'm not going to

2069
02:11:19,879 --> 02:11:21,360
 test on the other method.

2070
02:11:21,360 --> 02:11:23,879
 Windowing method is the only method.

2071
02:11:23,879 --> 02:11:27,480
 I may ask you in the exam, but you must be aware that this

2072
02:11:27,480 --> 02:11:31,480
 is not the only method to design a FIR filter.

2073
02:11:31,480 --> 02:11:35,320
 So now, OK, so I will provide some detail for the other,

2074
02:11:35,320 --> 02:11:37,599
 but they will be put separately as the slides.

2075
02:11:37,599 --> 02:11:38,559
 Won't be tested.

2076
02:11:38,559 --> 02:11:40,919
 So only here will be tested.

2077
02:11:41,600 --> 02:11:44,280
 So OK, what is windowing approach?

2078
02:11:44,280 --> 02:11:45,520
 It's actually very simple.

2079
02:11:45,520 --> 02:11:48,120
 We say that last time, we say that let's take this ideal

2080
02:11:48,120 --> 02:11:50,400
 low-pass filter as an example.

2081
02:11:50,400 --> 02:11:54,240
 Ideal filter means you have a very sharp transition from

2082
02:11:54,240 --> 02:11:57,000
 the stopband to the passband.

2083
02:11:57,000 --> 02:12:01,480
 And if you look at the corresponding time domain

2084
02:12:01,480 --> 02:12:05,200
 response, impulse response, you're going to have a zinc

2085
02:12:05,200 --> 02:12:06,400
 function.

2086
02:12:06,400 --> 02:12:09,160
 You can easily do an inverse.

2087
02:12:09,160 --> 02:12:09,960
 What is that?

2088
02:12:09,960 --> 02:12:16,120
 Inverse, maybe DTFT to get my time domain response.

2089
02:12:16,120 --> 02:12:19,400
 And this kind of function can tell that it's actually

2090
02:12:19,400 --> 02:12:21,120
 infinitely long.

2091
02:12:21,120 --> 02:12:24,400
 You have to have infinitely many response to

2092
02:12:24,400 --> 02:12:25,280
 approximate that.

2093
02:12:25,280 --> 02:12:29,400
 Apparently, this contradicts the FIR assumption.

2094
02:12:29,400 --> 02:12:33,880
 FIR means finite length, finite length kind of a

2095
02:12:33,880 --> 02:12:35,000
 response function.

2096
02:12:35,000 --> 02:12:37,320
 So in this case, you have to do something.

2097
02:12:37,320 --> 02:12:41,960
 And plus, this function is apparently non-causal.

2098
02:12:41,960 --> 02:12:44,840
 Because you have some value in the future.

2099
02:12:44,840 --> 02:12:48,480
 You cannot have that because you cannot relate your output to

2100
02:12:48,480 --> 02:12:49,719
 a future input.

2101
02:12:49,719 --> 02:12:53,519
 So this is another issue making them non-realistic.

2102
02:12:53,519 --> 02:12:59,200
 So our objective becomes to find a finite duration kind of

2103
02:12:59,200 --> 02:13:01,519
 an impulse response.

2104
02:13:01,519 --> 02:13:03,559
 Let's say we have nth order.

2105
02:13:03,559 --> 02:13:07,200
 In other words, your impulse response can have at most

2106
02:13:07,200 --> 02:13:10,400
 n plus 1 kind of length.

2107
02:13:10,400 --> 02:13:16,360
 Whereas these guys, DTFT or these guys, Spectrum, must be

2108
02:13:16,360 --> 02:13:21,760
 good enough to approximate the ideal case.

2109
02:13:21,760 --> 02:13:22,880
 OK, let me just repeat.

2110
02:13:22,880 --> 02:13:26,240
 So we started by having this ideal filter.

2111
02:13:26,240 --> 02:13:27,960
 This is the ideal filter.

2112
02:13:27,960 --> 02:13:29,320
 Maybe I used the pointer.

2113
02:13:29,320 --> 02:13:31,160
 This is my ideal filter, my ideal low pass filter.

2114
02:13:31,160 --> 02:13:34,400
 I want to approximate that as much as possible.

2115
02:13:34,400 --> 02:13:38,799
 But unfortunately, I can only use an FIR to do it.

2116
02:13:38,799 --> 02:13:43,280
 So now I want to find the best FIR such that the spectrum of

2117
02:13:43,280 --> 02:13:50,360
 my FIR become as close as possible to my objective.

2118
02:13:50,360 --> 02:13:53,599
 So this is the objective of the design.

2119
02:13:53,599 --> 02:13:55,759
 Let's think about what we're trying to achieve first.

2120
02:13:55,759 --> 02:13:57,799
 This is what we're trying to achieve.

2121
02:13:57,799 --> 02:14:01,120
 OK, now this is just some rough description.

2122
02:14:01,120 --> 02:14:03,639
 But how can I quantify it?

2123
02:14:03,640 --> 02:14:06,400
 When I say I make them approximate the same, I

2124
02:14:06,400 --> 02:14:09,000
 have to quantify the difference.

2125
02:14:09,000 --> 02:14:10,560
 In other words, I want to minimize the error.

2126
02:14:10,560 --> 02:14:12,840
 So how to quantify the error?

2127
02:14:12,840 --> 02:14:17,080
 In fact, you can easily quantify the error in the

2128
02:14:17,080 --> 02:14:19,960
 frequency or time domain.

2129
02:14:19,960 --> 02:14:21,280
 You only need to do a difference.

2130
02:14:21,280 --> 02:14:24,680
 You do subtraction between the ideal version and your

2131
02:14:24,680 --> 02:14:25,560
 design version.

2132
02:14:25,560 --> 02:14:27,080
 You do the subtraction.

2133
02:14:27,080 --> 02:14:28,160
 You look at energy.

2134
02:14:28,160 --> 02:14:29,920
 That's going to give you the error.

2135
02:14:29,920 --> 02:14:33,600
 You just need to minimize the energy of the difference.

2136
02:14:34,280 --> 02:14:36,760
 This is actually the objective we're trying to do.

2137
02:14:36,760 --> 02:14:37,800
 So it's going to be very simple.

2138
02:14:37,800 --> 02:14:46,520
 Let's say that the HD is the design spectrum.

2139
02:14:46,520 --> 02:14:52,280
 HT stands for, let's say, the ideal spectrum.

2140
02:14:52,280 --> 02:14:53,040
 Oh, sorry.

2141
02:14:53,040 --> 02:14:55,120
 HT is the design.

2142
02:14:55,120 --> 02:14:58,720
 Let's call this HT is the practical FIR.

2143
02:14:58,720 --> 02:15:00,080
 Spectrum of the FIR.

2144
02:15:00,080 --> 02:15:03,720
 HT is the objective spectrum.

2145
02:15:03,720 --> 02:15:06,000
 In other words, HT is this guy.

2146
02:15:06,000 --> 02:15:07,680
 HT is this guy.

2147
02:15:07,680 --> 02:15:13,160
 And HT is the DTFT of our FIR.

2148
02:15:13,160 --> 02:15:16,320
 So the error we're trying to minimize is nothing but the

2149
02:15:16,320 --> 02:15:20,960
 difference of the two integrated over the entire

2150
02:15:20,960 --> 02:15:23,880
 2 pi range.

2151
02:15:23,880 --> 02:15:26,280
 Because if they are the same, you've got zero.

2152
02:15:26,280 --> 02:15:29,559
 If they are not the same, the smaller the better.

2153
02:15:29,560 --> 02:15:31,240
 The larger the worse.

2154
02:15:31,240 --> 02:15:34,200
 This is how you can quantify the difference.

2155
02:15:34,200 --> 02:15:38,800
 And we see that, well, our design FIR will have finite

2156
02:15:38,800 --> 02:15:39,800
 term.

2157
02:15:39,800 --> 02:15:43,080
 In other words, I only consider the term, let's say, up to

2158
02:15:43,080 --> 02:15:46,560
 n, m equal to n divided by 2.

2159
02:15:46,560 --> 02:15:50,160
 So I can use my Possible theory.

2160
02:15:50,160 --> 02:15:52,280
 I don't know how many of you know the Possible theory.

2161
02:15:52,280 --> 02:15:54,800
 It means the energy difference in the time domain can be

2162
02:15:54,800 --> 02:15:58,320
 related to the energy difference in the frequency domain.

2163
02:15:58,320 --> 02:16:02,000
 So what I want to minimize, which is the integral square

2164
02:16:02,000 --> 02:16:05,880
 error, can be represented as the difference in the time

2165
02:16:05,880 --> 02:16:08,120
 domain.

2166
02:16:08,120 --> 02:16:10,920
 So I really want to approximate that in the frequency

2167
02:16:10,920 --> 02:16:11,320
 domain.

2168
02:16:11,320 --> 02:16:15,639
 But Possible theory give me the equivalent expression that

2169
02:16:15,639 --> 02:16:19,360
 the difference of the two, same pair, in the time domain is

2170
02:16:19,360 --> 02:16:23,960
 also equal to the error, mean square error.

2171
02:16:23,960 --> 02:16:28,880
 So I can actually look at the impulse response of my

2172
02:16:28,880 --> 02:16:34,400
 objective ideal filter and my FIR, take the difference and

2173
02:16:34,400 --> 02:16:36,840
 sum them up in the square way.

2174
02:16:36,840 --> 02:16:38,440
 And this is something I want to minimize.

2175
02:16:42,959 --> 02:16:44,040
 Make sense?

2176
02:16:44,040 --> 02:16:46,200
 OK, so first of all, anyone doesn't know what is

2177
02:16:46,200 --> 02:16:48,920
 Possible theory?

2178
02:16:48,920 --> 02:16:49,520
 Have you learned this?

2179
02:16:49,520 --> 02:16:52,840
 I mean, it's just something covering your basic signal

2180
02:16:52,840 --> 02:16:53,639
 processing.

2181
02:16:53,639 --> 02:16:57,599
 So the Possible theory says that, let's say two filters,

2182
02:16:57,599 --> 02:17:00,799
 or maybe two signal even, you take the difference and

2183
02:17:00,799 --> 02:17:03,240
 consider energy in the spectrum.

2184
02:17:03,240 --> 02:17:05,920
 It's going to be equal as you take the difference and the

2185
02:17:05,920 --> 02:17:07,879
 energy in the time domain.

2186
02:17:07,879 --> 02:17:11,799
 Because these two are related by some orthogonal transform,

2187
02:17:11,799 --> 02:17:14,840
 like DTFT, or maybe like a CTFT.

2188
02:17:14,840 --> 02:17:19,000
 So the transform preserves the norm such that the energy

2189
02:17:19,000 --> 02:17:21,840
 difference in the spectrum will be the same as the energy

2190
02:17:21,840 --> 02:17:23,080
 difference in the time domain.

2191
02:17:26,240 --> 02:17:27,320
 So why I'm doing this?

2192
02:17:27,320 --> 02:17:31,960
 Because if I'm relating the difference in the time domain,

2193
02:17:31,960 --> 02:17:34,920
 I can separate the error here.

2194
02:17:34,920 --> 02:17:37,440
 Because in front, there's a summation, all the way from

2195
02:17:37,440 --> 02:17:38,680
 minus infinity to infinity.

2196
02:17:38,680 --> 02:17:43,240
 I can separate the summation into the difference within

2197
02:17:43,240 --> 02:17:44,920
 what I have.

2198
02:17:44,920 --> 02:17:49,639
 Because my FIR will be resized in this n range.

2199
02:17:49,639 --> 02:17:53,279
 I can say, well, I consider the difference within the minus

2200
02:17:53,279 --> 02:17:54,760
 m to m range.

2201
02:17:54,760 --> 02:17:58,639
 And those outside the range, I separate the error into two

2202
02:17:58,639 --> 02:18:00,320
 parts.

2203
02:18:00,320 --> 02:18:00,719
 Why?

2204
02:18:00,719 --> 02:18:04,599
 Because what I have in FIR, the only thing I can

2205
02:18:04,599 --> 02:18:08,879
 manipulate is the one within the range.

2206
02:18:08,879 --> 02:18:12,320
 Because FIR will have finite number of response only

2207
02:18:12,320 --> 02:18:13,920
 within the range.

2208
02:18:13,920 --> 02:18:16,799
 Within the range, I can design whatever I like.

2209
02:18:16,799 --> 02:18:19,679
 I can adjust my impulse response, whatever I like.

2210
02:18:19,679 --> 02:18:25,639
 But only within the finite amount of the response.

2211
02:18:25,639 --> 02:18:27,559
 Beyond that, nothing I can do.

2212
02:18:27,559 --> 02:18:29,959
 I have to leave them zero.

2213
02:18:29,959 --> 02:18:33,959
 So this part of error is something I cannot avoid.

2214
02:18:33,959 --> 02:18:35,000
 They are always there.

2215
02:18:35,000 --> 02:18:38,840
 It depends on the original signal, the target signal.

2216
02:18:38,840 --> 02:18:45,320
 But what I can try to do here is to make this one minimized.

2217
02:18:45,320 --> 02:18:46,080
 Ideally, zero.

2218
02:18:46,080 --> 02:18:50,039
 But if not zero, minimize.

2219
02:18:50,039 --> 02:18:53,840
 So if I follow this kind of principle, the best way I can

2220
02:18:53,840 --> 02:18:57,959
 do is say, hey, within this range, I make my design to be

2221
02:18:57,959 --> 02:19:00,719
 exactly same as the objective.

2222
02:19:03,639 --> 02:19:04,039
 Make sense?

2223
02:19:04,039 --> 02:19:05,520
 So I have a target.

2224
02:19:05,520 --> 02:19:06,520
 I have a target.

2225
02:19:06,520 --> 02:19:09,840
 For example, if this is my target function, original is a

2226
02:19:09,840 --> 02:19:11,199
 zinc function.

2227
02:19:11,199 --> 02:19:12,760
 It's finite infinity long.

2228
02:19:12,760 --> 02:19:17,200
 But I only have a finite length response function, impulse

2229
02:19:17,200 --> 02:19:17,960
 response.

2230
02:19:17,960 --> 02:19:22,040
 But the order of non-zeros is within the minus m to m.

2231
02:19:22,040 --> 02:19:25,840
 So what I can try to do is make sure those within this

2232
02:19:25,840 --> 02:19:30,440
 range are exactly the same as my objective.

2233
02:19:30,440 --> 02:19:33,240
 By doing so, the red term here will be killed.

2234
02:19:33,240 --> 02:19:35,680
 It's going to be zero.

2235
02:19:35,680 --> 02:19:36,040
 All right.

2236
02:19:36,040 --> 02:19:41,920
 But outside the range, those beyond minus m and plus m, I

2237
02:19:41,960 --> 02:19:42,719
 have nothing I can do.

2238
02:19:42,719 --> 02:19:44,760
 Just leave that.

2239
02:19:44,760 --> 02:19:49,280
 And those are the errors coming from the original desired

2240
02:19:49,280 --> 02:19:50,800
 objective.

2241
02:19:50,800 --> 02:19:52,720
 If they are large, I'm going to have a large error.

2242
02:19:52,720 --> 02:19:54,920
 If they are small, I'm going to have a small error.

2243
02:19:54,920 --> 02:19:59,280
 But whatever I do for my FIR, I cannot help for those

2244
02:19:59,280 --> 02:20:01,200
 outside the range.

2245
02:20:01,200 --> 02:20:03,960
 OK?

2246
02:20:03,960 --> 02:20:04,680
 Make sense?

2247
02:20:04,680 --> 02:20:10,080
 So by doing so, these indicate that the best approximation

2248
02:20:10,080 --> 02:20:15,240
 to the ideal response is to make sure that within here is

2249
02:20:15,240 --> 02:20:17,400
 exact match.

2250
02:20:17,400 --> 02:20:21,800
 In other words, how can I come up with FIR is nothing but

2251
02:20:21,800 --> 02:20:26,039
 taking the original waveform, the black line here.

2252
02:20:26,039 --> 02:20:28,000
 I think a truncation.

2253
02:20:28,000 --> 02:20:30,039
 I just truncated.

2254
02:20:30,039 --> 02:20:32,640
 Beyond m, I just make them zero.

2255
02:20:32,640 --> 02:20:35,560
 Within the m, I'm just keeping them the same.

2256
02:20:35,560 --> 02:20:36,080
 Right?

2257
02:20:36,080 --> 02:20:40,320
 So this is literally a truncation function I'm applying.

2258
02:20:40,320 --> 02:20:44,760
 So I'm doing a truncation function over the original, what

2259
02:20:44,760 --> 02:20:45,960
 is that, HD.

2260
02:20:45,960 --> 02:20:46,920
 Right?

2261
02:20:46,920 --> 02:20:51,840
 And after truncation, that's going to be my HT.

2262
02:20:51,840 --> 02:20:52,440
 OK?

2263
02:20:52,440 --> 02:20:54,960
 So this is why windowing method makes sense, because windowing

2264
02:20:54,960 --> 02:20:56,560
 method is nothing but truncation.

2265
02:20:56,560 --> 02:20:57,280
 Right?

2266
02:20:57,280 --> 02:20:58,880
 Windowing literally means truncation.

2267
02:20:58,880 --> 02:20:59,880
 You have a window.

2268
02:20:59,880 --> 02:21:01,480
 You keep whatever within the window.

2269
02:21:01,480 --> 02:21:02,880
 Outside the window, you don't care.

2270
02:21:02,880 --> 02:21:03,640
 Right?

2271
02:21:03,640 --> 02:21:05,360
 So this is what the windowing method means.

2272
02:21:05,360 --> 02:21:09,120
 So then mathematically, I'm just trying to give you some

2273
02:21:09,120 --> 02:21:12,120
 intuition why the windowing method makes sense.

2274
02:21:12,120 --> 02:21:14,840
 So you want to make sure all the coefficients within the

2275
02:21:14,840 --> 02:21:16,280
 window are the same.

2276
02:21:16,280 --> 02:21:17,960
 Outside the window, I have nothing to do.

2277
02:21:17,960 --> 02:21:18,880
 I just don't care.

2278
02:21:18,880 --> 02:21:19,440
 Right?

2279
02:21:19,440 --> 02:21:23,560
 So then exactly what the windowing method means is this.

2280
02:21:23,560 --> 02:21:27,520
 I will start with the ideal HD.

2281
02:21:27,520 --> 02:21:29,960
 So HD is the ideal filter.

2282
02:21:29,960 --> 02:21:32,120
 I take that into the time domain.

2283
02:21:32,120 --> 02:21:35,400
 I do the IDTFT into the time domain.

2284
02:21:35,400 --> 02:21:38,800
 Then starting from there, I'm imposing a windowing function.

2285
02:21:38,800 --> 02:21:42,320
 So this windowing function will be finite length, just like

2286
02:21:42,320 --> 02:21:42,760
 FIR.

2287
02:21:42,760 --> 02:21:44,160
 It's going to be finite length.

2288
02:21:44,160 --> 02:21:47,560
 Let's say this guy has m minus 1 length.

2289
02:21:47,560 --> 02:21:52,320
 So I'm going to have this function only non-zero within

2290
02:21:52,320 --> 02:21:56,280
 n equal to 0, all the way to n equal to m minus 1.

2291
02:21:56,280 --> 02:21:57,760
 It's called a windowing function.

2292
02:21:57,760 --> 02:21:57,920
 Right?

2293
02:21:57,920 --> 02:22:01,200
 Window function means non-zero within the window and 0

2294
02:22:01,200 --> 02:22:02,960
 elsewhere.

2295
02:22:02,960 --> 02:22:06,240
 So after having this windowing function, I'm going to

2296
02:22:06,240 --> 02:22:12,360
 multiply my original time domain response point by point

2297
02:22:12,360 --> 02:22:14,760
 with my windowing function.

2298
02:22:14,760 --> 02:22:16,040
 It's like you have two functions.

2299
02:22:16,040 --> 02:22:18,720
 Originally, for example, you have a zinc function like

2300
02:22:18,720 --> 02:22:19,760
 this.

2301
02:22:19,760 --> 02:22:21,880
 I multiply by a window.

2302
02:22:21,880 --> 02:22:24,520
 Within the window, I'm going to multiply the non-zero

2303
02:22:24,520 --> 02:22:25,400
 response.

2304
02:22:25,400 --> 02:22:28,960
 Outside the window, I'm just zero out the rest.

2305
02:22:28,960 --> 02:22:34,240
 So after that, this becomes my design, FIR.

2306
02:22:34,240 --> 02:22:39,400
 It's a windowed version of the original infinite long time

2307
02:22:39,400 --> 02:22:42,320
 domain response.

2308
02:22:42,320 --> 02:22:45,640
 And that's going to be the FIR using the

2309
02:22:45,640 --> 02:22:46,679
 windowing method.

2310
02:22:53,160 --> 02:22:54,960
 Or if not, let me know which part doesn't make sense.

2311
02:22:54,960 --> 02:22:56,080
 I can try to explain.

2312
02:22:59,919 --> 02:23:03,279
 All right, so if you don't ask, I assume you'll know it.

2313
02:23:03,279 --> 02:23:05,519
 But here's something I want to mention is this.

2314
02:23:05,519 --> 02:23:12,080
 This window function, WN, they have many choices.

2315
02:23:12,080 --> 02:23:13,320
 It's not the only choice.

2316
02:23:13,320 --> 02:23:16,439
 So basically, this window function can have different

2317
02:23:16,439 --> 02:23:18,519
 window function.

2318
02:23:18,519 --> 02:23:22,080
 But all of them will have this property that only non-zero

2319
02:23:22,080 --> 02:23:25,320
 within this range and 0 elsewhere.

2320
02:23:25,320 --> 02:23:29,360
 But whether the non-zero part are they constant, are they

2321
02:23:29,360 --> 02:23:31,199
 certain shape, it depends.

2322
02:23:31,199 --> 02:23:32,039
 They have many choices.

2323
02:23:32,039 --> 02:23:34,760
 So next week, we're going to look at what is the

2324
02:23:34,760 --> 02:23:38,720
 phenomenon by choosing different windowing functions.

2325
02:23:38,720 --> 02:23:40,760
 But it's all windowing functions, a different kind of

2326
02:23:40,760 --> 02:23:41,960
 windowing function.

2327
02:23:41,960 --> 02:23:47,400
 And also, window method can be used to design basically any

2328
02:23:47,400 --> 02:23:50,320
 type of digital filter, as long as this guy is given.

2329
02:23:50,320 --> 02:23:54,800
 So you have to be given a very specific objective.

2330
02:23:54,800 --> 02:23:57,560
 In other words, if you don't tell me the ideal filter, I

2331
02:23:57,560 --> 02:23:58,720
 cannot do windowing function.

2332
02:23:58,720 --> 02:24:01,560
 If you give me this, I can use the window function to deal

2333
02:24:01,560 --> 02:24:06,080
 with any given kind of ideal digital filter.

2334
02:24:06,080 --> 02:24:09,039
 So this is a must condition.

2335
02:24:09,039 --> 02:24:11,640
 So like I said, there are many choices of window functions.

2336
02:24:11,640 --> 02:24:14,160
 So today, let's just look at one.

2337
02:24:14,160 --> 02:24:16,199
 So next week, we're going to look at all the possible

2338
02:24:16,199 --> 02:24:16,519
 choices.

2339
02:24:16,519 --> 02:24:22,240
 But today, the simple window function can be, let's look

2340
02:24:22,240 --> 02:24:23,320
 at this example.

2341
02:24:23,320 --> 02:24:27,920
 So suppose I give you a target, let's say, ideal low

2342
02:24:27,920 --> 02:24:29,160
 pass filter.

2343
02:24:29,160 --> 02:24:35,760
 So ideal pass filter will be 0 if it's beyond the pass band.

2344
02:24:35,760 --> 02:24:38,920
 Within the pass band, I'm giving you some kind of a

2345
02:24:38,920 --> 02:24:39,640
 complex number.

2346
02:24:39,640 --> 02:24:42,440
 But this number will have some phase term.

2347
02:24:42,440 --> 02:24:44,320
 You can tell this is a linear phase.

2348
02:24:44,320 --> 02:24:46,080
 This phase term, even though there's a phase, it's a

2349
02:24:46,080 --> 02:24:46,960
 linear.

2350
02:24:46,960 --> 02:24:48,360
 And the magnitude is 1.

2351
02:24:48,360 --> 02:24:50,440
 So this is my target.

2352
02:24:50,440 --> 02:24:52,920
 This is my ideal low pass filter.

2353
02:24:52,920 --> 02:24:55,680
 Apparently, if you do an inverse DTFT, you have a Zinc

2354
02:24:55,680 --> 02:24:57,000
 function.

2355
02:24:57,000 --> 02:25:01,840
 So for example, if you directly do a DTFT of this guy, you

2356
02:25:01,840 --> 02:25:05,080
 can get the ideal time domain response, which is

2357
02:25:05,080 --> 02:25:06,840
 something like this.

2358
02:25:06,840 --> 02:25:09,080
 And if you plot it, you're going to have a Zinc function,

2359
02:25:09,080 --> 02:25:11,240
 but discretized version.

2360
02:25:11,240 --> 02:25:13,320
 Depends on your M. Your M is 12.

2361
02:25:13,320 --> 02:25:15,400
 This is your time domain response.

2362
02:25:15,400 --> 02:25:18,560
 If it's 13, this is your time domain response.

2363
02:25:18,560 --> 02:25:22,360
 So you cannot use that as direct as FIR, because it's

2364
02:25:22,360 --> 02:25:24,240
 infinitely long.

2365
02:25:24,240 --> 02:25:26,400
 Now, how to do windowing function?

2366
02:25:26,400 --> 02:25:29,800
 We have to first use a window function.

2367
02:25:29,800 --> 02:25:32,680
 The simplest possible windowing function is a

2368
02:25:32,680 --> 02:25:38,880
 rectangular window, which is 1 within the range of 0 to M

2369
02:25:38,880 --> 02:25:42,360
 minus 1 and 0 elsewhere.

2370
02:25:42,360 --> 02:25:45,400
 So it's like exactly a rectangular function.

2371
02:25:45,400 --> 02:25:47,800
 So this is actually how you plot it.

2372
02:25:47,800 --> 02:25:50,120
 This is the plot of the window function.

2373
02:25:50,120 --> 02:25:55,960
 So when you determine the objective ideal filter and

2374
02:25:55,960 --> 02:25:58,760
 then your windowing function, the only thing you do is

2375
02:25:58,760 --> 02:26:03,560
 multiply the two together in the time domain.

2376
02:26:03,560 --> 02:26:08,520
 In other words, multiply this guy with this guy in the time

2377
02:26:08,520 --> 02:26:11,480
 domain point by point.

2378
02:26:11,480 --> 02:26:15,440
 So by doing so, all of the coefficient within this range

2379
02:26:15,440 --> 02:26:17,360
 will survive.

2380
02:26:17,360 --> 02:26:20,200
 All of the response outside the range will be killed.

2381
02:26:20,200 --> 02:26:21,640
 But it's 0 out.

2382
02:26:21,640 --> 02:26:28,160
 So by doing so, if I'm going to, for example, multiply, let's

2383
02:26:28,160 --> 02:26:31,600
 see, where's the multiplication?

2384
02:26:31,600 --> 02:26:32,240
 Oh, here.

2385
02:26:32,240 --> 02:26:35,880
 So the unit impulse response of the FIR designed with such a

2386
02:26:35,880 --> 02:26:41,880
 window will be your original HTN, which is this guy.

2387
02:26:41,880 --> 02:26:43,440
 Multiply by your window function.

2388
02:26:43,440 --> 02:26:46,760
 So it's going to be point by point multiplication.

2389
02:26:46,760 --> 02:26:49,920
 That's how you get your FIR.

2390
02:26:49,920 --> 02:26:54,960
 So after that, you can tell that now your HTN, which is

2391
02:26:54,960 --> 02:26:58,920
 after windowing method, will also have the symmetric

2392
02:26:58,920 --> 02:27:00,040
 property.

2393
02:27:00,040 --> 02:27:00,720
 Sorry.

2394
02:27:00,720 --> 02:27:01,760
 No, no, no, not yet.

2395
02:27:01,760 --> 02:27:05,040
 So you're going to make sure that your BM equal to the

2396
02:27:05,040 --> 02:27:08,120
 corresponding ideal coefficient only within the

2397
02:27:08,120 --> 02:27:10,760
 range, 0 to m minus 1.

2398
02:27:10,760 --> 02:27:16,720
 Such that you can now form the FIR with only the first

2399
02:27:16,720 --> 02:27:18,519
 m terms.

2400
02:27:18,519 --> 02:27:20,920
 So this one will give you a m minus 1 order

2401
02:27:20,920 --> 02:27:23,119
 polynomial like this.

2402
02:27:23,119 --> 02:27:27,640
 So this is going to be FIR, but not ideally as the original

2403
02:27:27,640 --> 02:27:28,640
 low pass filter.

2404
02:27:28,640 --> 02:27:30,560
 But that's a good enough one, where is the

2405
02:27:30,560 --> 02:27:32,640
 windowing method.

2406
02:27:32,640 --> 02:27:36,560
 And note that this guy, HTN, originally is a symmetric.

2407
02:27:36,560 --> 02:27:38,039
 Remember, we say the linear phase.

2408
02:27:38,039 --> 02:27:39,599
 So it's going to be symmetric.

2409
02:27:39,599 --> 02:27:43,439
 The FIR filter after a windowing method is still a

2410
02:27:43,439 --> 02:27:45,279
 linear phase.

2411
02:27:45,280 --> 02:27:48,680
 But with a slope slightly changed, there's a minus sign

2412
02:27:48,680 --> 02:27:53,200
 front, which is exactly one of the characteristics you

2413
02:27:53,200 --> 02:27:54,360
 desire by that.

2414
02:27:54,360 --> 02:27:57,280
 So in other words, windowing method, if you design a

2415
02:27:57,280 --> 02:28:01,920
 window in the center way, you can preserve the linear phase

2416
02:28:01,920 --> 02:28:03,640
 property.

2417
02:28:03,640 --> 02:28:06,640
 Going from originally the target that you are trying to

2418
02:28:06,640 --> 02:28:09,840
 approximate, you can preserve that property by using the

2419
02:28:09,840 --> 02:28:13,120
 windowing method, which is something we like.

2420
02:28:13,200 --> 02:28:15,800
 But the magnitude response, however, will be different,

2421
02:28:15,800 --> 02:28:18,880
 of course, because we truncate all of the zeros

2422
02:28:18,880 --> 02:28:20,280
 outside the bound.

2423
02:28:20,280 --> 02:28:23,040
 So you won't get the same response, which is something

2424
02:28:23,040 --> 02:28:24,440
 you have to pay.

2425
02:28:24,440 --> 02:28:27,680
 But at least you kind of maintain the linear phase

2426
02:28:27,680 --> 02:28:29,720
 property, which is something we like.

2427
02:28:29,720 --> 02:28:35,880
 So after windowing, this will be something you actually got.

2428
02:28:35,880 --> 02:28:38,520
 So it's not ideal low pass filter, everyone can tell,

2429
02:28:38,520 --> 02:28:42,760
 because first you have this kind of a very slow transition.

2430
02:28:42,760 --> 02:28:44,040
 And then we have this kind of repo.

2431
02:28:44,040 --> 02:28:47,280
 Remember, this is actually the repo in the stop band.

2432
02:28:47,280 --> 02:28:49,320
 You have some repo in the pass band.

2433
02:28:49,320 --> 02:28:52,920
 So basically, you won't get the same kind of low pass

2434
02:28:52,920 --> 02:28:55,960
 filter, but it's still a low pass filter, with this

2435
02:28:55,960 --> 02:28:57,800
 approximation.

2436
02:28:57,800 --> 02:29:01,480
 And this one shows you two versions.

2437
02:29:01,480 --> 02:29:05,360
 One is the 61 as the M. The other one is 101.

2438
02:29:05,360 --> 02:29:09,080
 So you can see that with the amount of M increases,

2439
02:29:09,080 --> 02:29:11,840
 actually you can suppress the repo.

2440
02:29:11,840 --> 02:29:14,760
 So this repo becomes smaller than the first version.

2441
02:29:14,760 --> 02:29:16,360
 So basically, there's a trade-off between the

2442
02:29:16,360 --> 02:29:20,040
 approximation quality and the computational complexity.

2443
02:29:20,040 --> 02:29:24,280
 You pay the price for having more higher order.

2444
02:29:24,280 --> 02:29:27,480
 You can make the approximation better.

2445
02:29:27,480 --> 02:29:30,120
 So this is actually one of the trade-off you can tell.

2446
02:29:30,120 --> 02:29:33,280
 And also, you can also tell that what is the first

2447
02:29:33,280 --> 02:29:34,240
 side loop.

2448
02:29:34,240 --> 02:29:37,400
 So the first side loop here, by increasing the M, you are

2449
02:29:37,400 --> 02:29:40,400
 also decreasing the quantity here.

2450
02:29:40,400 --> 02:29:43,000
 So you are making them more like the stop band, rather

2451
02:29:43,000 --> 02:29:45,240
 than the first one.

2452
02:29:45,240 --> 02:29:49,760
 So this is something kind of practically happened as the

2453
02:29:49,760 --> 02:29:53,480
 phenomenon after applying the windowing method.

2454
02:29:53,480 --> 02:29:54,440
 But just one example.

2455
02:29:54,440 --> 02:29:57,960
 I mean, give you some idea of how the windowing method can

2456
02:29:57,960 --> 02:29:58,720
 work on that.

2457
02:29:58,720 --> 02:30:02,000
 But like I mentioned, windowing method depends on the

2458
02:30:02,000 --> 02:30:03,359
 window you choose.

2459
02:30:03,359 --> 02:30:06,400
 The phenomenon and also the trade-off will be different.

2460
02:30:06,400 --> 02:30:10,119
 So today, we only look at one of the function, rectangular

2461
02:30:10,120 --> 02:30:11,400
 window.

2462
02:30:11,400 --> 02:30:14,920
 Next week, we're going to introduce two more windows.

2463
02:30:14,920 --> 02:30:17,560
 So we're going to compare what's the pro and cons for

2464
02:30:17,560 --> 02:30:18,480
 every window.

2465
02:30:18,480 --> 02:30:21,320
 So no window is perfect, but you need to know what is the

2466
02:30:21,320 --> 02:30:23,000
 advantage of certain window.

2467
02:30:23,000 --> 02:30:24,960
 Depends on your specification.

2468
02:30:24,960 --> 02:30:26,680
 You need to make the right choice.

2469
02:30:26,680 --> 02:30:28,200
 This is what we want to cover.

2470
02:30:28,200 --> 02:30:32,240
 But I will end here, and it's nice, so you can go for bus.

2471
02:30:32,240 --> 02:30:34,040
 But before that, a quick summary.

2472
02:30:34,040 --> 02:30:36,920
 So what we are talking about today, we started by talking

2473
02:30:36,920 --> 02:30:38,920
 about what left out last week.

2474
02:30:38,920 --> 02:30:41,000
 We go through the z-transform.

2475
02:30:41,000 --> 02:30:45,880
 We know that frequency response and difference equation,

2476
02:30:45,880 --> 02:30:49,600
 these are the representation you need to know for filter.

2477
02:30:49,600 --> 02:30:53,160
 And we talk about how we can do the direct form of the block

2478
02:30:53,160 --> 02:30:54,440
 diagram.

2479
02:30:54,440 --> 02:30:58,360
 We understand what is the filter specification.

2480
02:30:58,360 --> 02:31:03,480
 We say that there's two h-frequency, omega s, omega p,

2481
02:31:03,480 --> 02:31:05,320
 two repose, stop band, pass band.

2482
02:31:05,320 --> 02:31:08,120
 These are something we have to keep in mind when you do

2483
02:31:08,120 --> 02:31:08,760
 filter design.

2484
02:31:08,760 --> 02:31:11,840
 So we also understand the effect of this one will be

2485
02:31:11,840 --> 02:31:12,840
 covered next week.

2486
02:31:12,840 --> 02:31:17,600
 But the effect of windows and also how to estimate the

2487
02:31:17,600 --> 02:31:20,960
 complexity, how to trade off between complexity and the

2488
02:31:20,960 --> 02:31:23,920
 quality of approximation.

2489
02:31:23,920 --> 02:31:29,040
 So this course will cover, this might probably cover FIR

2490
02:31:29,040 --> 02:31:29,440
 only.

2491
02:31:29,440 --> 02:31:33,000
 So you can assume that all of this filter design will be

2492
02:31:33,000 --> 02:31:34,280
 just FIR for my part.

2493
02:31:34,280 --> 02:31:37,160
 But profiting will go to IRR in the second part.

2494
02:31:37,160 --> 02:31:38,400
 All right, so that's all for today.

2495
02:31:38,400 --> 02:31:40,440
 And I hope I end in time.

2496
02:31:40,440 --> 02:31:43,280
 So next week, I'll come back to look at more for the filter

2497
02:31:43,280 --> 02:31:44,760
 design and multirate.

2498
02:31:44,760 --> 02:31:46,880
 And also next week, there's a big homework.

2499
02:31:46,880 --> 02:31:49,520
 So homework will be announced by next week.

2500
02:31:49,520 --> 02:31:52,800
 And you can start to do something, but you will see

2501
02:31:52,800 --> 02:31:55,760
 some questions which need future knowledge, like the week

2502
02:31:55,760 --> 02:31:56,320
 after next week.

2503
02:31:56,320 --> 02:31:58,800
 So don't be worried if you see something not very

2504
02:31:58,800 --> 02:31:59,480
 familiar ways.

2505
02:31:59,480 --> 02:32:02,840
 You can start doing those you already learned.

2506
02:32:02,840 --> 02:32:05,000
 But the due date for homework will be the end of the

2507
02:32:05,040 --> 02:32:05,480
 recess.

2508
02:32:05,480 --> 02:32:07,320
 So you have four weeks to do it.

2509
02:32:07,320 --> 02:32:08,800
 So don't worry about it.

2510
02:32:08,800 --> 02:32:09,720
 All right?

2511
02:32:09,720 --> 02:32:10,560
 Thank you.

2512
02:32:10,560 --> 02:32:11,160
 That's all for today.

2513
02:32:11,160 --> 02:32:12,160
 Thank you.

2514
02:32:35,000 --> 02:32:36,000
 Thank you.

2515
02:33:05,000 --> 02:33:06,000
 Thank you.

2516
02:33:35,000 --> 02:34:03,000
 So any questions before I leave?

2517
02:34:04,000 --> 02:34:05,000
 All right?

2518
02:34:05,000 --> 02:34:06,000
 No questions asked?

2519
02:34:06,000 --> 02:34:07,000
 OK.

2520
02:34:07,000 --> 02:34:09,000
 So now I'm going to close the slides.

2521
02:34:09,000 --> 02:34:10,000
 All right?

2522
02:34:10,000 --> 02:34:11,000
 Thank you.

2523
02:34:33,000 --> 02:34:35,000
 Thank you.

2524
02:35:03,000 --> 02:35:05,000
 Thank you.

2525
02:35:33,000 --> 02:35:35,000
 Thank you.

