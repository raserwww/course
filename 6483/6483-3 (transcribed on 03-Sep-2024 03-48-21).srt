1
00:01:00,000 --> 00:01:18,280
 Hello class. Okay, so we are in week three now. So this is our finalized class size,

2
00:01:18,280 --> 00:01:27,800
 I guess. Okay, so from this week, this is the things we want to cover. Okay, so basically

3
00:01:27,840 --> 00:01:34,800
 we are removed into the third week now. So we want to further discuss about the heuristics

4
00:01:34,800 --> 00:01:43,200
 to design heuristics with an example. Of course, we cannot really, probably we can only get

5
00:01:43,200 --> 00:01:50,960
 a very, very basic idea of setting evaluation or actually based on the information we are

6
00:01:50,960 --> 00:02:01,320
 given and then try our best to come up with the embedded our skills and the experience

7
00:02:01,320 --> 00:02:09,560
 and then try to set the ideal, I mean the best we can make the kind of estimations or

8
00:02:09,560 --> 00:02:15,519
 actually evaluations for each of the states. And then with that heuristics, we can actually

9
00:02:15,520 --> 00:02:23,480
 hopefully can help us to find the answer, find the goal state within the effort, I mean

10
00:02:23,480 --> 00:02:30,880
 within the efficiency given efficiency time and memory possible consumptions. Okay, so

11
00:02:30,880 --> 00:02:37,320
 those are the things we want to finish off. So that means under the informed search, we

12
00:02:37,320 --> 00:02:45,160
 look into the heuristics again and then also we look at is there any other way? I mean,

13
00:02:45,200 --> 00:02:51,359
 we know the heuristics most likely is a kind of indicator or come up with a rule of functions

14
00:02:51,359 --> 00:02:57,640
 and try to see based on the current state, any of the current state end, how to get the

15
00:02:57,640 --> 00:03:04,040
 figure or get the value to indicate how much effort or how what's the cost or what's the

16
00:03:04,040 --> 00:03:10,600
 fitness to reach one of the goal. Okay, so how to evaluate that value, right? So that

17
00:03:10,640 --> 00:03:17,320
 is suppose that rule or that kind of function or that kind of indicator can be applied it

18
00:03:17,920 --> 00:03:25,000
 to every state in this search space. Okay, so this is the things we are talking about. So

19
00:03:26,200 --> 00:03:32,920
 it's talking about from current state end to one of the goal. Okay, so that is a value. But

20
00:03:32,920 --> 00:03:40,560
 what about from the starting state, right from the starting state to the current state? Is

21
00:03:40,560 --> 00:03:46,440
 there anything we can do? So of course, one simple thing we can do is we can actually

22
00:03:46,440 --> 00:03:53,440
 consider the depth, right? Consider how far away from the starting state. So that is the

23
00:03:53,640 --> 00:03:59,800
 depth. Okay, so that is the things we want to take that into consideration. So that actually

24
00:04:00,520 --> 00:04:08,560
 introduce a kind of thing which is we so far we don't see in the even backtrack or in the

25
00:04:08,600 --> 00:04:14,560
 depth first, whatever is also search actually we are best first search. We never really

26
00:04:14,560 --> 00:04:20,880
 mentioned about actually the state can repeat, right? We actually say we did mention in the

27
00:04:20,880 --> 00:04:28,080
 best first search we already said if now reaching the same state from a different pass, say

28
00:04:28,120 --> 00:04:34,280
 better shorter pass, then probably we can reconsider that state again, right? So that is

29
00:04:34,359 --> 00:04:41,359
 something we want to take that into consideration. That's why we talk about the GN. Okay, so

30
00:04:41,359 --> 00:04:49,559
 that is the try to evaluate the pass from starting state to each of the current state end. You

31
00:04:49,559 --> 00:04:54,479
 can call X or whatever. Yeah, that is each of the states. So that's why we want to have these

32
00:04:54,479 --> 00:05:00,840
 two parts. One is to measure the pass from the starting state to the current state. Then

33
00:05:00,880 --> 00:05:07,000
 another heuristic value is to talk about from current state to the goal state. Okay, so

34
00:05:07,000 --> 00:05:15,000
 we add these two together called FN or FX for each of the states end. So that is the

35
00:05:15,440 --> 00:05:21,599
 thing we can have. And then we can distinguish the best first search with or without the

36
00:05:21,599 --> 00:05:27,880
 G. Okay, so then we say, okay, one is called greedy, another one is called best first search.

37
00:05:27,920 --> 00:05:33,760
 So the greedy one probably you don't consider the G. Okay, then you, the actual best first,

38
00:05:33,760 --> 00:05:40,760
 you probably consider the G. Okay, and then best first search. And then also we have another

39
00:05:40,880 --> 00:05:47,320
 one is a A star. Okay, so that is another search algorithm. So again, impose a condition

40
00:05:47,320 --> 00:05:55,320
 to the H. Okay, so if the H satisfies certain condition, then we say this is a A star search.

41
00:05:55,760 --> 00:06:01,840
 Okay, so that is something we want to finish off. And then the last two lectures, we want

42
00:06:01,840 --> 00:06:08,840
 to cover the gaming, the algorithm, which is more suitable for game, not just for search

43
00:06:09,719 --> 00:06:16,480
 for answer. Okay, so the difference is search for answer seems the answer is always there.

44
00:06:16,480 --> 00:06:23,480
 You just try to find the answer. But the game is also depends on the opponent. Okay, so

45
00:06:23,480 --> 00:06:30,480
 it depends on how you play and also depends on how your opponents respond. Right, then

46
00:06:30,480 --> 00:06:37,000
 based on that, you develop a probably different kind of subspace. So how to actually find

47
00:06:37,000 --> 00:06:42,280
 answer from there. So that's the algorithm we want to introduce. Actually, we basically

48
00:06:42,280 --> 00:06:49,280
 just introduce one, which is a mini max, but alpha, the alpha beta pruning actually is

49
00:06:50,280 --> 00:06:56,080
 a better version of the mini max. So basically, it's just we don't want to exhaustive search

50
00:06:56,080 --> 00:07:03,080
 the entire tree, the game tree. Okay, so hopefully we can actually cut off certain branches.

51
00:07:03,760 --> 00:07:09,760
 So those branches, we can no need to explore at all. So we can cut off. Okay, so that is

52
00:07:09,760 --> 00:07:17,200
 two algorithm we are going to go through. And then of course, we will support with examples.

53
00:07:17,200 --> 00:07:23,440
 And then we will have exercises. Okay, so for this exercise, I think we cannot cover

54
00:07:23,440 --> 00:07:29,800
 today in the class. So again, we do it next week. Okay, oh, sorry, actually even not next

55
00:07:29,800 --> 00:07:34,640
 week, because next week we have to focus on discussion about data mining. Okay, so I will

56
00:07:34,640 --> 00:07:41,640
 use the last lecture in the week five, one hour only for me. Okay, then I will discuss

57
00:07:42,599 --> 00:07:49,599
 exercises. Okay, so this is the arrangement. Any quick question? Okay, I know you are probably

58
00:07:53,200 --> 00:08:00,200
 asking have we fixed the date for the quiz yet? Not yet. Okay, yeah, so one thing is

59
00:08:01,560 --> 00:08:07,840
 most likely, most likely that's no chance for us to squeeze in week five. Okay, so that

60
00:08:07,880 --> 00:08:12,280
 is a good news for many of you probably because week five, I heard some of you actually have

61
00:08:12,280 --> 00:08:19,280
 another quiz. So the good thing is most likely will be in week six Saturday. Okay, but I

62
00:08:19,359 --> 00:08:24,120
 still cannot get the confirmation yet because we have very big class and then venue and

63
00:08:24,120 --> 00:08:31,120
 then invigilator and that is all need to be settled. Okay, so likely, likely week six

64
00:08:31,120 --> 00:08:38,120
 is not week five anymore. It's week six Saturday. Okay, but still waiting, still waiting.

65
00:08:38,679 --> 00:08:43,799
 Just before come here, I actually chat with the team again with the OISIS team. They still

66
00:08:43,799 --> 00:08:50,800
 no answer. Okay, so but likely, yeah, so week five schedule can be updated. Okay, so it's

67
00:08:53,800 --> 00:09:00,800
 week six likely. And also the grouping, I think you don't know the project now, but

68
00:09:01,600 --> 00:09:06,480
 what project you're going to do or whatever that is. Okay, but just you can informally

69
00:09:06,480 --> 00:09:12,080
 have a group first and then later when the information available, then you can quickly

70
00:09:12,080 --> 00:09:19,080
 share on the Google documents. Okay, so we still want to ask ourselves why we need to

71
00:09:23,360 --> 00:09:28,920
 have heuristics. Okay, so although it's a bit silly question, but we still want to say,

72
00:09:29,040 --> 00:09:35,640
 okay, so basically we only have a very limited information. So definitely one heuristic could

73
00:09:35,640 --> 00:09:42,640
 be better than another one. Okay, in a way it's like better informed or actually it's

74
00:09:43,360 --> 00:09:50,360
 like a better embedded our skills or with limited information. Okay, so that's why sometimes

75
00:09:51,160 --> 00:09:58,160
 you have many ways to design your heuristics and then some can lead to failure or some

76
00:10:00,040 --> 00:10:07,040
 actually can work and some can be more efficient and so on. So that is hopefully we have a

77
00:10:07,560 --> 00:10:13,760
 way to do it and then we can make use of this score or this rule or this kind of indicator

78
00:10:13,760 --> 00:10:20,760
 and then try to apply like best first search or eight star search. This is a key idea.

79
00:10:21,200 --> 00:10:27,400
 Okay, so we have a little bit of discussion about different heuristics for the same problem.

80
00:10:27,400 --> 00:10:34,400
 Okay, so same this game that we can see. Okay, so this is a puzzle again. So we want to,

81
00:10:35,400 --> 00:10:42,400
 suppose starting from here, this is our goal state. Okay, so this is a goal state. So it's

82
00:10:46,480 --> 00:10:53,480
 sorted number the tau in this around the site. Okay, so the empty tau is in the middle.

83
00:10:55,880 --> 00:11:02,880
 So that's how to actually, I mean, there are various ways to come up with a heuristic value.

84
00:11:03,000 --> 00:11:10,000
 Okay, so this is the way we try to see. Okay, so example here, we show you three ways to

85
00:11:12,000 --> 00:11:18,280
 work out the heuristic, I mean to be used as a heuristic indicator. Like the first one

86
00:11:18,280 --> 00:11:25,280
 is the, okay, I put it here actually. Okay, so the first one is to count the tau out of

87
00:11:25,360 --> 00:11:32,360
 place, okay, out of the space. So it looks like that is our each one. Okay, each two

88
00:11:32,880 --> 00:11:39,880
 is a second heuristic design is to count the total sum. Okay, so it's a sum of distances

89
00:11:40,320 --> 00:11:46,000
 out of space. Okay, so here is a distance, distance measure. Okay, you can use Euclidean

90
00:11:46,000 --> 00:11:52,200
 distance or you can use the Hermetin distance or any distance. Okay, so suppose we are using

91
00:11:52,200 --> 00:11:59,200
 this way to calculate distance, then that is the each two we are talking about. Okay,

92
00:11:59,600 --> 00:12:06,600
 then each three is to have a heuristic set like this. Say we use two, multiply with a

93
00:12:07,800 --> 00:12:14,800
 number of the direct tau reverse. Okay, this is a reversed order. If we can reverse it,

94
00:12:16,640 --> 00:12:22,600
 become, they are in the order that that means that's done. Okay, that is considered as one

95
00:12:22,600 --> 00:12:29,600
 and then we can multiply by two and count this total. Okay, so this is the each three.

96
00:12:32,360 --> 00:12:39,360
 So, so, so this, let's look at this example. So we have this starting from here. So this

97
00:12:41,520 --> 00:12:48,360
 is our goal state and let's look at if we use each one, so that is a counter number

98
00:12:48,440 --> 00:12:55,440
 of tau which is outer place. So the one actually supposed to be here. Right, so it's outer

99
00:12:55,600 --> 00:13:02,000
 place, right, because one is here now. So one is out place, two, two is out place as

100
00:13:02,000 --> 00:13:09,000
 well, two is here, two supposed to be here. So two is out place. Three in the right place,

101
00:13:10,000 --> 00:13:17,000
 four right place, five right place, six. Okay, oh sorry, sorry, six outer place, right, seven

102
00:13:17,840 --> 00:13:24,840
 outer place, eight outer place. Okay, so that's why that's how we get the five based on the

103
00:13:25,680 --> 00:13:32,680
 first heuristic. Okay, based on the second one, heuristic actually use Manhattan distance.

104
00:13:33,280 --> 00:13:40,280
 So that means you work out the difference between x and difference between y and x together.

105
00:13:40,280 --> 00:13:47,280
 Right, so let's look at the one actually the x is one away, right, the, oh sorry, x is

106
00:13:50,040 --> 00:13:57,040
 the same, yeah, it's in the same x and then y is one away. So that means it's a zero

107
00:13:57,199 --> 00:14:04,199
 plus one, right, so that's why it's one. So we have one for the number, the tau number

108
00:14:04,520 --> 00:14:11,520
 one, for the number two, yeah, it's also one, right, yeah, one away, you see, this is,

109
00:14:12,200 --> 00:14:19,200
 suppose the position is here, okay, so three, okay, four, okay, five, okay, six, one away,

110
00:14:22,400 --> 00:14:29,400
 yes, seven, one away, yeah, eight, two, yeah, this way, this way, okay, so that's why you

111
00:14:29,400 --> 00:14:36,400
 get six. So this is a calculation, I mean, indicator you can use, so you see, different

112
00:14:41,400 --> 00:14:47,400
 age, different heuristic, I mean, different rules give you a different value and then

113
00:14:47,400 --> 00:14:53,400
 this value later will be used to make decision, right, so which one actually give you a better

114
00:14:53,400 --> 00:15:00,400
 way to guide us to find the answer, definitely the heuristic value is very important, right,

115
00:15:00,400 --> 00:15:07,400
 so probably more skilled player, you have a better way to design this and to feel which

116
00:15:07,400 --> 00:15:11,959
 is better, okay, the third one, yeah, let's go through the third one, so the third one,

117
00:15:11,959 --> 00:15:17,560
 yeah, we want to multiply, the two, multiply the number, get directly flipped, okay, so

118
00:15:17,719 --> 00:15:24,520
 one and two, can we directly flip, it's not in the position, you can flip but it's still

119
00:15:24,520 --> 00:15:31,520
 not in the right place, right, for both, yeah, so two also, yeah, one and two, and three,

120
00:15:33,719 --> 00:15:39,719
 nothing, no change, and six, okay, six and seven can flip and six will be in the right

121
00:15:39,720 --> 00:15:46,720
 place but seven is not, right, so eight also, no, so zero, nothing multiplied by two, so

122
00:15:49,400 --> 00:15:56,400
 that's why it's still zero, okay, so this is what we want to show you, with a different

123
00:15:57,800 --> 00:16:04,800
 way, actually, that is a careful design of the heuristic is very important, okay, yeah,

124
00:16:05,800 --> 00:16:12,800
 so in order to show you something, I just create something like this, so suppose we

125
00:16:13,560 --> 00:16:20,560
 have the seven and the six like this, so you flip this one, and, oh sorry, one and two,

126
00:16:22,359 --> 00:16:29,359
 you flip, yeah, so reverse it, then you have the right position, one, two in the right

127
00:16:29,360 --> 00:16:36,360
 position, all the rest is still not, so this one give us some value, okay, but yeah, this

128
00:16:36,360 --> 00:16:42,880
 can be updated if I arrange it this way, right, correct, one will be out of place, two will

129
00:16:42,880 --> 00:16:49,880
 be out of place, three, four, five, six, seven out of place, eight out of place, so it's

130
00:16:49,920 --> 00:16:55,720
 four, right, so this is four for each one, and then this is five, we can work out based

131
00:16:55,800 --> 00:17:02,800
 on the head and the distance, right, okay, so this is an example to show us of that,

132
00:17:04,480 --> 00:17:10,680
 so the key point is to design this is not trivial at all, right, to design the heuristics

133
00:17:10,680 --> 00:17:17,680
 for each of the problem, also very, very much problem dependent, I need a lot of skills

134
00:17:17,680 --> 00:17:24,680
 and experience and then a plan, and basically you need to reinvent it, okay, it's not like

135
00:17:25,120 --> 00:17:30,920
 somebody just tell you, okay, and nothing like, okay, this can be applied for everything

136
00:17:30,920 --> 00:17:37,920
 at all, right, so probably need to reinvent it based on the problem, invent it accordingly,

137
00:17:38,960 --> 00:17:45,960
 okay, so that's why we are saying the conventional symbolic AI, the designer is very, very important,

138
00:17:46,160 --> 00:17:53,160
 right, okay, so that is the most important thing and also to say something about how challenging

139
00:17:53,160 --> 00:18:00,160
 it is, so basically only limited information available and also hopefully this single rule

140
00:18:01,400 --> 00:18:08,400
 or single formula or single describer or discriminator that can be applied to every state, right,

141
00:18:11,160 --> 00:18:18,160
 so help us to make an intelligent selection and then can lead us to find a goal, right,

142
00:18:18,400 --> 00:18:25,400
 so this is very much skill-based, experience-based and empirical problem and depends on the

143
00:18:27,320 --> 00:18:34,320
 problem, depends on the skills, depends on the information available, depends on the

144
00:18:34,320 --> 00:18:39,960
 memory size, for example, yeah, because especially for those game tree you can look ahead many

145
00:18:39,960 --> 00:18:46,960
 steps if you have a very huge memory, can hold those states, then your information's relatively

146
00:18:47,440 --> 00:18:54,440
 rich compared to somebody which only can say, you can only look ahead two levels, compared

147
00:18:55,360 --> 00:19:01,120
 to another person you can look ahead 20 steps, right, so then your heuristic value probably

148
00:19:01,120 --> 00:19:06,760
 the way you design heuristics will be very different, so hopefully they will lead you

149
00:19:06,760 --> 00:19:13,760
 more successful rather than failure, so that's what we are talking about, okay, so just now

150
00:19:14,480 --> 00:19:21,480
 we said, yeah, other than the heuristic value, another important thing is to see how much,

151
00:19:23,280 --> 00:19:29,960
 how far away from the starting state, right, so we want to take that into consideration,

152
00:19:29,960 --> 00:19:36,960
 so that is the GN we are talking about, that is to say the cost we spend to take this path

153
00:19:37,200 --> 00:19:44,200
 to this particular state, so taking this path that means starting from the starting state

154
00:19:45,000 --> 00:19:50,520
 to reach this current state if you have more than one way, right, because it's a game graph

155
00:19:50,520 --> 00:19:56,480
 actually, it's not really a tree, right, actually it's a graph, so the graph you, we are talking

156
00:19:56,480 --> 00:20:02,160
 about you can reach the same states from different passes, more than one passes, right, so then

157
00:20:02,200 --> 00:20:07,600
 which path is shorter, which path is longer, we should take that cost into consideration

158
00:20:07,600 --> 00:20:14,600
 as well, okay, so that's the back counting, take that into consideration, so the evaluation

159
00:20:15,280 --> 00:20:22,040
 function, actually we are not just purely talking about the hint to guide us from current state

160
00:20:22,040 --> 00:20:29,040
 to the goal, but also we talk about overall cost, overall evaluation, that is taking the

161
00:20:29,800 --> 00:20:35,440
 GN into consideration as well, okay, starting state to the current state, so that is the

162
00:20:35,440 --> 00:20:41,600
 path cost, so that is the cost from initial state to the current state, or measure the

163
00:20:41,600 --> 00:20:48,600
 actual length of the path, okay, so that is the depth count, and then the H is still from

164
00:20:52,480 --> 00:20:57,600
 the current state to the goal state, okay, so this is knowledge, hopefully the skills

165
00:20:57,679 --> 00:21:04,679
 we have, we can evaluate that, so we add these two together, and then become our overall

166
00:21:06,159 --> 00:21:13,159
 evaluation function, then whatever best first search, or eight star search, okay, since we

167
00:21:15,159 --> 00:21:21,360
 talk about best first search, and then eight star search, actually here is the only thing

168
00:21:21,399 --> 00:21:28,399
 different from the others, is this H, the Hersey value here is always admissible, okay,

169
00:21:33,280 --> 00:21:40,280
 so meaning, what is the meaning of it, meaning this value is always less than or equal to

170
00:21:42,120 --> 00:21:49,120
 the actual cost from the current state to the goal state, okay, so you always underestimate

171
00:21:50,120 --> 00:21:57,120
 the cost, okay, so in a way it's like you always underestimate, so for example, for example,

172
00:21:59,639 --> 00:22:06,639
 compared to just now, this H1, H2, H3, which one you think is underestimate? H3, can you

173
00:22:06,920 --> 00:22:13,920
 say H3? It needs to be true for every state, okay, so that's not just true for some state,

174
00:22:18,760 --> 00:22:25,760
 but not true for other states, these have to be applied for every end, every state's end,

175
00:22:29,120 --> 00:22:36,120
 okay, so H3, H3, H3, H3, H3, H3, H3, H3, H3, H3, H3, H3, H3, H3, H3, H3, H3, H3, H3, H3,

176
00:22:37,040 --> 00:22:44,040
 okay, so H1, yeah, H1, why? Yeah, actually the cost is underestimate, right, because we are talking

177
00:22:54,160 --> 00:23:01,160
 about, we only consider as 1, 1, you see, tau out of place, so you only count 1, but how

178
00:23:02,160 --> 00:23:09,160
 other place can be very far away from the actual place, at least is 1, right, at least

179
00:23:10,400 --> 00:23:17,400
 1, at least 1 away, or in x direction, or 1 away from y direction, or actually it's far

180
00:23:18,720 --> 00:23:25,720
 away, right, so you only count 1, so isn't it underestimate, right, underestimate the cost,

181
00:23:26,640 --> 00:23:33,640
 so if t is, then this is called the H, actually the H, the way we estimate the cost is called

182
00:23:34,160 --> 00:23:41,160
 admissible, okay, so this is, so it's not larger than the actual real cost, so if that is how

183
00:23:44,000 --> 00:23:49,680
 you design your H, then actually that can make the best first search, find the answer

184
00:23:49,680 --> 00:23:54,680
 with the optimal answer, if you can find it, okay, so this is a good thing, that's why

185
00:23:54,720 --> 00:24:01,720
 we call it A star, okay, so that is a concept, and so here I want to revisit about the best

186
00:24:04,960 --> 00:24:11,960
 first search, okay, so now best first before, now we didn't emphasis so much about the evaluation

187
00:24:12,440 --> 00:24:17,720
 function, actually it consists of two parts, right, we just go through the algorithm, but

188
00:24:17,720 --> 00:24:24,000
 in the algorithm we say, okay, if this is reach this state, if reach this state, the current

189
00:24:24,040 --> 00:24:30,520
 line, we reach this state by a shorter path, then we can actually update the open, right,

190
00:24:30,520 --> 00:24:35,760
 update the open list, or even we dig out the list, the states, in the closed list already

191
00:24:35,760 --> 00:24:42,760
 we dig them out and put into the open, remember, yeah, why, because this part, okay, because

192
00:24:44,000 --> 00:24:49,840
 this part, so actually the best first search we introduce the algorithm already take this

193
00:24:49,879 --> 00:24:56,879
 into consideration, okay, we say we revisit the state, if it's already appear before,

194
00:24:56,879 --> 00:25:02,320
 but before let's go through a longer path, reach that, then we should revisit it, if

195
00:25:02,320 --> 00:25:09,320
 the current one is shorter path, okay, remember that is the one, okay, and then so basically

196
00:25:09,879 --> 00:25:16,879
 that's a key thing, so if we don't consider the G, don't consider the cost from very beginning

197
00:25:17,120 --> 00:25:22,440
 state to the current state, then probably we call it greedy, a bit greedy, we miss out

198
00:25:22,440 --> 00:25:29,440
 some information basically, okay, so that is what we are saying, okay, greedy best first

199
00:25:29,440 --> 00:25:36,440
 search, so basically use heuristics close to the target as a key guide, okay, we don't

200
00:25:38,400 --> 00:25:45,400
 really consider the cost from starting state to the current state, okay, then you can call

201
00:25:46,040 --> 00:25:53,040
 it greedy, and then the A star, okay, so basically very similar, it's just a slightly constrained,

202
00:25:55,480 --> 00:26:02,480
 okay, the difference is a subtle difference, so we take this into consideration, that means

203
00:26:03,720 --> 00:26:09,120
 actually we want to get, if there is an answer, we try to have the answer which is close to

204
00:26:09,120 --> 00:26:14,920
 the starting state, as close to the starting state as possible, right, so as close to the

205
00:26:14,960 --> 00:26:21,960
 starting state as possible, that means actually we are doing the BFS rather than DFS, right,

206
00:26:22,040 --> 00:26:29,040
 we want this to be close to the starting state, so that's the thing, and also we know the

207
00:26:31,520 --> 00:26:38,520
 H here, so if the H is always under SMA, then it's the A star, okay, so it's a combination

208
00:26:39,520 --> 00:26:45,520
 of these two, actually very much like a best first search, I mean close related to the

209
00:26:45,520 --> 00:26:50,840
 best first search, it's all about evaluation, then from the evaluation, then how do you pick

210
00:26:50,840 --> 00:26:56,639
 the best, and then from the best, you also keep the other candidates, you don't throw

211
00:26:56,639 --> 00:27:03,639
 them away, and then you can expand the open and the closed, you know, checking, okay,

212
00:27:03,760 --> 00:27:10,760
 so this is A star, so this is more details about the A star, so the H and here need to

213
00:27:14,360 --> 00:27:21,360
 be admissible, okay, so that means this, for each of this H, each of the H and all, that

214
00:27:22,680 --> 00:27:29,680
 means all of the N, all of the states in this state space, you satisfy this condition,

215
00:27:30,080 --> 00:27:37,080
 the H star here actually indicate the actual true cost, the actual true cost, okay, so

216
00:27:37,240 --> 00:27:44,240
 we always less or equal to the true cost, so if that's the case, then that is, you can

217
00:27:47,400 --> 00:27:54,400
 get the optimal answer, okay, so this is the condition, you need to be careful about this,

218
00:27:54,760 --> 00:28:01,760
 this is admissible, and then we actually have to stick to that, when we try, when we design

219
00:28:03,760 --> 00:28:10,760
 the heuristic value, we try our function or formula, we try to do that, and then that

220
00:28:11,440 --> 00:28:18,440
 will guide us to find the optimal answer if we can find it, okay, okay, now let's look

221
00:28:19,440 --> 00:28:26,440
 at the example, so we still use this A puzzle, and then, so the GN, this is starting state,

222
00:28:32,600 --> 00:28:39,600
 so that's why the GN is level zero, right, so it's zero, and then the next one is one

223
00:28:41,320 --> 00:28:45,760
 step away from the starting state, and then two steps starting from the starting state,

224
00:28:45,760 --> 00:28:52,760
 then it's a GN equal to two and so on, okay, so here, now the evaluation function actually

225
00:28:53,040 --> 00:29:00,040
 we can consider both, so this is value, so the original one, we can count, like here,

226
00:29:03,960 --> 00:29:10,960
 probably we use which one, are we using the first each one, let's see, so one out of

227
00:29:11,960 --> 00:29:18,960
 space, two out of space, three, four, five, six out of space, seven out of space, eight

228
00:29:19,200 --> 00:29:26,200
 out of space, so it's five, five plus this G, so that's why the value is six, right,

229
00:29:26,240 --> 00:29:33,240
 so this is how you get it, how you get it, yeah, so the overall actually is F now, so

230
00:29:33,360 --> 00:29:40,360
 F is two components, one is G, one is H, okay, so let's see, yeah, so the first one is

231
00:29:41,040 --> 00:29:48,040
 we have the H value, sorry, we have the G value listed here, so this is how far away from

232
00:29:48,040 --> 00:29:55,040
 the starting state, so zero, then one, then two, and so on, and then we have, this is

233
00:29:57,160 --> 00:30:04,160
 our starting, and the goal state is still the same, we actually have the tiles around

234
00:30:05,160 --> 00:30:12,160
 the site, so then we can actually have the value, then we add this G, so this is become

235
00:30:15,000 --> 00:30:22,000
 six, okay, so can we quick check, one out of space, two out of space, then six, seven,

236
00:30:25,640 --> 00:30:32,640
 eight, right, five, plus one, that's why F here, F is six, okay, similarly you do this

237
00:30:33,640 --> 00:30:40,640
 calculation, so yeah, then even the C, do we have something exactly same, but the G

238
00:30:43,360 --> 00:30:50,360
 is different, then we can, do we see anything which is exactly same state, but with the

239
00:30:55,040 --> 00:31:02,040
 G we have a different value, not really here, huh, okay, so you can see based on the, based

240
00:31:02,640 --> 00:31:07,840
 on the value, then we actually choose the best first, right, we are using the best first

241
00:31:07,840 --> 00:31:14,840
 search, so you can see this is, the option we have is six, four, and six, right, so which

242
00:31:20,280 --> 00:31:26,640
 one we are taking, this is the cost, so the lower the better, right, so we sort it, and

243
00:31:26,640 --> 00:31:31,880
 then this is the best, so we get this one, and then expand the children, so this is not

244
00:31:31,960 --> 00:31:37,960
 a goal yet, so their children will be evaluated, I mean those are the children generated, and

245
00:31:37,960 --> 00:31:44,960
 then you get the F value for each of these, so this is a five, five, and six, okay, so

246
00:31:46,760 --> 00:31:52,760
 we need to sort it, what are the, in the open now, what are the states in the open list

247
00:31:52,760 --> 00:31:59,760
 now, are you able to run, this one, this one, this one, this one, this one, this one, this

248
00:32:02,880 --> 00:32:09,880
 one, this, this, this, and this, yes, in the open, yeah, then you choose the best, we should

249
00:32:14,800 --> 00:32:21,800
 start, and then the best one on the left most, right, so you have a six, five, five, six,

250
00:32:21,800 --> 00:32:28,800
 six, and then the five is the best, so you get this one, so then you, it's the children

251
00:32:29,800 --> 00:32:35,800
 of this one, so children of this one, because we only have these two, and then the six was

252
00:32:35,800 --> 00:32:40,800
 there, five was there, six was there, six was there, five and seven, right, in the open,

253
00:32:40,800 --> 00:32:47,800
 so then you choose the best, so you move here, yes, and then five, then expand, so among

254
00:32:50,879 --> 00:32:57,879
 all, this is a five, seven, six, and six, six, and five, right, so, so you get the best,

255
00:32:58,960 --> 00:33:05,960
 ah, so we actually can select this five, but suppose we select this five, is there any

256
00:33:08,120 --> 00:33:15,120
 reason I can select this five, not really, so suppose it's just lucky, we select this

257
00:33:15,399 --> 00:33:20,520
 one, because they are identical, and even I say alphabetical could be here, right, because

258
00:33:20,520 --> 00:33:27,520
 this is F, E, right, this is I, okay, so actually I can end up this side, but suppose I'm

259
00:33:29,000 --> 00:33:34,879
 ending random, take one of it, you know, out of the, with the same value, I take the same

260
00:33:34,879 --> 00:33:40,879
 one, I randomly pick one, so I'm lucky I took this one, and then I have these two, expand

261
00:33:40,879 --> 00:33:47,879
 it, so then you have a five, seven, seven, six, six, six, and five there, so I'm lucky

262
00:33:50,879 --> 00:33:57,879
 again, take this five, then I find the answer, yeah, so this is, this is the high, this is

263
00:33:58,800 --> 00:34:05,800
 how we make use of the evaluation function, with the best first search, we actually find

264
00:34:06,560 --> 00:34:13,560
 the goal, with how many steps are, with this path, okay, that is exactly the number, the

265
00:34:20,480 --> 00:34:27,480
 states we evaluated, do you still remember how to do this with the best first search,

266
00:34:29,320 --> 00:34:36,320
 or that first search, BFS, DFS, how many steps we actually had to go through, this picture,

267
00:34:39,800 --> 00:34:46,800
 oh, sorry, this is something we just run it, okay, so yeah, in the beginning, remember

268
00:34:46,800 --> 00:34:53,800
 the best first search, we have open and closed list, so starting state put in, so that is

269
00:34:54,360 --> 00:35:01,360
 our A4, and then the children, so these three, BCD, now BCD with the value, we don't care

270
00:35:03,280 --> 00:35:09,280
 insert into the open from which side, but we sort it, right, so sorting, that's why

271
00:35:09,280 --> 00:35:16,080
 we get the C4, and then C4 was evaluated, so it's not the goal yet, then you have to

272
00:35:16,080 --> 00:35:23,080
 expand the children of the C4, that's why we have an EFG there, and EFGH add-in, and

273
00:35:24,800 --> 00:35:31,800
 it's happened to be, yeah, then I actually checked the E, oh, I checked the E, okay,

274
00:35:31,800 --> 00:35:38,800
 oh, actually I did check the E, okay, I did check the E, so those children actually also

275
00:35:39,600 --> 00:35:46,600
 in the open, okay, so it's the children, the H and J was added as well, yeah, was added,

276
00:35:47,600 --> 00:35:54,600
 H and L, right, yeah, so they were added, so these are how we actually go through, okay,

277
00:36:01,120 --> 00:36:08,120
 so total just the seven steps, we find the answer, let's see how that was a memory used,

278
00:36:09,120 --> 00:36:16,120
 right, so this is the first one, then those, the light blue, see the light blue, light

279
00:36:18,400 --> 00:36:25,400
 blue, light blue here, those are the things in the closed list, sorry, in the open list,

280
00:36:28,160 --> 00:36:34,160
 this is the darker one, this is lighter one, okay, darker one was those actually in the

281
00:36:34,319 --> 00:36:41,319
 closed list, when we actually finished checking this few, these three, okay, so that's how

282
00:36:42,240 --> 00:36:49,240
 we get the answer, and that was the one, we use BFS, oh, sorry, this is the one we actually

283
00:36:55,080 --> 00:37:02,080
 get the answer, right, yeah, so in the end, this is how we reach these states, okay,

284
00:37:04,839 --> 00:37:11,839
 so I put the three together, so this is 46 steps using the BFS, BFS, 31, and this one,

285
00:37:16,920 --> 00:37:23,920
 7, right, so of course heuristic definitely will help, that's why we need to have a heuristic

286
00:37:26,160 --> 00:37:33,160
 in the search, we cannot do the exhaustive search, right, but the how to design with

287
00:37:33,160 --> 00:37:40,160
 the idea, how to actually have a very good way to estimate the cost that is challenging

288
00:37:41,720 --> 00:37:48,720
 and problem dependent, okay, okay, do you have any quick questions regarding this part?

289
00:37:55,440 --> 00:38:02,440
 Then another example, okay, because the first example so far I just showed you, I just showed

290
00:38:03,560 --> 00:38:10,560
 you, with the help of heuristics, actually we can find the answer much quicker, right,

291
00:38:10,560 --> 00:38:17,560
 so that is critical if you have limited time and also limited memory space, if you want

292
00:38:18,399 --> 00:38:25,399
 to find the answer, especially for those very challenging games like Go, right, so even the

293
00:38:25,640 --> 00:38:31,640
 toy problem we can see the difference, then what about just now we say the A star, okay,

294
00:38:32,200 --> 00:38:39,200
 the A star or just greedy best first search, how this can be applied for this finding,

295
00:38:40,040 --> 00:38:47,040
 you know, the past, okay, so let's look at this map and together with some information

296
00:38:49,759 --> 00:38:56,759
 about the distance of their actual mileage or actual road you need to drive, okay, to

297
00:38:57,760 --> 00:39:04,760
 reach one place to another, so this is the number you indicate on the map is actually

298
00:39:05,080 --> 00:39:12,080
 that I would say just actual probably the road, the distance, okay, and then we have

299
00:39:13,720 --> 00:39:20,720
 this information here is the heuristic value, this is the straight line distance, okay,

300
00:39:20,720 --> 00:39:27,720
 so from each of the city here like A, like B to the goal, goal probably is their capital,

301
00:39:28,359 --> 00:39:35,359
 so this is the Budapest, Buda rest, okay, so this is the B, so of course itself to itself

302
00:39:35,600 --> 00:39:42,600
 is zero and then from the arat to this place is the km miles, okay, and then so we are

303
00:39:42,759 --> 00:39:49,759
 using greedy best first search that means we don't consider the G, okay, actually we

304
00:39:52,880 --> 00:39:59,880
 starting from this place, they are right and then we want to reach the bug rest, okay,

305
00:40:00,040 --> 00:40:07,040
 so from the A to the B, okay, so the red line is I just added to help us visualize this

306
00:40:07,360 --> 00:40:14,360
 value here, okay, so you see this is not the distance we add up from one place to go through

307
00:40:23,920 --> 00:40:30,920
 some places to go through some cities and to reach this goal state, okay, so it's a suppose

308
00:40:31,400 --> 00:40:37,920
 that is a direct line, although that is probably don't have such road, right, it's just in the

309
00:40:37,920 --> 00:40:44,920
 map measure a direct distance, so that is the one provided here, so it just indicate one

310
00:40:44,920 --> 00:40:51,920
 for us so we know the like from C to the distance of, I mean C to B is 160, so C where is C,

311
00:40:52,920 --> 00:40:59,920
 okay, from here, so the direct distance is this, okay, although probably that's no, it's

312
00:41:04,720 --> 00:41:09,720
 a mountain there so it's no way for you to drive through, okay, but this is what we have

313
00:41:09,720 --> 00:41:16,720
 here, okay, so now let's use this map together with this very ideal hn, okay, and then we

314
00:41:21,920 --> 00:41:28,920
 are going to use a greedy best search, best first search to find the path from A to B,

315
00:41:31,800 --> 00:41:38,800
 okay, so how should we start? Starting from starting states, right, A, yes, from here,

316
00:41:42,120 --> 00:41:49,120
 then what about the branches of A? Go states is here, huh, yeah, so what are the possible

317
00:41:52,880 --> 00:41:59,880
 next moves? How many? Three, yeah, so one is this one, this one, this one, yeah, so we

318
00:42:10,240 --> 00:42:17,240
 have Z, then we have S, then we have T, right, so you can have the three branches and then

319
00:42:18,040 --> 00:42:25,040
 we can label them with the distance, okay, so that is the one, we expanding, that's a

320
00:42:30,200 --> 00:42:36,200
 legal one, right, we have, it's possible, we can move to expand to here, expand to this

321
00:42:36,200 --> 00:42:43,200
 city, expand to this city, and then what is this value here?

322
00:42:48,240 --> 00:42:55,240
 How do we get this value? From, we only use h, right, did we use g? No, that's why we

323
00:43:06,759 --> 00:43:13,759
 get directly from here, so yeah, confirm S, S where is S, yeah, this is S, right, yeah,

324
00:43:14,760 --> 00:43:21,760
 so this is the value, h value, h value, h value, okay, so then best first search, which

325
00:43:22,000 --> 00:43:29,000
 one we should pick? This is a cost, so the lowest, lowest is the best, right, okay, so

326
00:43:30,360 --> 00:43:37,360
 lowest, yes, that's why we should expand this one, so expand this one, then we draw, what

327
00:43:38,360 --> 00:43:45,360
 are the things, next one for this, after you reach this place for the S, then we can

328
00:43:46,800 --> 00:43:53,800
 have O, then we have F, then we have RV, right, yeah, so another tree expanded, and then for

329
00:43:56,720 --> 00:44:03,720
 each of these, look for that h value, then we can label the, that is our h value, and

330
00:44:04,040 --> 00:44:11,040
 based on that, we sort it again, then see which city to be expanded again, right, okay,

331
00:44:11,120 --> 00:44:18,120
 so that's what we did, the 1234 actually, and then, oh yeah, this one, don't forget,

332
00:44:18,200 --> 00:44:24,040
 we can actually go back, all right, now we are here, so this is both direction, so you

333
00:44:24,040 --> 00:44:31,040
 can actually have another way back to here, yeah, so that is, and then we choose the best,

334
00:44:32,040 --> 00:44:39,040
 okay, because this value now is, we updated from this table, right, so it's not, you

335
00:44:39,800 --> 00:44:46,800
 can still appear, you see, exactly same, but have a different h value, then this one,

336
00:44:47,200 --> 00:44:54,200
 expanded, and so on, okay, I think you get it, so this is, get it, expanded, so we are

337
00:44:55,120 --> 00:45:02,120
 here, oh sorry, we are here, and then we have this way, or you are all the way to reach

338
00:45:02,600 --> 00:45:09,600
 the goal, and so, so we find it, okay, so then where's the total distance from the a to

339
00:45:14,160 --> 00:45:21,160
 b, since we actually, we go this way, this way, and this way, is that, so we add up,

340
00:45:25,200 --> 00:45:32,200
 this is 450, okay, then what about if we, so I highlighted by this yellow color, that

341
00:45:37,240 --> 00:45:44,240
 is the path we actually can reach from a to b, then what if we go, we are using the,

342
00:45:46,359 --> 00:45:53,359
 we are using the both, okay, we are using the best first, not great, but we are using

343
00:45:54,839 --> 00:46:01,839
 the best first, okay, we are using the best first, and then we actually still want to use

344
00:46:05,879 --> 00:46:12,879
 this, okay, also, that is a straight line, and then this one, I'm not sure whether this

345
00:46:15,520 --> 00:46:22,520
 is really a, probably safer to say, is a distance, okay, because I'm not sure, okay,

346
00:46:24,200 --> 00:46:29,640
 whether this is really a straight line, they didn't say anything about that really,

347
00:46:29,640 --> 00:46:36,640
 yeah, so I feel probably safer to say the distance, because that is only indicate the level,

348
00:46:36,640 --> 00:46:43,640
 so from the starting state, okay, so, yeah, so very much the same thing we want to apply,

349
00:46:44,439 --> 00:46:50,040
 but it's just an evaluation function now, you have two values, okay, so we need to take

350
00:46:50,040 --> 00:46:57,040
 the gn into consideration as well, okay, so that is how do we do it, yeah, so basically,

351
00:46:59,840 --> 00:47:06,840
 previously we only use this h, now we need to have the gn as well, okay, so for the

352
00:47:07,800 --> 00:47:14,800
 gn, we know from here, we know from here to this, this is a distance, right, distance,

353
00:47:15,640 --> 00:47:22,640
 so we just add this into that, to be the total value for this note, that is an evaluation

354
00:47:24,040 --> 00:47:31,040
 value for this, and this, and this, how we get it, okay, then based on this, the best

355
00:47:31,040 --> 00:47:38,040
 value is still this one, right, so this one should be expanded, yeah, so this is a full

356
00:47:38,800 --> 00:47:45,800
 value, similarly, we know how we get it, how do we get it, 280 here, gn, gn, from starting

357
00:47:54,520 --> 00:48:01,520
 state to this particular state, so starting state to this state is from here to here,

358
00:48:01,520 --> 00:48:08,520
 then here, right, so 1,4,0 plus 1,4,0, okay, so that's how we get it, okay, so remember,

359
00:48:18,720 --> 00:48:24,080
 the definition is from starting state to the current state, okay, so that's why it's

360
00:48:24,080 --> 00:48:30,000
 two times, because starting state come to here, then reach the current state, right,

361
00:48:30,120 --> 00:48:35,920
 so it's two times, so that's how we get it, okay, so yeah, also look at this, how you

362
00:48:35,920 --> 00:48:42,920
 get it, and we know how to expand, and this is how we expand it, so this is how we actually

363
00:48:43,440 --> 00:48:50,440
 get the answer, looks like, yeah, we go several different places, we expand this one, then

364
00:48:52,440 --> 00:48:58,360
 we get this, and then we actually come to this side, and then, because, best first, but

365
00:48:58,400 --> 00:49:03,960
 not, the other candidate is still there, right, so we can still find the best after, I mean,

366
00:49:03,960 --> 00:49:09,200
 after we expand, we find this is not the right one, then we go this branch, and then we expand,

367
00:49:09,200 --> 00:49:16,200
 and then we go here, and then we find this is a shelter, oh, sorry, initially go there,

368
00:49:16,920 --> 00:49:23,920
 yeah, then we come here, so we find this is better, okay, so this is the actual venture,

369
00:49:28,520 --> 00:49:35,280
 so now, this give us a total distance, this is the one, okay, so it's better than using

370
00:49:35,280 --> 00:49:42,280
 the greedy best first search, why, why this is better, one thing is we take the G into

371
00:49:42,280 --> 00:49:49,280
 consideration, then the most important one is the HN, right, the HN actually is the direct

372
00:50:01,240 --> 00:50:08,240
 distance, so the direct distance can be, the actual cost can be, the actual cost can be,

373
00:50:13,280 --> 00:50:20,280
 higher, yeah, than the direct value, right, yeah, that's why, okay, so that's all for

374
00:50:28,480 --> 00:50:35,480
 this part, I think we are done with this, for, to highlight the difference between like

375
00:50:36,480 --> 00:50:43,480
 use greedy or versus the A star, or just actually sometimes it's, people also call it A star,

376
00:50:44,920 --> 00:50:51,920
 but the A star is without the H become the admissible, okay, so if it is, then we can

377
00:50:54,160 --> 00:51:01,160
 find the optimal answer, otherwise cannot, okay, but you can see the still, the big issue

378
00:51:01,680 --> 00:51:08,680
 is, can run out the memory, right, so the memory requirement, time requirement is still very,

379
00:51:11,359 --> 00:51:18,359
 very high, so, so, although even you have a good heuristic value, but you don't have

380
00:51:19,000 --> 00:51:26,000
 the space to hold, all the candidates, right, and also you have problem to wait for so long,

381
00:51:27,000 --> 00:51:34,000
 so that is a thing, so it's still not very practical for very large scale problem, okay,

382
00:51:34,120 --> 00:51:41,120
 so that is the main issue, okay, so yeah, I think your turn to have, to do something,

383
00:51:44,280 --> 00:51:51,280
 okay, so the exercise, we went through the example already, so now you try the exercises,

384
00:51:51,680 --> 00:51:58,680
 okay, then we hand run this, it's a very small problem, very simple one, exercise, so one

385
00:51:58,920 --> 00:52:05,520
 is to run this, then two is to have, it's something about the concept, okay, so sometimes

386
00:52:05,520 --> 00:52:11,600
 there's no evaluation function available, okay, for a particular problem, but that's

387
00:52:11,600 --> 00:52:17,160
 a good comparison method, can be applied, okay, so in a way it's a ruler, so a way to

388
00:52:17,160 --> 00:52:23,080
 tell if a note is better than another, so you can compare, okay, without actually assign

389
00:52:23,080 --> 00:52:30,080
 their numerical values, so is this good enough to do best for search, okay, so that's the

390
00:52:30,080 --> 00:52:36,080
 concept, then lastly, yeah, just to, starting from this state, so this is a goal state,

391
00:52:36,080 --> 00:52:41,640
 okay, so you see the A puzzle problem, we are not sorting around the site, but we actually

392
00:52:41,640 --> 00:52:48,640
 are sorting line by line, okay, a row by row, so that's a goal state, so we want you to

393
00:52:50,400 --> 00:52:57,400
 have two H to work out, what is the value for it, okay, so yeah, very, very simple question,

394
00:52:58,480 --> 00:53:05,480
 okay, so spend some time on this, and then we can quickly check answer, or you can have

395
00:53:06,480 --> 00:53:13,480
 a toilet break now, so maybe 10 minutes, 10 minutes, enough for this exercise, okay,

396
00:53:17,160 --> 00:53:24,160
 work on this first, okay, so we have a total of 10 minutes, okay, so we have a total of

397
00:53:35,480 --> 00:53:42,480
 10 minutes, okay, so we have a total of 10 minutes, okay, so we have a total of 10 minutes,

398
00:53:42,480 --> 00:53:49,480
 okay, so we have a total of 10 minutes, okay, so we have a total of 10 minutes, okay,

399
00:53:52,480 --> 00:53:59,480
 so we have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so

400
00:54:05,480 --> 00:54:12,480
 we have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

401
00:54:12,480 --> 00:54:19,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we have

402
00:54:22,480 --> 00:54:29,480
 a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we have a total

403
00:54:29,480 --> 00:54:36,480
 of 10 minutes, okay, so we have a total of 10 minutes, okay, so we have a total of 10

404
00:54:36,480 --> 00:54:43,480
 minutes, okay, so we have a total of 10 minutes, okay, so we have a total of 10 minutes,

405
00:54:44,480 --> 00:54:51,480
 okay, so we have a total of 10 minutes, okay, so we have a total of 10 minutes, okay,

406
00:54:51,480 --> 00:54:58,480
 so we have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so

407
00:54:58,480 --> 00:55:05,480
 we have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

408
00:55:06,480 --> 00:55:13,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

409
00:55:13,480 --> 00:55:20,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

410
00:55:20,480 --> 00:55:26,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

411
00:55:26,480 --> 00:55:32,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

412
00:55:32,480 --> 00:55:38,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

413
00:55:38,480 --> 00:55:45,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

414
00:55:45,480 --> 00:55:51,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

415
00:55:51,480 --> 00:55:57,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

416
00:55:57,480 --> 00:56:03,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

417
00:56:03,480 --> 00:56:10,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

418
00:56:10,480 --> 00:56:16,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

419
00:56:16,480 --> 00:56:22,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

420
00:56:22,480 --> 00:56:28,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

421
00:56:28,480 --> 00:56:35,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

422
00:56:35,480 --> 00:56:41,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

423
00:56:41,480 --> 00:56:47,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

424
00:56:47,480 --> 00:56:53,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

425
00:56:53,480 --> 00:57:00,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

426
00:57:00,480 --> 00:57:06,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

427
00:57:06,480 --> 00:57:12,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

428
00:57:12,480 --> 00:57:18,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

429
00:57:18,480 --> 00:57:25,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

430
00:57:25,480 --> 00:57:31,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

431
00:57:31,480 --> 00:57:37,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

432
00:57:37,480 --> 00:57:43,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

433
00:57:43,480 --> 00:57:50,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

434
00:57:50,480 --> 00:57:56,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

435
00:57:56,480 --> 00:58:02,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

436
00:58:02,480 --> 00:58:08,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

437
00:58:08,480 --> 00:58:15,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

438
00:58:15,480 --> 00:58:21,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

439
00:58:21,480 --> 00:58:27,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

440
00:58:27,480 --> 00:58:33,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

441
00:58:33,480 --> 00:58:40,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

442
00:58:40,480 --> 00:58:46,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

443
00:58:46,480 --> 00:58:52,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

444
00:58:52,480 --> 00:58:58,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

445
00:58:58,480 --> 00:59:05,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

446
00:59:05,480 --> 00:59:11,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

447
00:59:11,480 --> 00:59:17,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

448
00:59:17,480 --> 00:59:23,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

449
00:59:23,480 --> 00:59:30,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

450
00:59:30,480 --> 00:59:36,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

451
00:59:36,480 --> 00:59:42,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

452
00:59:42,480 --> 00:59:48,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

453
00:59:48,480 --> 00:59:55,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

454
00:59:55,480 --> 01:00:01,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

455
01:00:01,480 --> 01:00:07,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

456
01:00:07,480 --> 01:00:13,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

457
01:00:13,480 --> 01:00:20,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

458
01:00:20,480 --> 01:00:26,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

459
01:00:26,480 --> 01:00:32,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

460
01:00:32,480 --> 01:00:38,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

461
01:00:38,480 --> 01:00:45,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

462
01:00:45,480 --> 01:00:51,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

463
01:00:51,480 --> 01:00:57,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

464
01:00:57,480 --> 01:01:03,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

465
01:01:03,480 --> 01:01:10,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

466
01:01:10,480 --> 01:01:16,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

467
01:01:16,480 --> 01:01:22,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

468
01:01:22,480 --> 01:01:28,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

469
01:01:28,480 --> 01:01:35,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

470
01:01:35,480 --> 01:01:41,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

471
01:01:41,480 --> 01:01:47,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

472
01:01:47,480 --> 01:01:53,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

473
01:01:53,480 --> 01:02:00,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

474
01:02:00,480 --> 01:02:06,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

475
01:02:06,480 --> 01:02:12,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

476
01:02:12,480 --> 01:02:18,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

477
01:02:18,480 --> 01:02:25,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

478
01:02:25,480 --> 01:02:31,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

479
01:02:31,480 --> 01:02:37,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

480
01:02:37,480 --> 01:02:43,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

481
01:02:43,480 --> 01:02:50,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

482
01:02:50,480 --> 01:02:56,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

483
01:02:56,480 --> 01:03:02,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

484
01:03:02,480 --> 01:03:08,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

485
01:03:08,480 --> 01:03:15,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

486
01:03:15,480 --> 01:03:21,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

487
01:03:21,480 --> 01:03:27,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

488
01:03:27,480 --> 01:03:33,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

489
01:03:33,480 --> 01:03:40,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

490
01:03:40,480 --> 01:03:46,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

491
01:03:46,480 --> 01:03:52,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

492
01:03:52,480 --> 01:03:58,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

493
01:03:58,480 --> 01:04:05,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

494
01:04:05,480 --> 01:04:11,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

495
01:04:11,480 --> 01:04:17,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

496
01:04:17,480 --> 01:04:23,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

497
01:04:23,480 --> 01:04:30,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

498
01:04:30,480 --> 01:04:36,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

499
01:04:36,480 --> 01:04:42,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

500
01:04:42,480 --> 01:04:48,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

501
01:04:48,480 --> 01:04:55,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

502
01:04:55,480 --> 01:05:01,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

503
01:05:01,480 --> 01:05:07,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

504
01:05:07,480 --> 01:05:13,480
 have a total of 10 minutes, okay, so we have a total of 10 minutes, okay, so we

505
01:05:13,480 --> 01:05:29,480
 have a total of 10 minutes, okay, so let's go through this together, so you see,

506
01:05:29,480 --> 01:05:36,480
 because the two things we need to pay attention to from the question, this set is

507
01:05:36,480 --> 01:05:38,440
 So that is a hand run.

508
01:05:38,440 --> 01:05:42,600
 And then we are using the greedy best first search.

509
01:05:42,600 --> 01:05:48,240
 Starting notes is A. Goal states is O.

510
01:05:48,240 --> 01:05:50,600
 So we want to reach here.

511
01:05:50,600 --> 01:05:52,280
 We want to reach here.

512
01:05:52,280 --> 01:05:57,880
 Starting from A. And then the H value was attached.

513
01:05:57,880 --> 01:06:02,680
 Do we need to consider the G for greedy?

514
01:06:02,680 --> 01:06:04,320
 No, right.

515
01:06:04,320 --> 01:06:06,760
 So we don't care about the level.

516
01:06:06,760 --> 01:06:10,720
 That means we don't care how far from the starting states.

517
01:06:10,720 --> 01:06:12,280
 So we just use this.

518
01:06:12,280 --> 01:06:18,600
 But we do notice that actually more than one pass

519
01:06:18,600 --> 01:06:21,760
 can lead to one note.

520
01:06:21,760 --> 01:06:23,000
 So that is something.

521
01:06:29,440 --> 01:06:32,760
 If we are hand run this for best first search

522
01:06:32,760 --> 01:06:37,280
 or greedy best first search or A star or whatever.

523
01:06:37,280 --> 01:06:39,480
 Although just now I showed you the example,

524
01:06:39,480 --> 01:06:41,680
 try to, especially about the map,

525
01:06:41,680 --> 01:06:43,760
 actually we try to base on the map

526
01:06:43,760 --> 01:06:46,200
 to see how the tree is spanned.

527
01:06:46,200 --> 01:06:49,480
 But it's actually good to have.

528
01:06:53,320 --> 01:06:58,800
 Actually it's good to just look at the open and closed list.

529
01:06:58,800 --> 01:07:00,200
 What's wrong with this side?

530
01:07:03,440 --> 01:07:05,440
 22.

531
01:07:08,320 --> 01:07:10,640
 OK, so let's look at this.

532
01:07:10,640 --> 01:07:13,480
 We have open and then closed list.

533
01:07:13,480 --> 01:07:16,440
 And then step zero is a starting state.

534
01:07:16,440 --> 01:07:18,280
 Closed have nobody.

535
01:07:18,280 --> 01:07:20,920
 And then we check the A is not the goal.

536
01:07:20,920 --> 01:07:24,120
 So the children put in.

537
01:07:24,120 --> 01:07:28,360
 OK, then together with the H value.

538
01:07:28,360 --> 01:07:32,520
 So after you add into the list, then we sort it.

539
01:07:32,520 --> 01:07:33,759
 We're sorting.

540
01:07:33,759 --> 01:07:36,480
 And then the best one on the left most.

541
01:07:36,480 --> 01:07:39,960
 Because this is cost, so the lower the better.

542
01:07:39,960 --> 01:07:43,120
 That's why B is the first element.

543
01:07:43,120 --> 01:07:46,880
 And then sort the rest.

544
01:07:46,880 --> 01:07:49,640
 Then we take the left most.

545
01:07:49,640 --> 01:07:50,680
 Evaluate this one.

546
01:07:50,680 --> 01:07:52,840
 So B, to check whether B is the goal.

547
01:07:52,840 --> 01:07:54,560
 B is not goal yet.

548
01:07:54,560 --> 01:07:58,560
 Then children of the B. So children of the B,

549
01:07:58,560 --> 01:08:01,920
 these other children of the B, should be added.

550
01:08:19,920 --> 01:08:28,399
 So this is the F, M, G, H will be added.

551
01:08:29,520 --> 01:08:32,200
 And then we sort it.

552
01:08:32,200 --> 01:08:35,920
 So we're sorting with everybody here in the list.

553
01:08:35,920 --> 01:08:40,400
 So we have M, the best on the left.

554
01:08:40,400 --> 01:08:43,080
 OK, so basically we just do like this.

555
01:08:43,080 --> 01:08:47,640
 And then followed by next one is children of the.

556
01:08:47,640 --> 01:08:49,200
 So M is not the goal yet.

557
01:08:49,200 --> 01:08:52,880
 Then the children is the N. So the N should be added

558
01:08:52,880 --> 01:08:56,320
 into the open.

559
01:08:56,359 --> 01:09:01,000
 And then children have the one, value one.

560
01:09:01,000 --> 01:09:02,399
 So N will be the next.

561
01:09:05,359 --> 01:09:07,399
 I cannot.

562
01:09:07,399 --> 01:09:08,799
 I have to do like this.

563
01:09:08,799 --> 01:09:11,880
 OK, I know my I just cancel this.

564
01:09:11,880 --> 01:09:15,559
 Cover all the way.

565
01:09:22,439 --> 01:09:25,960
 So you see the N coming.

566
01:09:26,000 --> 01:09:30,200
 Then the rest is still from the previous one, the sorted there.

567
01:09:30,200 --> 01:09:31,240
 N was checked.

568
01:09:31,240 --> 01:09:33,160
 N is not the goal yet.

569
01:09:33,160 --> 01:09:35,040
 N have no children.

570
01:09:35,040 --> 01:09:38,120
 Then N throw into the closed.

571
01:09:38,120 --> 01:09:41,480
 Then H. OK, then H also.

572
01:09:41,480 --> 01:09:43,359
 Any children for H?

573
01:09:43,359 --> 01:09:47,520
 Yes, H have N, but N already appear before.

574
01:09:47,520 --> 01:09:53,000
 Although we are reaching the N in the same path, same length.

575
01:09:53,000 --> 01:09:56,320
 But we are not adding anymore.

576
01:09:56,320 --> 01:10:00,120
 So based on the best first search actually.

577
01:10:00,120 --> 01:10:01,840
 No need to add.

578
01:10:01,840 --> 01:10:06,400
 So the rest, and then H was checked.

579
01:10:06,400 --> 01:10:08,920
 Then G was checked.

580
01:10:08,920 --> 01:10:12,480
 F had children.

581
01:10:12,480 --> 01:10:17,520
 F children L, M. Then M was reached before,

582
01:10:17,520 --> 01:10:19,520
 was shorter than current.

583
01:10:19,520 --> 01:10:21,640
 So M shouldn't add in.

584
01:10:21,640 --> 01:10:24,040
 And then the L was added.

585
01:10:24,040 --> 01:10:26,000
 L then sorted.

586
01:10:26,000 --> 01:10:27,200
 So this is sorting.

587
01:10:27,200 --> 01:10:28,800
 And then we go.

588
01:10:28,800 --> 01:10:31,800
 So this is how we reach the answer.

589
01:10:35,200 --> 01:10:40,920
 OK, so this is a hand run of this best first search.

590
01:10:44,880 --> 01:10:45,640
 Any question?

591
01:10:46,600 --> 01:10:52,520
 Then of course, slightly more comprehensive would be,

592
01:10:52,520 --> 01:10:55,760
 I give you a heuristic value.

593
01:10:55,760 --> 01:10:58,440
 I mean, I give you an evaluation function.

594
01:10:58,440 --> 01:11:04,440
 And I ask you to do it together with,

595
01:11:04,440 --> 01:11:06,720
 either greedy or not greedy.

596
01:11:06,720 --> 01:11:08,360
 The best first search.

597
01:11:08,360 --> 01:11:10,520
 Consider the G as well.

598
01:11:10,520 --> 01:11:13,720
 And then you need to every step evaluate it.

599
01:11:14,720 --> 01:11:18,440
 The F function, F value.

600
01:11:18,440 --> 01:11:22,560
 And then apply the best first search accordingly.

601
01:11:22,560 --> 01:11:28,080
 Also can run manually for toy problem, for example.

602
01:11:28,080 --> 01:11:30,880
 Can do it?

603
01:11:30,880 --> 01:11:35,440
 Or as you, yeah, either greedy, that means no G.

604
01:11:35,440 --> 01:11:39,040
 If it's not greedy, then have the G.

605
01:11:39,040 --> 01:11:41,960
 And this will be your extra exercise.

606
01:11:41,960 --> 01:11:45,000
 Extra homework later.

607
01:11:45,000 --> 01:11:50,680
 Oh, have you done the extra exercise for last week?

608
01:11:50,680 --> 01:11:52,920
 I forgot to mention to your group,

609
01:11:52,920 --> 01:11:57,520
 HAI makes that available last week, Friday.

610
01:11:57,520 --> 01:12:01,560
 So you have extra exercise for extra homework one.

611
01:12:01,560 --> 01:12:03,880
 But it's not really assessive.

612
01:12:03,880 --> 01:12:05,120
 No need to be assessed.

613
01:12:05,120 --> 01:12:08,600
 And also no discussion about that.

614
01:12:08,600 --> 01:12:11,240
 The solution will be available.

615
01:12:11,360 --> 01:12:13,920
 Have I made the available already?

616
01:12:13,920 --> 01:12:14,599
 I forgot.

617
01:12:14,599 --> 01:12:17,360
 It's until you learn the course website.

618
01:12:17,360 --> 01:12:19,400
 So just check that.

619
01:12:19,400 --> 01:12:22,480
 So for my part, actually, you do have extra exercise,

620
01:12:22,480 --> 01:12:24,840
 just for your practice only.

621
01:12:24,840 --> 01:12:30,639
 It's not for CA components.

622
01:12:30,639 --> 01:12:31,519
 But be careful.

623
01:12:31,519 --> 01:12:34,920
 Prof loan and Prof time part, they are homework

624
01:12:34,920 --> 01:12:35,840
 will be assessed.

625
01:12:35,840 --> 01:12:36,340
 OK.

626
01:12:39,160 --> 01:12:41,560
 OK, so this one, any question?

627
01:12:44,160 --> 01:12:49,120
 So this is exercise one in this topic.

628
01:12:49,120 --> 01:12:55,040
 Exercise two, assess this one.

629
01:12:55,040 --> 01:12:56,040
 So is that OK?

630
01:12:56,040 --> 01:13:03,400
 Do we always have FX function and how to evaluate the H,

631
01:13:03,400 --> 01:13:04,080
 for example?

632
01:13:04,080 --> 01:13:08,920
 Is this H have to be calculated?

633
01:13:08,920 --> 01:13:14,080
 Have to have a formula or some specific rule?

634
01:13:14,080 --> 01:13:17,400
 Or can we just have a comparison?

635
01:13:17,400 --> 01:13:19,960
 Is that OK to do the best first search?

636
01:13:24,080 --> 01:13:27,080
 OK.

637
01:13:27,080 --> 01:13:27,920
 Why is it OK?

638
01:13:27,920 --> 01:13:32,920
 Yeah.

639
01:13:32,920 --> 01:13:35,120
 We only need to know best.

640
01:13:35,120 --> 01:13:39,240
 We only need to know the rank.

641
01:13:39,240 --> 01:13:41,400
 We only need to know the rank.

642
01:13:41,400 --> 01:13:45,520
 So as long as we can rank them, we know how to pick the best.

643
01:13:45,520 --> 01:13:49,200
 And from the pick the best, then we know the children.

644
01:13:49,200 --> 01:13:52,120
 And the children also can rank them

645
01:13:52,120 --> 01:13:57,800
 with all their siblings, or their uncles,

646
01:13:57,800 --> 01:14:03,280
 grandparents, grand uncles, basically can rank.

647
01:14:03,280 --> 01:14:07,960
 So as long as you can rank them, then we can decide which one.

648
01:14:07,960 --> 01:14:10,800
 OK, so the question two is easy.

649
01:14:10,800 --> 01:14:16,360
 Question three, what is the value?

650
01:14:16,360 --> 01:14:18,120
 So this is the current state.

651
01:14:18,120 --> 01:14:20,720
 This is the goal state.

652
01:14:20,760 --> 01:14:23,760
 So we are using H1.

653
01:14:23,760 --> 01:14:27,160
 First heuristic function is to work out

654
01:14:27,160 --> 01:14:30,360
 number of the misplaced tiles.

655
01:14:30,360 --> 01:14:32,320
 So what's the value?

656
01:14:32,320 --> 01:14:33,080
 This is the current one.

657
01:14:33,080 --> 01:14:34,720
 This is the goal state.

658
01:14:37,840 --> 01:14:41,480
 One out of space.

659
01:14:41,480 --> 01:14:42,400
 One is here.

660
01:14:42,400 --> 01:14:43,880
 One should be here.

661
01:14:43,880 --> 01:14:45,360
 One out of place.

662
01:14:45,360 --> 01:14:48,040
 Two out of place.

663
01:14:48,040 --> 01:14:49,040
 No.

664
01:14:49,040 --> 01:14:50,440
 Two is here.

665
01:14:51,320 --> 01:14:52,960
 So in the right place.

666
01:14:52,960 --> 01:14:54,679
 Three out of space.

667
01:14:54,679 --> 01:14:55,919
 Three out of the place.

668
01:14:55,919 --> 01:14:56,919
 Three.

669
01:14:56,919 --> 01:14:58,080
 OK, three.

670
01:14:58,080 --> 01:14:59,919
 Four.

671
01:14:59,919 --> 01:15:00,919
 Four.

672
01:15:00,919 --> 01:15:03,440
 Five.

673
01:15:03,440 --> 01:15:04,360
 Out.

674
01:15:04,360 --> 01:15:06,599
 Six.

675
01:15:06,599 --> 01:15:08,000
 Six, OK.

676
01:15:08,000 --> 01:15:09,480
 Seven.

677
01:15:09,480 --> 01:15:10,719
 Out.

678
01:15:10,719 --> 01:15:11,879
 Eight.

679
01:15:11,879 --> 01:15:13,960
 Out.

680
01:15:13,960 --> 01:15:16,240
 So we get the value.

681
01:15:16,240 --> 01:15:17,120
 OK.

682
01:15:17,120 --> 01:15:20,080
 Then another one is use Manhattan distance.

683
01:15:22,840 --> 01:15:25,080
 You know how to calculate, right?

684
01:15:25,080 --> 01:15:26,360
 OK, great.

685
01:15:26,360 --> 01:15:27,720
 So that's all.

686
01:15:32,519 --> 01:15:35,320
 So this is what we are saying, the second one.

687
01:15:35,320 --> 01:15:38,920
 And yeah, so we just, oh, yeah, for this one,

688
01:15:38,920 --> 01:15:40,840
 we need to calculate now.

689
01:15:40,840 --> 01:15:43,680
 So Manhattan distance.

690
01:15:43,680 --> 01:15:46,000
 So the one is here.

691
01:15:46,040 --> 01:15:51,360
 So basically, we have to go one, two, three, four.

692
01:15:51,360 --> 01:15:53,200
 So that's why four.

693
01:15:53,200 --> 01:15:54,840
 Then two.

694
01:15:54,840 --> 01:15:55,920
 Two is OK.

695
01:15:55,920 --> 01:15:57,280
 Two is zero.

696
01:15:57,280 --> 01:15:58,000
 Three.

697
01:15:58,000 --> 01:15:59,240
 Three is here.

698
01:15:59,240 --> 01:16:01,840
 Three is one, two, three.

699
01:16:01,840 --> 01:16:02,440
 So three.

700
01:16:05,760 --> 01:16:09,080
 For four, for five, for six.

701
01:16:09,080 --> 01:16:10,040
 Six, OK.

702
01:16:10,040 --> 01:16:13,240
 Yeah, then seven, eight.

703
01:16:13,240 --> 01:16:14,400
 So you get 14.

704
01:16:16,440 --> 01:16:17,920
 That's for second one.

705
01:16:17,920 --> 01:16:22,200
 First one is equal to six.

706
01:16:22,200 --> 01:16:23,560
 Correct?

707
01:16:23,560 --> 01:16:25,120
 Yeah, no need to take picture.

708
01:16:25,120 --> 01:16:28,600
 This exercise solution will be provided.

709
01:16:28,600 --> 01:16:31,560
 It's available tomorrow.

710
01:16:31,560 --> 01:16:33,600
 Tomorrow after the undergrad course.

711
01:16:36,240 --> 01:16:43,040
 OK, so we are done with this part A. Part A is about use

712
01:16:43,040 --> 01:16:45,040
 heuristics to search.

713
01:16:45,040 --> 01:16:49,480
 OK, so we go through the best first search algorithm.

714
01:16:49,480 --> 01:16:52,880
 And then also introduce the idea of the greedy.

715
01:16:52,880 --> 01:16:54,720
 OK, greedy best first.

716
01:16:54,720 --> 01:16:59,120
 Basically, we are not taking the G into consideration.

717
01:16:59,120 --> 01:17:02,240
 And then if we take both, also the H

718
01:17:02,240 --> 01:17:07,480
 have some special constraint that make the H always

719
01:17:07,480 --> 01:17:09,960
 underestimate the cost.

720
01:17:09,960 --> 01:17:12,400
 Then that is a very good one that

721
01:17:12,400 --> 01:17:14,720
 is can find the optimum answer.

722
01:17:14,920 --> 01:17:22,160
 Then we will call this special best first as A star.

723
01:17:22,160 --> 01:17:26,120
 So this is admittable the meaning of it.

724
01:17:26,120 --> 01:17:31,600
 So that must be always for each of the states.

725
01:17:31,600 --> 01:17:34,400
 Cannot be for all of each of the states.

726
01:17:34,400 --> 01:17:37,800
 The heuristic value is always less than or equal

727
01:17:37,800 --> 01:17:40,080
 to the actual cost.

728
01:17:40,080 --> 01:17:42,600
 So if that's the case.

729
01:17:42,600 --> 01:17:45,720
 OK, that's all for this.

730
01:17:45,720 --> 01:17:49,920
 Then we can move on to the second half

731
01:17:49,920 --> 01:17:54,120
 of this topic, which is about heuristics, which

732
01:17:54,120 --> 01:17:56,600
 is about the gaming.

733
01:17:56,600 --> 01:18:00,320
 So we already know, OK, for setting heuristics,

734
01:18:00,320 --> 01:18:05,000
 it's really a big effort plus experience, plus skills.

735
01:18:05,000 --> 01:18:10,360
 And then try to come up with discrimination,

736
01:18:10,400 --> 01:18:16,320
 rules, equations to evaluate the best possibility

737
01:18:16,320 --> 01:18:18,120
 of reaching the goal.

738
01:18:18,120 --> 01:18:21,799
 We can actually successfully reach the goal.

739
01:18:21,799 --> 01:18:26,440
 So to find the question, find the answer,

740
01:18:26,440 --> 01:18:28,599
 and then improve the performance.

741
01:18:28,599 --> 01:18:33,639
 So for the gaming, as we said, we have opponents.

742
01:18:33,639 --> 01:18:35,759
 So it's an adversary.

743
01:18:35,759 --> 01:18:39,240
 So we need to have consider how the opponents play.

744
01:18:39,240 --> 01:18:42,320
 And then we will play accordingly.

745
01:18:42,320 --> 01:18:47,040
 So that's why we not just totally search passively,

746
01:18:47,040 --> 01:18:49,240
 search for answer.

747
01:18:49,240 --> 01:18:51,639
 So that's an important thing.

748
01:18:51,639 --> 01:18:53,240
 So for the game tree, then we have

749
01:18:53,240 --> 01:19:01,679
 to use this minimizer, which tries to minimize the cost.

750
01:19:01,679 --> 01:19:08,440
 So select the most lowest possible value to move towards.

751
01:19:08,440 --> 01:19:13,160
 And then maximizer is always put, select the best value

752
01:19:13,160 --> 01:19:14,879
 out of his children.

753
01:19:14,879 --> 01:19:18,639
 So that is a different strategy.

754
01:19:18,639 --> 01:19:23,679
 So we go for this minimax search and the pruning.

755
01:19:26,679 --> 01:19:30,799
 So the difference between just passively search for answer

756
01:19:30,799 --> 01:19:32,480
 and the one is a game.

757
01:19:32,480 --> 01:19:36,080
 So as we said, the key thing is we have opponents.

758
01:19:36,120 --> 01:19:37,880
 Also the time constraint.

759
01:19:37,880 --> 01:19:43,000
 Most likely, you cannot go forward many steps

760
01:19:43,000 --> 01:19:46,280
 in order to predict what your opponents will do,

761
01:19:46,280 --> 01:19:50,760
 how you react, then how your opponent do again

762
01:19:50,760 --> 01:19:53,400
 until you reach the final stage.

763
01:19:53,400 --> 01:19:56,240
 So it's very hard with a given time.

764
01:19:56,240 --> 01:20:01,720
 So that's why the time limit and also the depends

765
01:20:01,720 --> 01:20:04,120
 on your opponent's reaction.

766
01:20:04,160 --> 01:20:07,960
 So that's why it's really kind of we

767
01:20:07,960 --> 01:20:10,200
 can only based on the limited information

768
01:20:10,200 --> 01:20:14,360
 and try to find the best possible approximation

769
01:20:14,360 --> 01:20:19,640
 and the best optimal and suboptimal answer, for example.

770
01:20:19,640 --> 01:20:24,519
 And also the game is like although we know the rules,

771
01:20:24,519 --> 01:20:28,760
 we know how to play, but not everybody can play well.

772
01:20:28,760 --> 01:20:32,320
 So that is kind of intelligent activity.

773
01:20:32,320 --> 01:20:36,639
 We are not talking about carry out some routine job.

774
01:20:36,639 --> 01:20:37,840
 Just follow the rules.

775
01:20:37,840 --> 01:20:40,080
 Everything will be done successfully.

776
01:20:40,080 --> 01:20:41,599
 It's not talk about that.

777
01:20:41,599 --> 01:20:43,840
 It's a challenging issue.

778
01:20:43,840 --> 01:20:46,320
 Although we know the rule, but every minute,

779
01:20:46,320 --> 01:20:48,360
 you probably have decision making.

780
01:20:48,360 --> 01:20:49,679
 You have to make decision.

781
01:20:49,679 --> 01:20:53,120
 You have to decide which pass you are going to follow.

782
01:20:53,120 --> 01:20:55,679
 So you see those play, goal play.

783
01:20:55,679 --> 01:20:57,200
 You have so many options.

784
01:20:57,200 --> 01:20:59,840
 So which pass you are going to follow.

785
01:20:59,880 --> 01:21:05,240
 So this is if we can ignore the code, the program,

786
01:21:05,240 --> 01:21:08,560
 or the agent with the ability of such kind

787
01:21:08,560 --> 01:21:13,160
 of intelligent decision making and movement,

788
01:21:13,160 --> 01:21:16,720
 that means actually they have the intelligence.

789
01:21:16,720 --> 01:21:20,640
 So that is actually if you have this ability, that means,

790
01:21:20,640 --> 01:21:24,320
 especially if the ability is so powerful

791
01:21:24,320 --> 01:21:28,080
 and they can actually win or beat human,

792
01:21:28,120 --> 01:21:33,000
 that indicates the intelligent level they will have.

793
01:21:33,000 --> 01:21:38,400
 So that's why design game is interesting

794
01:21:38,400 --> 01:21:41,280
 to show artificial intelligence.

795
01:21:41,280 --> 01:21:46,280
 Artificial, because we actually try to,

796
01:21:46,280 --> 01:21:51,160
 the kind of intelligence is given by the designer

797
01:21:51,160 --> 01:21:54,000
 to the agent, and then hopefully agent

798
01:21:54,000 --> 01:21:57,200
 can make best use of this and try to achieve

799
01:21:57,240 --> 01:22:00,800
 some activities or tasks which needs

800
01:22:00,800 --> 01:22:02,519
 a so-called intelligence.

801
01:22:03,679 --> 01:22:08,679
 Okay, so the game, that's why we are talking about,

802
01:22:09,760 --> 01:22:14,760
 for the player, for example, if here is a maximizer player,

803
01:22:16,599 --> 01:22:20,280
 that means actually he want to choose the best value

804
01:22:20,280 --> 01:22:21,960
 from his candidates.

805
01:22:22,960 --> 01:22:26,080
 The try to get the best out of this.

806
01:22:26,120 --> 01:22:28,559
 Like for example, you are looking for a job

807
01:22:28,559 --> 01:22:32,519
 and then you have many options, offers for you,

808
01:22:32,519 --> 01:22:36,000
 and then you probably choose the best offer.

809
01:22:36,000 --> 01:22:41,000
 So you are a maximizer, maximized the best opportunity,

810
01:22:44,480 --> 01:22:48,360
 like the highest salary, you take that offer.

811
01:22:48,360 --> 01:22:53,360
 But what about your company, what about the employer?

812
01:22:53,719 --> 01:22:57,599
 Okay, so they have many candidates.

813
01:22:57,599 --> 01:23:02,599
 So they try to offer the lowest value,

814
01:23:02,920 --> 01:23:07,920
 as lowest salary as possible for the profit.

815
01:23:08,759 --> 01:23:13,400
 So you see the difference, so maximizer, minimizer.

816
01:23:13,400 --> 01:23:17,480
 So you are the maximizer, you try to get the opportunity

817
01:23:17,480 --> 01:23:21,480
 out of those offers, and then your employer

818
01:23:22,480 --> 01:23:26,320
 will be trying to actually try to give as little,

819
01:23:26,320 --> 01:23:29,120
 they want to have the best profits as possible,

820
01:23:29,120 --> 01:23:31,200
 so they want to cut salary.

821
01:23:31,200 --> 01:23:34,599
 So this is get the minimum out of it.

822
01:23:34,599 --> 01:23:38,519
 Okay, so then it's your turn to make decision again.

823
01:23:38,519 --> 01:23:39,879
 So it's like this.

824
01:23:39,879 --> 01:23:43,679
 Okay, so it's not totally like a game,

825
01:23:43,679 --> 01:23:47,000
 but it's in a way you try to maximize the opportunity,

826
01:23:47,000 --> 01:23:49,799
 you can win, and then your opponents try to minimize

827
01:23:49,800 --> 01:23:51,760
 the opportunity you can win.

828
01:23:51,760 --> 01:23:55,640
 So then he can actually have a chance.

829
01:23:55,640 --> 01:23:57,800
 So this is what we are talking about.

830
01:23:59,040 --> 01:24:04,040
 Okay, so if this game, we can really hold the whole thing.

831
01:24:04,120 --> 01:24:08,720
 So we have plenty space to hold all the possible states

832
01:24:08,720 --> 01:24:12,880
 like this, so this is if this is an entire game tree.

833
01:24:14,680 --> 01:24:17,960
 This is an entire game tree or game space we are having.

834
01:24:18,920 --> 01:24:21,120
 Then isn't it easy?

835
01:24:21,120 --> 01:24:23,440
 You know, we already have, this is winning

836
01:24:23,440 --> 01:24:25,440
 the final goal state already.

837
01:24:25,440 --> 01:24:28,240
 Each of these have a value attached with it,

838
01:24:28,240 --> 01:24:32,640
 like the particular cost or profits you have.

839
01:24:32,640 --> 01:24:37,120
 And then you say who the parents is this maximizer

840
01:24:37,120 --> 01:24:40,840
 or minimizer, so you just take the value accordingly.

841
01:24:40,840 --> 01:24:45,680
 Okay, so if I have a utility value or a evaluation value

842
01:24:45,720 --> 01:24:49,320
 already attached to each of these notes, terminal notes,

843
01:24:49,320 --> 01:24:52,040
 okay, then I just backwards, right?

844
01:24:52,040 --> 01:24:55,560
 So depends my parents, is this a maximizer?

845
01:24:55,560 --> 01:24:58,480
 If it's a maximizer, I will select the best

846
01:24:58,480 --> 01:25:00,760
 out of these children, right?

847
01:25:00,760 --> 01:25:05,160
 Then I have the utility value accordingly for this level.

848
01:25:05,160 --> 01:25:07,640
 Then for the next level, they will take,

849
01:25:07,640 --> 01:25:10,960
 this is a minimizer, so I will select the minimum value

850
01:25:10,960 --> 01:25:15,080
 out of my parents, out of my children, right?

851
01:25:15,480 --> 01:25:18,640
 So in that way, you can all the way feedback to here,

852
01:25:18,640 --> 01:25:22,200
 then you know what to do, which path to go, right?

853
01:25:23,720 --> 01:25:26,680
 So easy, problem can be solved.

854
01:25:28,480 --> 01:25:29,559
 But what's the issue?

855
01:25:32,200 --> 01:25:35,200
 Space and time, right?

856
01:25:35,200 --> 01:25:39,720
 So we don't have the space to hold all the possible branches,

857
01:25:39,720 --> 01:25:41,480
 all the possible states.

858
01:25:41,519 --> 01:25:46,519
 So this is the ideal case, but far away from reality, right?

859
01:25:47,160 --> 01:25:49,360
 So that is the issue.

860
01:25:49,360 --> 01:25:52,519
 So is there any alternative idea?

861
01:25:52,519 --> 01:25:55,440
 Okay, before we ask ourselves whether it's an alternative

862
01:25:55,440 --> 01:25:58,839
 idea, but we can think, okay, how to make use of this

863
01:25:58,839 --> 01:26:03,839
 mini max to play with a given depth, for example, okay?

864
01:26:04,400 --> 01:26:09,000
 Cannot entire until everything went, but we can actually

865
01:26:09,040 --> 01:26:11,680
 look ahead two or three steps.

866
01:26:11,680 --> 01:26:15,120
 And then based on that, we consider that is a terminal

867
01:26:15,120 --> 01:26:19,480
 node, sorry, and then we can actually use evaluation function

868
01:26:19,480 --> 01:26:22,240
 to evaluate what's the value, and then we backwards

869
01:26:22,240 --> 01:26:24,400
 to see what's the best path you can go.

870
01:26:25,320 --> 01:26:27,000
 At least we can do that.

871
01:26:27,000 --> 01:26:29,000
 Okay, so that is a mini max.

872
01:26:30,560 --> 01:26:32,080
 Let's take a look at this.

873
01:26:33,000 --> 01:26:35,800
 We are talking about Tic-Tac-Toe again here.

874
01:26:35,800 --> 01:26:40,400
 Okay, so yeah, starting from the empty box,

875
01:26:40,400 --> 01:26:44,080
 and then we have nine possible way as a cross player.

876
01:26:44,080 --> 01:26:48,920
 Okay, so you have, you put every possible place.

877
01:26:48,920 --> 01:26:52,480
 And then the minimizer, I don't know, suppose you are,

878
01:26:52,480 --> 01:26:55,080
 whatever I would call it, minimize or maximize,

879
01:26:55,080 --> 01:26:57,960
 depends which one you are the one.

880
01:26:57,960 --> 01:27:01,760
 And then, so after the cross player finish,

881
01:27:01,760 --> 01:27:06,760
 there is a, sorry, this, yes, this is a cross player,

882
01:27:06,800 --> 01:27:08,360
 so he plays everything.

883
01:27:08,360 --> 01:27:12,080
 And then is a circle player's turn, right?

884
01:27:12,080 --> 01:27:16,640
 So he can actually place his circle

885
01:27:16,640 --> 01:27:19,520
 with a given box, right?

886
01:27:19,520 --> 01:27:21,560
 So many, many place again.

887
01:27:21,560 --> 01:27:24,120
 So nine and then eight and so on, right?

888
01:27:24,120 --> 01:27:25,440
 So we know that.

889
01:27:25,440 --> 01:27:30,440
 Yeah, so this is how they can get the value.

890
01:27:30,719 --> 01:27:33,160
 Then this is end, you see?

891
01:27:33,160 --> 01:27:34,799
 This is already winning, right?

892
01:27:34,799 --> 01:27:36,280
 Who win?

893
01:27:36,280 --> 01:27:38,320
 Circle's win, right?

894
01:27:38,320 --> 01:27:40,839
 Okay, so circle's already win.

895
01:27:40,839 --> 01:27:43,120
 This one, do we have winning?

896
01:27:44,960 --> 01:27:46,200
 No winning, right?

897
01:27:46,200 --> 01:27:51,200
 So this is a draw, or this is no, no, no, yeah.

898
01:27:51,240 --> 01:27:55,059
 So this is a draw case.

899
01:27:55,059 --> 01:27:57,839
 And then this one, yeah, diagonal.

900
01:27:57,839 --> 01:27:59,960
 So it's a cross win, right?

901
01:27:59,960 --> 01:28:03,800
 Okay, so I'm a cross here.

902
01:28:03,800 --> 01:28:06,360
 I'm cross here, cross player here,

903
01:28:06,360 --> 01:28:09,720
 and then I suppose I'm a maximizer.

904
01:28:09,720 --> 01:28:14,720
 So then your utility value, you should set is the best value.

905
01:28:15,920 --> 01:28:17,320
 So maximizer one.

906
01:28:17,320 --> 01:28:21,040
 You can, if you are winning, then you put the plus one.

907
01:28:21,040 --> 01:28:23,240
 If you lose, then you put the minus one.

908
01:28:23,240 --> 01:28:27,120
 Or minus one would be the case for minimizer.

909
01:28:27,120 --> 01:28:29,680
 Minimizer is a minus one.

910
01:28:29,680 --> 01:28:32,240
 And then draw case is zero.

911
01:28:32,240 --> 01:28:35,800
 So you can put the utility value like this

912
01:28:35,800 --> 01:28:39,960
 to the terminal notes, or terminal states.

913
01:28:39,960 --> 01:28:41,720
 Okay, to the terminal states.

914
01:28:41,720 --> 01:28:45,840
 So this is what we can show you.

915
01:28:45,840 --> 01:28:49,360
 And the H value here probably can be the fitness,

916
01:28:49,360 --> 01:28:52,280
 or can be the cost, okay?

917
01:28:52,280 --> 01:28:57,080
 So for this case, we probably want to decide

918
01:28:57,080 --> 01:29:01,600
 how to decide the evaluation,

919
01:29:01,600 --> 01:29:06,600
 how to decide the H fitness.

920
01:29:09,080 --> 01:29:12,000
 So basically, game related,

921
01:29:12,000 --> 01:29:14,680
 if we treat the game as a search problem,

922
01:29:14,680 --> 01:29:17,400
 that means we always have a starting state,

923
01:29:17,400 --> 01:29:19,559
 initial state, and we have a goal state,

924
01:29:19,559 --> 01:29:21,240
 the terminal state.

925
01:29:21,240 --> 01:29:24,600
 And then we have operation, that means a legal movement.

926
01:29:24,640 --> 01:29:27,640
 The same thing, this is the same thing as we had

927
01:29:27,640 --> 01:29:31,320
 for state space problem solving.

928
01:29:31,320 --> 01:29:34,120
 And then we have a utility function.

929
01:29:34,120 --> 01:29:38,320
 So that is the one to apply to the terminal states,

930
01:29:38,320 --> 01:29:40,160
 the final terminal states.

931
01:29:40,160 --> 01:29:45,080
 And then return numerical score to see how well it performs.

932
01:29:45,080 --> 01:29:48,200
 So for example, the chess of Tic Tac Toe,

933
01:29:48,200 --> 01:29:51,480
 we can use, if the maximizer is a player,

934
01:29:51,480 --> 01:29:55,799
 then wing will be plus, minus one is a loss, and so on.

935
01:29:57,879 --> 01:30:02,879
 So this can be the one we try to put in this way,

936
01:30:02,879 --> 01:30:04,480
 from left to right.

937
01:30:04,480 --> 01:30:06,799
 And then you can see those circle one,

938
01:30:06,799 --> 01:30:09,280
 is already a terminal state, right?

939
01:30:09,280 --> 01:30:12,120
 You see, we have a winning case here,

940
01:30:12,120 --> 01:30:16,599
 we have a winning case, we have a winning case, yeah?

941
01:30:16,599 --> 01:30:17,440
 You see?

942
01:30:18,799 --> 01:30:21,360
 Okay, and then for those terminal states,

943
01:30:21,400 --> 01:30:25,839
 you can actually attach with the utility value, for example.

944
01:30:25,839 --> 01:30:28,839
 So for cross, yeah, so for example,

945
01:30:28,839 --> 01:30:30,040
 this one cross wing, right?

946
01:30:30,040 --> 01:30:33,080
 So I should have a plus one here, okay?

947
01:30:33,080 --> 01:30:35,679
 And this is a plus one as well.

948
01:30:35,679 --> 01:30:40,679
 And we have one which is circle wing.

949
01:30:43,839 --> 01:30:48,839
 Here is all cross wing, okay?

950
01:30:49,840 --> 01:30:54,840
 So it's not, not, not, not, yeah, it's not.

951
01:30:55,320 --> 01:30:57,240
 Okay, so basically that is a terminal state,

952
01:30:57,240 --> 01:30:59,160
 then we have how to assign the value.

953
01:31:00,000 --> 01:31:04,080
 Okay, so the minimax of working principle

954
01:31:04,080 --> 01:31:08,840
 is a bit like exhaustive search on the graph.

955
01:31:08,840 --> 01:31:11,480
 Okay, so two person play,

956
01:31:11,480 --> 01:31:15,200
 and then the whole movement sometimes is unpredictable,

957
01:31:15,200 --> 01:31:18,560
 depends on opponent's movement and actions.

958
01:31:18,600 --> 01:31:22,840
 So we assume both players follow the exact same knowledge,

959
01:31:22,840 --> 01:31:25,960
 we have the same knowledge and the rules we apply,

960
01:31:25,960 --> 01:31:30,360
 and then the minimizer always take the minimal value

961
01:31:30,360 --> 01:31:33,880
 out of the children, maximizer always take the maximum

962
01:31:33,880 --> 01:31:35,640
 value out of the children.

963
01:31:35,640 --> 01:31:39,720
 So that is operation, and then under this assumption,

964
01:31:41,640 --> 01:31:45,400
 so we can actually refer this as searching strategy,

965
01:31:45,400 --> 01:31:48,719
 is to find sequence of move lead to the terminal state

966
01:31:48,719 --> 01:31:53,080
 by apply, you know, minimizer always get the maximum,

967
01:31:53,080 --> 01:31:58,080
 oh sorry, minimizer always get the maximum,

968
01:31:59,639 --> 01:32:01,920
 if we have the entire space available,

969
01:32:01,920 --> 01:32:04,879
 this is a search, you can exhaustive search,

970
01:32:04,879 --> 01:32:07,920
 like you can find the answer, okay?

971
01:32:09,920 --> 01:32:13,679
 So let's take a look of example.

972
01:32:13,680 --> 01:32:16,960
 So this is the subtraction game, okay,

973
01:32:16,960 --> 01:32:21,960
 so N-I-M, NIM, okay, so this is,

974
01:32:23,160 --> 01:32:25,040
 I think we all played before,

975
01:32:25,040 --> 01:32:26,920
 but maybe not using matches,

976
01:32:26,920 --> 01:32:30,600
 we probably use even a pile of sand,

977
01:32:30,600 --> 01:32:32,760
 you know, try to get the,

978
01:32:34,120 --> 01:32:37,480
 get the one, each take turn to play,

979
01:32:37,480 --> 01:32:39,000
 and you try to get the sand,

980
01:32:39,000 --> 01:32:41,160
 or you try to get the match,

981
01:32:41,160 --> 01:32:43,760
 the number of the match, the whole pile of it,

982
01:32:43,760 --> 01:32:46,519
 and then you get, and then you try to break, okay,

983
01:32:46,519 --> 01:32:50,320
 break into two, you cannot break equally,

984
01:32:50,320 --> 01:32:53,120
 the two pile cannot be exactly the same,

985
01:32:53,120 --> 01:32:55,120
 have to be different, okay,

986
01:32:55,120 --> 01:32:58,680
 so this is, in the end, if none of you can move,

987
01:32:58,680 --> 01:33:02,280
 can break further, that means you lose,

988
01:33:02,280 --> 01:33:04,800
 so that is the game, right?

989
01:33:05,639 --> 01:33:08,400
 Divide a pile of the matches into two,

990
01:33:08,400 --> 01:33:11,320
 non-empty and different piles, okay,

991
01:33:11,320 --> 01:33:13,679
 so this is the game.

992
01:33:13,679 --> 01:33:17,839
 So suppose we starting with seven matches, okay,

993
01:33:17,839 --> 01:33:19,759
 so what are the options?

994
01:33:19,759 --> 01:33:23,160
 Divide into two, and these two cannot be the same,

995
01:33:23,160 --> 01:33:27,080
 so of course easily you can think it's four and three,

996
01:33:27,080 --> 01:33:29,839
 right, three or four, four and three,

997
01:33:29,839 --> 01:33:34,839
 and then another way, five and two, or six and one, right?

998
01:33:35,680 --> 01:33:40,680
 Different divide into two, and cannot be the same,

999
01:33:41,680 --> 01:33:46,680
 and also, so those are the possible three way to divide them.

1000
01:33:49,400 --> 01:33:54,400
 Okay, then next one, next one you can,

1001
01:33:54,920 --> 01:33:57,480
 can we actually break this one?

1002
01:33:57,480 --> 01:34:00,800
 No, then we can break this pile, right,

1003
01:34:00,840 --> 01:34:05,840
 so six can be divided into five and one,

1004
01:34:05,840 --> 01:34:10,200
 or four and two, can we divide into three, three?

1005
01:34:12,800 --> 01:34:15,840
 Yeah, not allowed, okay, have to be different,

1006
01:34:15,840 --> 01:34:18,520
 not empty and not equal, okay,

1007
01:34:18,520 --> 01:34:22,760
 so three, three is not allowed, you cannot have three, three,

1008
01:34:22,760 --> 01:34:26,360
 so you cannot have another circle,

1009
01:34:26,360 --> 01:34:30,680
 and then another state which is a three, three, one, no?

1010
01:34:31,640 --> 01:34:34,760
 Okay, then this one, similarly,

1011
01:34:34,760 --> 01:34:39,040
 five can divide into four and one, four and one,

1012
01:34:39,040 --> 01:34:42,440
 and then two remain as it is, right,

1013
01:34:42,440 --> 01:34:46,280
 and then another way is five divided into three and two,

1014
01:34:46,280 --> 01:34:51,280
 yeah, and two remain, so we are doing like this, okay,

1015
01:34:51,560 --> 01:34:54,760
 and then you see if I reach this state,

1016
01:34:54,760 --> 01:34:59,320
 can we move further, can we divide further?

1017
01:35:01,040 --> 01:35:05,360
 Yeah, two, none of the two can be divided into

1018
01:35:05,360 --> 01:35:09,960
 two not equal piles, right, yeah,

1019
01:35:09,960 --> 01:35:14,120
 so we have to stop here, so this is one of the gold states,

1020
01:35:14,120 --> 01:35:19,120
 terminal state, another one, another one, right,

1021
01:35:19,480 --> 01:35:24,040
 so that's how we reach this state, okay,

1022
01:35:24,040 --> 01:35:29,040
 so this is a state space we are having, okay,

1023
01:35:29,680 --> 01:35:34,680
 then suppose we have a way to decide, oh, okay,

1024
01:35:40,040 --> 01:35:45,040
 okay, I still need to talk about the minimax algorithm first,

1025
01:35:47,200 --> 01:35:50,960
 so I already said many times, okay, just two players,

1026
01:35:50,960 --> 01:35:55,000
 one is a minimizer, another one is a maximizer,

1027
01:35:55,000 --> 01:35:58,519
 so just they share same knowledge

1028
01:35:58,520 --> 01:36:02,560
 and share the same principle, okay,

1029
01:36:02,560 --> 01:36:07,280
 so they work together, so if the parent is a maximizer

1030
01:36:07,280 --> 01:36:10,840
 or max node, then they should give the maximum value

1031
01:36:10,840 --> 01:36:14,960
 of his children, okay, if the parent is a minimizer

1032
01:36:14,960 --> 01:36:19,120
 or MIN node, then they should take the minimum value

1033
01:36:19,120 --> 01:36:23,000
 of his children, so that is the rule they should apply,

1034
01:36:23,000 --> 01:36:25,680
 and then the value that assign to such states

1035
01:36:25,720 --> 01:36:27,880
 indicate the value of the best states

1036
01:36:27,880 --> 01:36:31,160
 the player can hope to achieve, okay,

1037
01:36:31,160 --> 01:36:34,080
 so in this way they derive the value

1038
01:36:34,080 --> 01:36:36,640
 and choose among the possible movement,

1039
01:36:36,640 --> 01:36:41,640
 so that's all the idea, so we are saying just through

1040
01:36:42,760 --> 01:36:46,480
 this sequence of movement and lead to the terminal states,

1041
01:36:46,480 --> 01:36:51,480
 okay, yeah, so again, if we put, if no time limit,

1042
01:36:51,959 --> 01:36:56,959
 no space limit, then this can be achieved,

1043
01:36:58,360 --> 01:37:03,360
 operate on the entire tree, down all the way to the terminal,

1044
01:37:04,040 --> 01:37:07,040
 and then we have a way to calculate the utility value

1045
01:37:07,040 --> 01:37:12,040
 for terminal states, basically assess the utility,

1046
01:37:12,040 --> 01:37:15,559
 and then determine the best utility of the parents,

1047
01:37:15,559 --> 01:37:18,919
 so depends on parents, maximizer,

1048
01:37:19,920 --> 01:37:22,520
 then you take the maximum value among the children,

1049
01:37:22,520 --> 01:37:25,720
 if the minimizer take the minimum value among the children,

1050
01:37:25,720 --> 01:37:30,720
 and repeat this process until they reach the root, okay,

1051
01:37:30,760 --> 01:37:34,160
 so that is the algorithm, so basically then after that,

1052
01:37:34,160 --> 01:37:37,800
 we select the best move from the beginning to the end,

1053
01:37:39,560 --> 01:37:42,640
 so that is the ideal case, ideal case,

1054
01:37:42,640 --> 01:37:46,880
 if no time limit, no space limit, this is what we can do,

1055
01:37:47,080 --> 01:37:51,640
 in reality, yeah, so it's not possible, right,

1056
01:37:51,640 --> 01:37:55,120
 so only possibility is we set the depth,

1057
01:37:55,120 --> 01:37:59,320
 and then based on the depth, we do something like this, okay,

1058
01:38:01,280 --> 01:38:04,040
 so similarly about this one, this one actually,

1059
01:38:04,040 --> 01:38:06,800
 we can see the entire space, right,

1060
01:38:06,800 --> 01:38:10,320
 we can see entire space, but it's just,

1061
01:38:10,320 --> 01:38:13,360
 it's just to double check again,

1062
01:38:13,360 --> 01:38:16,800
 so we use this as example to see even with a stand,

1063
01:38:16,800 --> 01:38:18,360
 we have the whole space,

1064
01:38:18,360 --> 01:38:23,120
 then how are we going to use a minimax to do this, okay,

1065
01:38:23,120 --> 01:38:25,320
 so we already see this, how we get this,

1066
01:38:25,320 --> 01:38:30,000
 and yeah, for example, can you have a link to lead to here,

1067
01:38:32,200 --> 01:38:37,200
 this one, is that possible, why not possible,

1068
01:38:38,840 --> 01:38:42,920
 yeah, I'm dividing two, dividing four into two, two, right,

1069
01:38:42,920 --> 01:38:46,240
 so it's illegal, yeah, is this possible,

1070
01:38:47,200 --> 01:38:49,360
 similarly, yeah, three, three is not possible,

1071
01:38:49,360 --> 01:38:51,240
 although I can also, if possible,

1072
01:38:51,240 --> 01:38:54,680
 I can all draw the link to these states, right,

1073
01:38:54,680 --> 01:38:57,600
 but it's not allowed, because six cannot divide

1074
01:38:57,600 --> 01:39:01,320
 into the equal, same size of the two paths,

1075
01:39:01,320 --> 01:39:03,520
 so this is not possible, okay,

1076
01:39:03,520 --> 01:39:05,640
 so we know we can lead to this,

1077
01:39:05,640 --> 01:39:08,960
 and is that possible to have this, not possible, yeah,

1078
01:39:08,960 --> 01:39:10,880
 two cannot divide to one, one, right,

1079
01:39:10,880 --> 01:39:13,720
 similarly, this one cannot, okay,

1080
01:39:13,920 --> 01:39:17,320
 so we have those terminal states,

1081
01:39:17,320 --> 01:39:22,040
 so now, terminal states we set, okay, do this,

1082
01:39:22,040 --> 01:39:24,880
 the utility value is very simple,

1083
01:39:24,880 --> 01:39:29,320
 if max win, we put one, if a mini win, we put zero,

1084
01:39:29,320 --> 01:39:32,320
 or you like to put the minus, it's also okay,

1085
01:39:32,320 --> 01:39:35,280
 or if it's a draw, but this one, no way to draw, right,

1086
01:39:35,280 --> 01:39:40,160
 it's always one of them win, so that's why we can say mini,

1087
01:39:40,160 --> 01:39:42,760
 we just say zero, it's a mini win,

1088
01:39:43,120 --> 01:39:48,120
 one is max win, okay, so you see why this one is zero here,

1089
01:39:48,960 --> 01:39:52,200
 terminal and terminal, we only have three terminal states,

1090
01:39:52,200 --> 01:39:55,300
 right, so why here put a zero,

1091
01:40:01,480 --> 01:40:05,920
 look at the top, this is minimizer, maximizer,

1092
01:40:05,920 --> 01:40:09,120
 minimizer, maximizer, minimizer, maximizer,

1093
01:40:09,120 --> 01:40:13,599
 so maximizer's turn to play, can he play?

1094
01:40:16,240 --> 01:40:20,120
 Stuck already, so he lose, right, so who win?

1095
01:40:21,960 --> 01:40:26,800
 Minimizer win, so should be zero, right,

1096
01:40:28,059 --> 01:40:30,280
 okay, so you know how to get this zero,

1097
01:40:30,280 --> 01:40:32,800
 don't ask me about zero yet, this one,

1098
01:40:32,800 --> 01:40:36,640
 how you get this zero yet, we set the utility value

1099
01:40:36,640 --> 01:40:39,720
 for the terminal nodes first, okay,

1100
01:40:39,720 --> 01:40:41,840
 this is not the terminal nodes, right,

1101
01:40:41,840 --> 01:40:45,160
 this have a children, so this one is a terminal nodes,

1102
01:40:45,160 --> 01:40:48,840
 this is a terminal nodes, this is a terminal nodes,

1103
01:40:48,840 --> 01:40:52,000
 none of the others are, okay, only these three,

1104
01:40:52,000 --> 01:40:54,920
 so we know how to set zero, do we know how to set one,

1105
01:40:56,500 --> 01:41:01,500
 why this is one here, why this is one,

1106
01:41:02,500 --> 01:41:07,500
 because, yeah, minimizer's turn, minimizer,

1107
01:41:08,060 --> 01:41:11,000
 can they play, cannot play, so he lose,

1108
01:41:11,000 --> 01:41:16,000
 so maximizer win, maximizer win, that means one, right,

1109
01:41:16,260 --> 01:41:19,940
 okay, so similarly you get zero here,

1110
01:41:19,940 --> 01:41:24,940
 who win this one, minimizer win, yeah,

1111
01:41:25,140 --> 01:41:29,260
 because it's a maximizer's turn, maximizer get stuck,

1112
01:41:29,260 --> 01:41:32,940
 so minimizer win, so that's why we get these three value,

1113
01:41:32,940 --> 01:41:34,780
 okay, we get these three value,

1114
01:41:34,780 --> 01:41:37,820
 everybody know how we get it, yes,

1115
01:41:37,820 --> 01:41:42,300
 okay, now let's do midi max algorithm, okay,

1116
01:41:42,300 --> 01:41:46,300
 so how to do this, remember the algorithm, here,

1117
01:41:49,620 --> 01:41:52,380
 okay, so basically create the entire tree

1118
01:41:52,380 --> 01:41:54,860
 all the way down to the terminal, right,

1119
01:41:54,860 --> 01:41:59,860
 we did, and then calculate utility, we did, right,

1120
01:41:59,900 --> 01:42:02,700
 we did for the terminal states first,

1121
01:42:02,700 --> 01:42:05,860
 and then we had the utility for each of terminal,

1122
01:42:05,860 --> 01:42:09,259
 we did the first one, then determine the best utility

1123
01:42:09,259 --> 01:42:12,460
 of the parents from the terminal, okay,

1124
01:42:12,460 --> 01:42:17,460
 so that means this is the parents of this terminal, right,

1125
01:42:20,299 --> 01:42:23,780
 and then how to decide this value, why this is zero,

1126
01:42:25,780 --> 01:42:30,780
 based on the algorithm it said for minimizer,

1127
01:42:34,620 --> 01:42:38,980
 yes, for minimizer, mini player,

1128
01:42:38,980 --> 01:42:42,660
 they should select the minimum value among the children,

1129
01:42:43,820 --> 01:42:46,500
 if the max player, they should select

1130
01:42:46,500 --> 01:42:49,500
 the maximum value among the player,

1131
01:42:49,500 --> 01:42:54,059
 so this is what player, minimizer, right,

1132
01:42:54,100 --> 01:42:56,780
 mini player, mini player, they should select

1133
01:42:56,780 --> 01:42:59,260
 the minimum value from the children,

1134
01:42:59,260 --> 01:43:03,500
 how many children he has, only one, right,

1135
01:43:03,500 --> 01:43:07,260
 so not much choice, he has to choose this is zero,

1136
01:43:07,260 --> 01:43:10,260
 so if here suppose I suppose I suppose I here,

1137
01:43:10,260 --> 01:43:13,300
 I have a one, then he should choose one

1138
01:43:13,300 --> 01:43:17,820
 or select the zero, still select zero, right,

1139
01:43:17,820 --> 01:43:22,460
 minimum value, okay, that's how he get this value, yes,

1140
01:43:23,460 --> 01:43:27,300
 okay, then that's how he get zero,

1141
01:43:27,300 --> 01:43:30,020
 because maximizer select maximum value,

1142
01:43:30,020 --> 01:43:33,780
 so not much choice, just one, okay,

1143
01:43:33,780 --> 01:43:36,300
 and this one, that's how we get it,

1144
01:43:36,300 --> 01:43:41,300
 then what about this one, why this one is zero,

1145
01:43:43,260 --> 01:43:45,540
 so we do this layer by layer,

1146
01:43:45,540 --> 01:43:50,140
 we have all the terminal done, then we parents

1147
01:43:50,180 --> 01:43:53,740
 and parents, grandparents and so on, okay,

1148
01:43:53,740 --> 01:43:57,400
 so this one, why this one is zero,

1149
01:44:00,020 --> 01:44:05,020
 this is a minimizer or maximizer, mini, right,

1150
01:44:07,340 --> 01:44:10,500
 so mini, they should select the minimum value,

1151
01:44:10,500 --> 01:44:15,500
 what are the options, one is zero, one is one, right,

1152
01:44:16,100 --> 01:44:19,420
 that's why minimum value is zero,

1153
01:44:21,140 --> 01:44:26,140
 okay, yeah, so similar layer, do we have another one,

1154
01:44:27,140 --> 01:44:30,740
 have more than one, okay, so that's why we get one,

1155
01:44:30,740 --> 01:44:33,620
 yeah, here no option, so this one,

1156
01:44:33,620 --> 01:44:38,220
 and here you have another option, right, zero and one,

1157
01:44:38,220 --> 01:44:40,620
 zero and one, this is a maximizer,

1158
01:44:40,620 --> 01:44:43,500
 that's why you should select the maximum value,

1159
01:44:43,500 --> 01:44:48,060
 that's how you get one, okay,

1160
01:44:48,060 --> 01:44:52,500
 and the amount of this children, they are equal to one,

1161
01:44:52,500 --> 01:44:56,860
 so that's for minimizer, no choice, just get one,

1162
01:44:56,860 --> 01:45:00,540
 if that is the value here is zero,

1163
01:45:00,540 --> 01:45:04,380
 then you will get a zero, right, hmm,

1164
01:45:06,860 --> 01:45:11,860
 okay, get it, so now every note get the utility value,

1165
01:45:12,179 --> 01:45:17,179
 yes, now after that what to do, you follow the best,

1166
01:45:25,139 --> 01:45:30,139
 okay, so for this one, I happen to be all one,

1167
01:45:30,139 --> 01:45:33,540
 so any of it would do, you basically,

1168
01:45:33,540 --> 01:45:36,139
 you can either choose this one or choose this one,

1169
01:45:36,139 --> 01:45:39,259
 or choose this one, so suppose I go this way,

1170
01:45:39,260 --> 01:45:41,580
 and then left, I go, I move to this one,

1171
01:45:41,580 --> 01:45:43,580
 I decide to choose this one,

1172
01:45:43,580 --> 01:45:46,180
 and then my opponent, which one I should choose,

1173
01:45:48,580 --> 01:45:51,140
 should I go this way or should I go this way,

1174
01:45:52,420 --> 01:45:57,420
 this is the maximizer, maximizer meaning one,

1175
01:45:59,300 --> 01:46:01,980
 choose the best offer, right, yeah,

1176
01:46:01,980 --> 01:46:04,020
 so the children one is give you zero,

1177
01:46:04,020 --> 01:46:05,820
 another one give you one, so of course,

1178
01:46:05,820 --> 01:46:07,140
 I should go this bunch,

1179
01:46:09,300 --> 01:46:11,220
 so I should come to this branch,

1180
01:46:11,220 --> 01:46:12,900
 and then minimize this one, again,

1181
01:46:12,900 --> 01:46:15,780
 I know choice one branch and then one branch,

1182
01:46:15,780 --> 01:46:19,300
 and still have a possibility of winning it,

1183
01:46:19,300 --> 01:46:22,460
 for maximum, maximizer, isn't it,

1184
01:46:27,900 --> 01:46:31,820
 okay, so what if I come to this way,

1185
01:46:31,820 --> 01:46:34,380
 then I will go this way, yeah,

1186
01:46:34,380 --> 01:46:36,860
 so still have possibility of winning,

1187
01:46:36,860 --> 01:46:41,019
 if I come here, then I also have two,

1188
01:46:41,019 --> 01:46:43,620
 equally, now take any of it,

1189
01:46:43,620 --> 01:46:48,460
 so if I come here, then also lead to this way,

1190
01:46:48,460 --> 01:46:51,099
 okay, so this is basically how,

1191
01:46:51,099 --> 01:46:53,900
 this example, not very good because

1192
01:46:53,900 --> 01:46:56,339
 you have a same kind of branch,

1193
01:46:56,339 --> 01:46:59,059
 you have equal chance to go into one of it,

1194
01:47:00,059 --> 01:47:03,019
 another example will have better way,

1195
01:47:03,020 --> 01:47:08,020
 but this one is a complete game tree,

1196
01:47:08,420 --> 01:47:10,460
 and then we can see how to set

1197
01:47:10,460 --> 01:47:14,060
 the terminal utility value and then backwards,

1198
01:47:14,060 --> 01:47:19,060
 to get the utility value for every node,

1199
01:47:19,220 --> 01:47:20,540
 and then based on that,

1200
01:47:20,540 --> 01:47:23,060
 you can decide which branch to move to,

1201
01:47:24,180 --> 01:47:27,260
 okay, so that's a key idea to explain

1202
01:47:27,260 --> 01:47:30,700
 the mini max algorithm,

1203
01:47:33,700 --> 01:47:37,900
 okay, ready for another example,

1204
01:47:37,900 --> 01:47:42,900
 so this one, we want to see the take that toll again,

1205
01:47:42,980 --> 01:47:47,780
 and now the evaluation function is different,

1206
01:47:47,780 --> 01:47:52,020
 so the evaluation function here is to use

1207
01:47:54,940 --> 01:47:59,940
 the possible wing, or the possible fitness,

1208
01:48:00,099 --> 01:48:04,780
 of the cross player minus the fitness

1209
01:48:04,780 --> 01:48:08,500
 of the circle player, okay,

1210
01:48:08,500 --> 01:48:13,339
 so you see, this is my evaluation function,

1211
01:48:13,339 --> 01:48:18,339
 is m, n minus o, n, m,

1212
01:48:19,099 --> 01:48:23,500
 stand for the total of my possible wing lines, okay,

1213
01:48:23,500 --> 01:48:28,500
 then o refer to the opponent's possible wing lines, okay,

1214
01:48:29,300 --> 01:48:32,420
 so you see the cross is myself,

1215
01:48:32,420 --> 01:48:34,740
 and o is the opponent's,

1216
01:48:34,740 --> 01:48:37,380
 and so for example, if you are here,

1217
01:48:37,380 --> 01:48:40,900
 then how many possibility line of wing,

1218
01:48:40,900 --> 01:48:45,220
 so one possible two, then three,

1219
01:48:45,220 --> 01:48:50,220
 then four, then five, then six, right, cross, yeah,

1220
01:48:52,020 --> 01:48:54,900
 so that's why I have six possible wings,

1221
01:48:54,900 --> 01:48:57,680
 and then my opponent's, you work out,

1222
01:48:57,680 --> 01:49:02,680
 it's like one, and two, and three, and four, and five,

1223
01:49:03,440 --> 01:49:07,840
 right, so five, that's why six minus five,

1224
01:49:07,840 --> 01:49:12,840
 so if I'm in this stage, my evaluation value

1225
01:49:14,400 --> 01:49:19,400
 is equal to one, okay, so that is how you evaluate,

1226
01:49:19,640 --> 01:49:23,640
 so similarly, go check this, this, okay,

1227
01:49:23,640 --> 01:49:26,400
 so basically, look at this,

1228
01:49:26,440 --> 01:49:31,440
 so this is utility, if now, if say for example,

1229
01:49:31,519 --> 01:49:33,599
 if now reach this state,

1230
01:49:33,599 --> 01:49:37,719
 then I use this function to evaluate my utility value,

1231
01:49:37,719 --> 01:49:42,719
 okay, done, but probably for, even for Dictato,

1232
01:49:43,080 --> 01:49:45,719
 we probably cannot hold the entire,

1233
01:49:45,719 --> 01:49:49,200
 all the states in this memory, okay,

1234
01:49:49,200 --> 01:49:52,040
 probably no, no, very small memory,

1235
01:49:52,040 --> 01:49:55,360
 we have very small computer, very low end computer,

1236
01:49:55,400 --> 01:49:57,120
 we cannot hold all of them,

1237
01:49:57,120 --> 01:50:02,120
 so we can only see like two depths of down the road,

1238
01:50:02,160 --> 01:50:04,799
 okay, so if that's the case,

1239
01:50:04,799 --> 01:50:09,799
 then you treat that one as a terminal note,

1240
01:50:10,040 --> 01:50:12,320
 and then you work out the utility value,

1241
01:50:12,320 --> 01:50:14,120
 and then you're backward to decide

1242
01:50:14,120 --> 01:50:16,679
 which direction you are going to move,

1243
01:50:16,679 --> 01:50:19,880
 that's how you can make use of the minimax

1244
01:50:19,880 --> 01:50:24,519
 to play the game, okay, so this is an example,

1245
01:50:24,520 --> 01:50:28,200
 yeah, looks very messy, oh, okay,

1246
01:50:28,200 --> 01:50:31,480
 so we start from here, this is starting states,

1247
01:50:31,480 --> 01:50:34,880
 and then we look to ply, okay,

1248
01:50:34,880 --> 01:50:38,280
 so that means to ply two steps ahead, okay,

1249
01:50:38,280 --> 01:50:40,720
 so one step come to here, right,

1250
01:50:40,720 --> 01:50:43,440
 one step you put the circle,

1251
01:50:43,440 --> 01:50:46,520
 you put the cross in the corner,

1252
01:50:46,520 --> 01:50:50,440
 in this middle, or in the center, okay,

1253
01:50:50,440 --> 01:50:52,400
 so I may use this tree,

1254
01:50:53,360 --> 01:50:58,280
 and don't work out the utility value based on this,

1255
01:50:58,280 --> 01:51:02,599
 because this is not my terminal notes yet, right,

1256
01:51:02,599 --> 01:51:06,920
 I say two steps, two play, two ply, two ply,

1257
01:51:06,920 --> 01:51:09,440
 so that means the depth equal to two,

1258
01:51:09,440 --> 01:51:12,599
 so this is only one, one, one,

1259
01:51:12,599 --> 01:51:16,240
 and then next level is the next level, right,

1260
01:51:16,240 --> 01:51:19,559
 depth equal to two, so this is two,

1261
01:51:19,600 --> 01:51:23,200
 so if I put here, then my opponent's supposed to put here,

1262
01:51:23,200 --> 01:51:26,080
 here, here, here, you know, all the possible places,

1263
01:51:27,360 --> 01:51:30,080
 and that's it, we stop there, okay,

1264
01:51:30,080 --> 01:51:34,680
 no more play, no more the maximizer come play again, no,

1265
01:51:34,680 --> 01:51:36,800
 we stop here, we stop here,

1266
01:51:36,800 --> 01:51:40,160
 we treat this as a terminal notes now,

1267
01:51:40,160 --> 01:51:43,280
 okay, then you use the evaluate function

1268
01:51:43,280 --> 01:51:46,480
 to work out the utility value, okay,

1269
01:51:46,480 --> 01:51:50,160
 so you see that is five, six minus five,

1270
01:51:50,160 --> 01:51:53,639
 if you have this position, and then I get one,

1271
01:51:53,639 --> 01:51:55,959
 so this is a one, five minus one,

1272
01:51:55,959 --> 01:51:59,200
 five minus five get zero, and so on, okay,

1273
01:51:59,200 --> 01:52:04,120
 so the red color here indicates the E value

1274
01:52:04,120 --> 01:52:08,519
 of each of these, utility value for each of these

1275
01:52:08,519 --> 01:52:12,120
 terminal notes, okay, get it,

1276
01:52:12,120 --> 01:52:14,559
 so similarly here, here, here, here,

1277
01:52:14,560 --> 01:52:19,560
 so you see even have minus two here, okay,

1278
01:52:20,600 --> 01:52:24,560
 then what, then apply minimax,

1279
01:52:24,560 --> 01:52:27,040
 because suppose our memory is only so small,

1280
01:52:27,040 --> 01:52:29,600
 we can only do two steps ahead,

1281
01:52:29,600 --> 01:52:31,840
 and then we do evaluation,

1282
01:52:31,840 --> 01:52:34,640
 based on this evaluation, minimax, okay,

1283
01:52:34,640 --> 01:52:38,960
 so remember how to do minimax backwards, right,

1284
01:52:38,960 --> 01:52:43,040
 so this is a max, this next level,

1285
01:52:43,040 --> 01:52:46,440
 so if you are max, your opponent definitely mini,

1286
01:52:46,440 --> 01:52:48,519
 and then you are max again, right,

1287
01:52:48,519 --> 01:52:52,080
 if I'm a mini, your opponent will be max,

1288
01:52:52,080 --> 01:52:55,519
 it's like that, okay, so now max,

1289
01:52:55,519 --> 01:52:58,200
 that's why the next one is mini,

1290
01:52:58,200 --> 01:53:02,240
 then this is a max, right, okay,

1291
01:53:02,240 --> 01:53:04,000
 so amount your utility value,

1292
01:53:04,000 --> 01:53:05,640
 what value you should choose, huh,

1293
01:53:07,040 --> 01:53:12,040
 you should one, zero, one, zero minus one,

1294
01:53:13,560 --> 01:53:18,720
 this is what player, mini player, right,

1295
01:53:18,720 --> 01:53:20,960
 that's why choose what,

1296
01:53:23,800 --> 01:53:27,680
 minimum value among the children, right,

1297
01:53:27,680 --> 01:53:32,680
 minimum, that's why you get minus one, okay,

1298
01:53:34,840 --> 01:53:37,360
 so this minus one is not really work out,

1299
01:53:37,360 --> 01:53:38,880
 it's based on your children,

1300
01:53:39,920 --> 01:53:42,040
 based on your children's utility value,

1301
01:53:42,040 --> 01:53:44,920
 then I get this, okay,

1302
01:53:44,920 --> 01:53:47,840
 but this value is really your utility value,

1303
01:53:47,840 --> 01:53:52,400
 it's really based on evaluation function we work out, okay,

1304
01:53:54,680 --> 01:53:56,880
 that's how you get minus two,

1305
01:53:56,880 --> 01:54:01,080
 because minus two, zero, minus one, zero, minus one,

1306
01:54:01,080 --> 01:54:03,280
 so you need to select the minimum value,

1307
01:54:03,280 --> 01:54:06,160
 that's why you get minus two, yeah,

1308
01:54:07,160 --> 01:54:10,120
 and minus one, oh no, no, sorry,

1309
01:54:10,160 --> 01:54:15,160
 one and two, minimizer, take one, right,

1310
01:54:15,680 --> 01:54:20,680
 and then this is only one level up, right,

1311
01:54:21,120 --> 01:54:26,120
 so the amount of minus one, minus two, and one,

1312
01:54:29,080 --> 01:54:30,680
 what value are we getting,

1313
01:54:34,360 --> 01:54:39,360
 we are the minimizer or maximizer, max,

1314
01:54:39,799 --> 01:54:43,759
 we should choose among the minus one,

1315
01:54:43,759 --> 01:54:46,799
 minus two, and one, the maximum value,

1316
01:54:46,799 --> 01:54:51,519
 so that's why we get the one, okay,

1317
01:54:51,519 --> 01:54:55,080
 so what's the indication, that's it, we are done,

1318
01:54:55,080 --> 01:54:58,080
 we are done with the utility value backwards,

1319
01:54:58,080 --> 01:55:02,839
 we get everything, then which one decide the movement,

1320
01:55:06,519 --> 01:55:08,960
 yes, from the player, right,

1321
01:55:08,960 --> 01:55:13,200
 so you are maximizer, of course, you choose a maximum,

1322
01:55:13,200 --> 01:55:15,760
 the branch give you the maximum value,

1323
01:55:15,760 --> 01:55:20,480
 so you go this way, I should go this way, right,

1324
01:55:20,480 --> 01:55:25,480
 then this is a minimizer, I should go this way, right,

1325
01:55:28,720 --> 01:55:32,400
 by right, by right, if you follow this,

1326
01:55:32,400 --> 01:55:37,400
 but you also know this value is only based on my two plies,

1327
01:55:39,960 --> 01:55:45,120
 right, so it's not getting this whole,

1328
01:55:45,120 --> 01:55:49,920
 based on the entire search, entire game tree,

1329
01:55:49,920 --> 01:55:51,880
 so this may not be accurate,

1330
01:55:51,880 --> 01:55:55,800
 so you see this minimizer, he decide, not go here,

1331
01:55:55,800 --> 01:55:59,160
 he want to go this way, possible, right,

1332
01:56:00,000 --> 01:56:03,280
 then he take this way, he take this way,

1333
01:56:03,280 --> 01:56:07,200
 he put his circle here, yeah,

1334
01:56:07,240 --> 01:56:10,160
 then let's see what's next,

1335
01:56:10,160 --> 01:56:14,960
 so we are expanding from here, okay, next page,

1336
01:56:14,960 --> 01:56:18,760
 we are expanding from here, then we have the options,

1337
01:56:18,760 --> 01:56:21,880
 oh sorry, sorry, we are expanding from where,

1338
01:56:21,880 --> 01:56:25,360
 oh yes, yes, from here, okay, then go for this,

1339
01:56:25,360 --> 01:56:29,000
 these, those are the possible four branches,

1340
01:56:29,000 --> 01:56:34,000
 and then again, two ply, okay, so two steps,

1341
01:56:34,560 --> 01:56:39,560
 two steps, so one level, and then next level,

1342
01:56:40,400 --> 01:56:43,000
 for each of this, and then these,

1343
01:56:43,000 --> 01:56:45,480
 those are the terminal already, terminal,

1344
01:56:45,480 --> 01:56:49,840
 so apply the terminal evaluation function,

1345
01:56:49,840 --> 01:56:52,560
 get the actual value, get actual value,

1346
01:56:52,560 --> 01:56:55,880
 so all those actual value are here,

1347
01:56:55,880 --> 01:56:58,880
 so then we know this is a maximizer,

1348
01:56:58,880 --> 01:57:03,880
 so the minimizer should select the minimum value out of this,

1349
01:57:04,000 --> 01:57:07,880
 so that's why it's all either zero or one or two, right,

1350
01:57:07,880 --> 01:57:10,560
 so you should choose zero, the minimum,

1351
01:57:10,560 --> 01:57:14,840
 similarly among those, then I choose that one, and so on,

1352
01:57:14,840 --> 01:57:18,240
 and then backwards, okay, so then from one,

1353
01:57:18,240 --> 01:57:23,240
 from zero, from one, zero, so I choose maximizer,

1354
01:57:23,960 --> 01:57:26,400
 so I choose one, so I choose one,

1355
01:57:26,400 --> 01:57:29,680
 I can either go this direction or this direction,

1356
01:57:29,680 --> 01:57:33,520
 so suppose I come to here, and I come to here,

1357
01:57:34,080 --> 01:57:39,080
 okay, so this is how they move based on limited information,

1358
01:57:41,200 --> 01:57:43,800
 and then suppose minimizer take this way,

1359
01:57:44,840 --> 01:57:47,720
 then we can expand, look at the next step,

1360
01:57:47,720 --> 01:57:51,080
 so very similar, we can do two steps ahead,

1361
01:57:51,080 --> 01:57:54,480
 and then get the evaluation function for the terminal,

1362
01:57:54,480 --> 01:57:56,440
 and backwards, we get the value,

1363
01:57:57,780 --> 01:58:01,280
 then decide which branch we are moving, yeah.

1364
01:58:04,360 --> 01:58:09,360
 That's all, so as we said, if the entire graph is available,

1365
01:58:10,240 --> 01:58:12,480
 then this is possible, right,

1366
01:58:12,480 --> 01:58:17,480
 but the thing is still probably cannot explore,

1367
01:58:18,600 --> 01:58:22,040
 okay, the efficiency is still a crucial issue,

1368
01:58:22,040 --> 01:58:24,400
 that's why we need another thing

1369
01:58:24,400 --> 01:58:26,800
 which can help you to chop up, you know,

1370
01:58:26,800 --> 01:58:30,440
 certain branch, for example, probably certain branch,

1371
01:58:30,440 --> 01:58:34,480
 we just totally no need to care about it,

1372
01:58:34,480 --> 01:58:37,599
 just chop up, so prune away,

1373
01:58:37,599 --> 01:58:42,040
 that's why we have this pruning come into play,

1374
01:58:42,040 --> 01:58:45,160
 that's the alpha beta pruning algorithm,

1375
01:58:45,160 --> 01:58:48,599
 but it's actually based on a minimax idea,

1376
01:58:48,599 --> 01:58:52,480
 okay, so before we do introduce you the last algorithm

1377
01:58:52,480 --> 01:58:55,879
 in the game search, exercise, okay,

1378
01:58:55,879 --> 01:58:58,960
 exercise four, just a quick one,

1379
01:58:58,960 --> 01:59:01,160
 because this is very simple,

1380
01:59:01,160 --> 01:59:05,080
 I hope you get the basic idea of the minimax idea, okay.

1381
01:59:06,880 --> 01:59:10,400
 You see the value, a number attached to the bottom,

1382
01:59:10,400 --> 01:59:14,040
 or to the terminal nodes, yeah,

1383
01:59:14,040 --> 01:59:17,160
 so those are the, don't ask anyhow,

1384
01:59:17,160 --> 01:59:20,240
 they come up with the evaluation function already,

1385
01:59:20,240 --> 01:59:22,200
 they give you the number, okay,

1386
01:59:22,200 --> 01:59:24,080
 so suppose the number is available,

1387
01:59:24,080 --> 01:59:28,600
 then how to make use of the minimax

1388
01:59:28,640 --> 01:59:33,640
 to get the value for the starting nodes,

1389
01:59:33,840 --> 01:59:38,000
 and then to tell us which branch you should choose,

1390
01:59:38,000 --> 01:59:40,520
 okay, can we do that, just five minutes?

1391
01:59:58,600 --> 02:00:01,600
 Okay, so we're gonna do the same thing,

1392
02:00:01,600 --> 02:00:03,600
 we're gonna do the same thing,

1393
02:00:03,600 --> 02:00:05,600
 we're gonna do the same thing,

1394
02:00:05,600 --> 02:00:07,600
 we're gonna do the same thing,

1395
02:00:07,600 --> 02:00:09,600
 we're gonna do the same thing,

1396
02:00:09,600 --> 02:00:11,600
 we're gonna do the same thing,

1397
02:00:11,600 --> 02:00:13,600
 we're gonna do the same thing,

1398
02:00:13,600 --> 02:00:15,600
 we're gonna do the same thing,

1399
02:00:15,600 --> 02:00:17,600
 we're gonna do the same thing,

1400
02:00:17,600 --> 02:00:19,600
 we're gonna do the same thing,

1401
02:00:19,600 --> 02:00:21,600
 we're gonna do the same thing,

1402
02:00:21,600 --> 02:00:23,600
 we're gonna do the same thing,

1403
02:00:23,600 --> 02:00:25,600
 we're gonna do the same thing,

1404
02:00:25,600 --> 02:00:27,600
 we're gonna do the same thing,

1405
02:00:27,600 --> 02:00:29,600
 we're gonna do the same thing,

1406
02:00:29,600 --> 02:00:31,600
 we're gonna do the same thing,

1407
02:00:31,600 --> 02:00:33,600
 we're gonna do the same thing,

1408
02:00:33,600 --> 02:00:35,600
 we're gonna do the same thing,

1409
02:00:35,600 --> 02:00:37,600
 we're gonna do the same thing,

1410
02:00:37,600 --> 02:00:39,600
 we're gonna do the same thing,

1411
02:00:39,600 --> 02:00:41,600
 we're gonna do the same thing,

1412
02:00:41,600 --> 02:00:43,600
 we're gonna do the same thing,

1413
02:00:43,600 --> 02:00:45,600
 we're gonna do the same thing,

1414
02:00:45,600 --> 02:00:47,600
 we're gonna do the same thing,

1415
02:00:47,600 --> 02:00:49,600
 we're gonna do the same thing,

1416
02:00:49,600 --> 02:00:51,600
 we're gonna do the same thing,

1417
02:00:51,600 --> 02:00:53,600
 we're gonna do the same thing,

1418
02:00:53,600 --> 02:00:55,600
 we're gonna do the same thing,

1419
02:00:55,600 --> 02:00:57,600
 we're gonna do the same thing,

1420
02:00:57,600 --> 02:00:59,600
 we're gonna do the same thing,

1421
02:00:59,600 --> 02:01:01,600
 we're gonna do the same thing,

1422
02:01:01,600 --> 02:01:03,600
 we're gonna do the same thing,

1423
02:01:03,600 --> 02:01:05,600
 we're gonna do the same thing,

1424
02:01:05,600 --> 02:01:07,600
 we're gonna do the same thing,

1425
02:01:07,600 --> 02:01:09,600
 we're gonna do the same thing,

1426
02:01:09,600 --> 02:01:11,600
 we're gonna do the same thing,

1427
02:01:11,600 --> 02:01:13,600
 we're gonna do the same thing,

1428
02:01:13,600 --> 02:01:15,600
 we're gonna do the same thing,

1429
02:01:15,600 --> 02:01:17,600
 we're gonna do the same thing,

1430
02:01:17,600 --> 02:01:19,600
 we're gonna do the same thing,

1431
02:01:19,600 --> 02:01:21,600
 we're gonna do the same thing,

1432
02:01:21,600 --> 02:01:23,600
 we're gonna do the same thing,

1433
02:01:23,600 --> 02:01:25,600
 we're gonna do the same thing,

1434
02:01:25,600 --> 02:01:27,600
 we're gonna do the same thing,

1435
02:01:27,600 --> 02:01:29,600
 we're gonna do the same thing,

1436
02:01:29,600 --> 02:01:31,600
 we're gonna do the same thing,

1437
02:01:31,600 --> 02:01:33,600
 we're gonna do the same thing,

1438
02:01:33,600 --> 02:01:35,600
 we're gonna do the same thing,

1439
02:01:35,600 --> 02:01:37,600
 we're gonna do the same thing,

1440
02:01:37,600 --> 02:01:39,600
 we're gonna do the same thing,

1441
02:01:39,600 --> 02:01:41,600
 we're gonna do the same thing,

1442
02:01:41,600 --> 02:01:43,600
 we're gonna do the same thing,

1443
02:01:43,600 --> 02:01:45,600
 we're gonna do the same thing,

1444
02:01:45,600 --> 02:01:47,600
 we're gonna do the same thing,

1445
02:01:47,600 --> 02:01:49,600
 we're gonna do the same thing,

1446
02:01:49,600 --> 02:01:51,600
 we're gonna do the same thing,

1447
02:01:51,600 --> 02:01:53,600
 we're gonna do the same thing,

1448
02:01:53,600 --> 02:01:55,600
 we're gonna do the same thing,

1449
02:01:55,600 --> 02:01:57,600
 we're gonna do the same thing,

1450
02:01:57,600 --> 02:01:59,600
 we're gonna do the same thing,

1451
02:01:59,600 --> 02:02:01,600
 we're gonna do the same thing,

1452
02:02:01,600 --> 02:02:03,600
 we're gonna do the same thing,

1453
02:02:03,600 --> 02:02:05,600
 we're gonna do the same thing,

1454
02:02:05,600 --> 02:02:07,600
 we're gonna do the same thing,

1455
02:02:07,600 --> 02:02:09,600
 we're gonna do the same thing,

1456
02:02:09,600 --> 02:02:11,600
 we're gonna do the same thing,

1457
02:02:11,600 --> 02:02:13,600
 we're gonna do the same thing,

1458
02:02:13,600 --> 02:02:15,600
 we're gonna do the same thing,

1459
02:02:15,600 --> 02:02:17,600
 we're gonna do the same thing,

1460
02:02:17,600 --> 02:02:19,600
 we're gonna do the same thing,

1461
02:02:19,600 --> 02:02:21,600
 we're gonna do the same thing,

1462
02:02:21,600 --> 02:02:23,600
 we're gonna do the same thing,

1463
02:02:23,600 --> 02:02:25,600
 we're gonna do the same thing,

1464
02:02:25,600 --> 02:02:27,600
 we're gonna do the same thing,

1465
02:02:27,600 --> 02:02:29,600
 we're gonna do the same thing,

1466
02:02:29,600 --> 02:02:31,600
 we're gonna do the same thing,

1467
02:02:31,600 --> 02:02:33,600
 we're gonna do the same thing,

1468
02:02:33,600 --> 02:02:35,600
 we're gonna do the same thing,

1469
02:02:35,600 --> 02:02:37,600
 we're gonna do the same thing,

1470
02:02:37,600 --> 02:02:39,600
 we're gonna do the same thing,

1471
02:02:39,600 --> 02:02:41,600
 we're gonna do the same thing,

1472
02:02:41,600 --> 02:02:43,600
 we're gonna do the same thing,

1473
02:02:43,600 --> 02:02:45,600
 we're gonna do the same thing,

1474
02:02:45,600 --> 02:02:47,600
 we're gonna do the same thing,

1475
02:02:47,600 --> 02:02:49,600
 we're gonna do the same thing,

1476
02:02:49,600 --> 02:02:51,600
 we're gonna do the same thing,

1477
02:02:51,600 --> 02:02:53,600
 we're gonna do the same thing,

1478
02:02:53,600 --> 02:02:55,600
 we're gonna do the same thing,

1479
02:02:55,600 --> 02:02:57,600
 we're gonna do the same thing,

1480
02:02:57,600 --> 02:02:59,600
 we're gonna do the same thing,

1481
02:02:59,600 --> 02:03:01,600
 we're gonna do the same thing,

1482
02:03:01,600 --> 02:03:03,600
 we're gonna do the same thing,

1483
02:03:03,600 --> 02:03:05,600
 we're gonna do the same thing,

1484
02:03:05,600 --> 02:03:07,600
 we're gonna do the same thing,

1485
02:03:07,600 --> 02:03:09,600
 we're gonna do the same thing,

1486
02:03:09,600 --> 02:03:11,600
 we're gonna do the same thing,

1487
02:03:11,600 --> 02:03:13,600
 we're gonna do the same thing,

1488
02:03:13,600 --> 02:03:15,600
 we're gonna do the same thing,

1489
02:03:15,600 --> 02:03:17,600
 we're gonna do the same thing,

1490
02:03:17,600 --> 02:03:19,600
 we're gonna do the same thing,

1491
02:03:19,600 --> 02:03:21,600
 we're gonna do the same thing,

1492
02:03:21,600 --> 02:03:23,600
 we're gonna do the same thing,

1493
02:03:23,600 --> 02:03:25,600
 we're gonna do the same thing,

1494
02:03:25,600 --> 02:03:27,600
 we're gonna do the same thing,

1495
02:03:27,600 --> 02:03:29,600
 we're gonna do the same thing,

1496
02:03:29,600 --> 02:03:31,600
 we're gonna do the same thing,

1497
02:03:31,600 --> 02:03:33,600
 we're gonna do the same thing,

1498
02:03:33,600 --> 02:03:35,600
 we're gonna do the same thing,

1499
02:03:35,600 --> 02:03:37,600
 we're gonna do the same thing,

1500
02:03:37,600 --> 02:03:39,600
 we're gonna do the same thing,

1501
02:03:39,600 --> 02:03:41,600
 we're gonna do the same thing,

1502
02:03:41,600 --> 02:03:43,600
 we're gonna do the same thing,

1503
02:03:43,600 --> 02:03:45,600
 we're gonna do the same thing,

1504
02:03:45,600 --> 02:03:47,600
 we're gonna do the same thing,

1505
02:03:47,600 --> 02:03:49,600
 we're gonna do the same thing,

1506
02:03:49,600 --> 02:03:51,600
 we're gonna do the same thing,

1507
02:03:51,600 --> 02:03:53,600
 we're gonna do the same thing,

1508
02:03:53,600 --> 02:03:55,600
 we're gonna do the same thing,

1509
02:03:55,600 --> 02:03:57,600
 we're gonna do the same thing,

1510
02:03:57,600 --> 02:03:59,600
 we're gonna do the same thing,

1511
02:03:59,600 --> 02:04:01,600
 we're gonna do the same thing,

1512
02:04:01,600 --> 02:04:03,600
 we're gonna do the same thing,

1513
02:04:03,600 --> 02:04:05,600
 we're gonna do the same thing,

1514
02:04:05,600 --> 02:04:07,600
 we're gonna do the same thing,

1515
02:04:07,600 --> 02:04:09,600
 we're gonna do the same thing,

1516
02:04:09,600 --> 02:04:11,600
 we're gonna do the same thing,

1517
02:04:11,600 --> 02:04:13,600
 we're gonna do the same thing,

1518
02:04:13,600 --> 02:04:15,600
 we're gonna do the same thing,

1519
02:04:15,600 --> 02:04:17,600
 we're gonna do the same thing,

1520
02:04:17,600 --> 02:04:19,600
 we're gonna do the same thing,

1521
02:04:19,600 --> 02:04:21,600
 we're gonna do the same thing,

1522
02:04:21,600 --> 02:04:23,600
 we're gonna do the same thing,

1523
02:04:23,600 --> 02:04:25,600
 we're gonna do the same thing,

1524
02:04:25,600 --> 02:04:27,600
 we're gonna do the same thing,

1525
02:04:27,600 --> 02:04:29,600
 we're gonna do the same thing,

1526
02:04:29,600 --> 02:04:31,600
 we're gonna do the same thing,

1527
02:04:31,600 --> 02:04:33,600
 we're gonna do the same thing,

1528
02:04:33,600 --> 02:04:35,600
 we're gonna do the same thing,

1529
02:04:35,600 --> 02:04:37,600
 we're gonna do the same thing,

1530
02:04:37,600 --> 02:04:39,600
 we're gonna do the same thing,

1531
02:04:39,600 --> 02:04:41,600
 we're gonna do the same thing,

1532
02:04:41,600 --> 02:04:43,600
 we're gonna do the same thing,

1533
02:04:43,600 --> 02:04:45,600
 we're gonna do the same thing,

1534
02:04:45,600 --> 02:04:47,600
 we're gonna do the same thing,

1535
02:04:47,600 --> 02:04:49,600
 we're gonna do the same thing,

1536
02:04:49,600 --> 02:04:51,600
 we're gonna do the same thing,

1537
02:04:51,600 --> 02:04:53,600
 we're gonna do the same thing,

1538
02:04:53,600 --> 02:04:55,600
 we're gonna do the same thing,

1539
02:04:55,600 --> 02:04:57,600
 we're gonna do the same thing,

1540
02:04:57,600 --> 02:04:59,600
 we're gonna do the same thing,

1541
02:04:59,600 --> 02:05:01,600
 we're gonna do the same thing,

1542
02:05:01,600 --> 02:05:03,600
 we're gonna do the same thing,

1543
02:05:03,600 --> 02:05:05,600
 we're gonna do the same thing,

1544
02:05:05,600 --> 02:05:07,600
 we're gonna do the same thing,

1545
02:05:07,600 --> 02:05:09,600
 we're gonna do the same thing,

1546
02:05:09,600 --> 02:05:11,600
 we're gonna do the same thing,

1547
02:05:11,600 --> 02:05:13,600
 we're gonna do the same thing,

1548
02:05:13,600 --> 02:05:15,600
 we're gonna do the same thing,

1549
02:05:15,600 --> 02:05:17,600
 we're gonna do the same thing,

1550
02:05:17,600 --> 02:05:19,600
 we're gonna do the same thing,

1551
02:05:19,600 --> 02:05:21,600
 we're gonna do the same thing,

1552
02:05:21,600 --> 02:05:23,600
 we're gonna do the same thing,

1553
02:05:23,600 --> 02:05:25,600
 we're gonna do the same thing,

1554
02:05:25,600 --> 02:05:27,600
 we're gonna do the same thing,

1555
02:05:27,600 --> 02:05:29,600
 we're gonna do the same thing,

1556
02:05:29,600 --> 02:05:31,600
 we're gonna do the same thing,

1557
02:05:31,600 --> 02:05:33,600
 we're gonna do the same thing,

1558
02:05:33,600 --> 02:05:35,600
 we're gonna do the same thing,

1559
02:05:35,600 --> 02:05:37,600
 we're gonna do the same thing,

1560
02:05:37,600 --> 02:05:39,600
 we're gonna do the same thing,

1561
02:05:39,600 --> 02:05:41,600
 we're gonna do the same thing,

1562
02:05:41,600 --> 02:05:43,600
 we're gonna do the same thing,

1563
02:05:43,600 --> 02:05:45,600
 we're gonna do the same thing,

1564
02:05:45,600 --> 02:05:47,600
 we're gonna do the same thing,

1565
02:05:47,600 --> 02:05:49,600
 we're gonna do the same thing,

1566
02:05:49,600 --> 02:05:51,600
 we're gonna do the same thing,

1567
02:05:51,600 --> 02:05:53,600
 we're gonna do the same thing,

1568
02:05:53,600 --> 02:05:55,600
 we're gonna do the same thing,

1569
02:05:55,600 --> 02:05:57,600
 we're gonna do the same thing,

1570
02:05:57,600 --> 02:05:59,600
 we're gonna do the same thing,

1571
02:05:59,600 --> 02:06:01,600
 we're gonna do the same thing,

1572
02:06:01,600 --> 02:06:03,600
 we're gonna do the same thing,

1573
02:06:03,600 --> 02:06:05,600
 we're gonna do the same thing,

1574
02:06:05,600 --> 02:06:07,600
 we're gonna do the same thing,

1575
02:06:07,600 --> 02:06:09,600
 we're gonna do the same thing,

1576
02:06:09,600 --> 02:06:11,600
 we're gonna do the same thing,

1577
02:06:11,600 --> 02:06:13,600
 we're gonna do the same thing,

1578
02:06:13,600 --> 02:06:15,600
 we're gonna do the same thing,

1579
02:06:15,600 --> 02:06:17,600
 we're gonna do the same thing,

1580
02:06:17,600 --> 02:06:19,600
 we're gonna do the same thing,

1581
02:06:19,600 --> 02:06:21,600
 we're gonna do the same thing,

1582
02:06:21,600 --> 02:06:23,600
 we're gonna do the same thing,

1583
02:06:23,600 --> 02:06:25,600
 we're gonna do the same thing,

1584
02:06:25,600 --> 02:06:27,600
 we're gonna do the same thing,

1585
02:06:27,600 --> 02:06:29,600
 we're gonna do the same thing,

1586
02:06:29,600 --> 02:06:31,600
 we're gonna do the same thing,

1587
02:06:31,600 --> 02:06:33,600
 we're gonna do the same thing,

1588
02:06:33,600 --> 02:06:35,600
 we're gonna do the same thing,

1589
02:06:35,600 --> 02:06:37,600
 we're gonna do the same thing,

1590
02:06:37,600 --> 02:06:39,600
 we're gonna do the same thing,

1591
02:06:39,600 --> 02:06:41,600
 we're gonna do the same thing,

1592
02:06:41,600 --> 02:06:43,600
 we're gonna do the same thing,

1593
02:06:43,600 --> 02:06:45,600
 we're gonna do the same thing,

1594
02:06:45,600 --> 02:06:47,600
 we're gonna do the same thing,

1595
02:06:47,600 --> 02:06:49,600
 we're gonna do the same thing,

1596
02:06:49,600 --> 02:06:51,600
 we're gonna do the same thing,

1597
02:06:51,600 --> 02:06:53,600
 we're gonna do the same thing,

1598
02:06:53,600 --> 02:06:55,600
 we're gonna do the same thing,

1599
02:06:55,600 --> 02:06:57,600
 we're gonna do the same thing,

1600
02:06:57,600 --> 02:06:59,600
 we're gonna do the same thing,

1601
02:06:59,600 --> 02:07:01,600
 we're gonna do the same thing,

1602
02:07:01,600 --> 02:07:03,600
 we're gonna do the same thing,

1603
02:07:03,600 --> 02:07:05,600
 we're gonna do the same thing,

1604
02:07:05,600 --> 02:07:07,600
 we're gonna do the same thing,

1605
02:07:07,600 --> 02:07:09,600
 we're gonna do the same thing,

1606
02:07:09,600 --> 02:07:11,600
 we're gonna do the same thing,

1607
02:07:11,600 --> 02:07:13,600
 we're gonna do the same thing,

1608
02:07:13,600 --> 02:07:15,600
 we're gonna do the same thing,

1609
02:07:15,600 --> 02:07:17,600
 we're gonna do the same thing,

1610
02:07:17,600 --> 02:07:19,600
 we're gonna do the same thing,

1611
02:07:19,600 --> 02:07:21,600
 we're gonna do the same thing,

1612
02:07:21,600 --> 02:07:23,600
 we're gonna do the same thing,

1613
02:07:23,600 --> 02:07:25,600
 we're gonna do the same thing,

1614
02:07:25,600 --> 02:07:27,600
 we're gonna do the same thing,

1615
02:07:27,600 --> 02:07:29,600
 we're gonna do the same thing.

1616
02:07:29,600 --> 02:07:31,600
 I think most of you have done that,

1617
02:07:31,600 --> 02:07:33,600
 ahh, done that correctly.

1618
02:07:33,600 --> 02:07:35,600
 So just quick check.

1619
02:07:35,600 --> 02:07:37,600
 Okay,

1620
02:07:37,600 --> 02:07:39,600
 so we are having

1621
02:07:39,600 --> 02:07:41,600
 a very simple mini max tree,

1622
02:07:41,600 --> 02:07:43,600
 and then

1623
02:07:43,600 --> 02:07:45,600
 probably have a very good

1624
02:07:45,600 --> 02:07:47,600
 evaluation function,

1625
02:07:47,600 --> 02:07:49,600
 so the utility value

1626
02:07:49,600 --> 02:07:51,600
 already being around

1627
02:07:51,600 --> 02:07:53,600
 $2,000,

1628
02:07:53,600 --> 02:07:55,600
 $1,000,

1629
02:07:55,600 --> 02:08:02,600
 So the utility value already evaluated and attached to each of the terminal nodes.

1630
02:08:02,600 --> 02:08:03,600
 Right?

1631
02:08:03,600 --> 02:08:07,040
 So the terminal node, that means there's no children after that.

1632
02:08:07,040 --> 02:08:10,200
 So we already have this value attached to it.

1633
02:08:10,200 --> 02:08:16,520
 And then for minimax algorithm, it's always played with a game tree, and then they always

1634
02:08:16,520 --> 02:08:17,520
 layer by layer.

1635
02:08:17,520 --> 02:08:22,080
 So if the first layer is a maximizer, the next definitely is a minimizer.

1636
02:08:22,080 --> 02:08:23,080
 Okay?

1637
02:08:23,559 --> 02:08:24,559
 Maximizer again.

1638
02:08:24,559 --> 02:08:26,200
 It's take turn, take turn.

1639
02:08:26,200 --> 02:08:28,840
 And then if the first one is mini, then next is max.

1640
02:08:28,840 --> 02:08:29,840
 Okay?

1641
02:08:29,840 --> 02:08:30,840
 So it's always like this.

1642
02:08:30,840 --> 02:08:37,680
 So suppose here, in the beginning, this is the maximizer, then next one will be mini,

1643
02:08:37,680 --> 02:08:39,680
 next is max, and this way.

1644
02:08:39,680 --> 02:08:40,680
 Okay?

1645
02:08:40,680 --> 02:08:46,200
 So for this, can we get the utility value for i?

1646
02:08:46,200 --> 02:08:47,200
 We need to check.

1647
02:08:47,200 --> 02:08:49,320
 This is what player, right?

1648
02:08:49,320 --> 02:08:52,759
 So this is mini, m, i, n.

1649
02:08:52,759 --> 02:08:56,599
 Yeah, mini player, then what value he should choose?

1650
02:08:56,599 --> 02:08:58,599
 Yeah, zero.

1651
02:08:58,599 --> 02:09:02,840
 So that's why we get the zero.

1652
02:09:02,840 --> 02:09:04,840
 So we get zero.

1653
02:09:04,840 --> 02:09:14,840
 Okay, we get the, I didn't choose.

1654
02:09:15,840 --> 02:09:21,840
 Okay, I have a zero here.

1655
02:09:21,840 --> 02:09:22,840
 Zero.

1656
02:09:22,840 --> 02:09:24,840
 Okay, then f.

1657
02:09:24,840 --> 02:09:31,600
 Okay, this level no more, no need to decide because all the rest, actually, are the terminal

1658
02:09:31,600 --> 02:09:32,600
 already.

1659
02:09:32,600 --> 02:09:36,840
 So for f, f is a maximizer.

1660
02:09:36,840 --> 02:09:40,840
 So what value we should have?

1661
02:09:40,840 --> 02:09:42,840
 Five.

1662
02:09:43,840 --> 02:09:45,840
 Eight.

1663
02:09:45,840 --> 02:09:49,640
 Okay, then this is a minimizer.

1664
02:09:49,640 --> 02:09:53,840
 That's why we have four.

1665
02:09:53,840 --> 02:09:55,840
 This is a minimizer.

1666
02:09:55,840 --> 02:09:57,840
 Yeah, three.

1667
02:09:57,840 --> 02:10:00,840
 Then we have four value.

1668
02:10:00,840 --> 02:10:01,840
 Four.

1669
02:10:01,840 --> 02:10:03,840
 This is a maximizer.

1670
02:10:03,840 --> 02:10:04,840
 Yeah.

1671
02:10:04,840 --> 02:10:06,840
 So meaning what?

1672
02:10:06,840 --> 02:10:10,840
 Maximizer by right should go which branch?

1673
02:10:10,840 --> 02:10:15,840
 And move to which branch?

1674
02:10:15,840 --> 02:10:17,840
 Go this way.

1675
02:10:17,840 --> 02:10:20,840
 Yeah, so what is the indication?

1676
02:10:20,840 --> 02:10:24,840
 What's the meaning of it?

1677
02:10:24,840 --> 02:10:29,840
 Yeah, if you come to this branch, high chance of way.

1678
02:10:29,840 --> 02:10:35,840
 If our utility value are very well-designed, then based on this algorithm, if he moved

1679
02:10:35,840 --> 02:10:39,840
 to this, likely, no chance.

1680
02:10:39,840 --> 02:10:46,840
 Especially if this number indicates certain probability, for example, then he definitely

1681
02:10:46,840 --> 02:10:48,840
 should go higher priority.

1682
02:10:48,840 --> 02:10:55,840
 But of course, after he moved to here, up to his opponents, his opponents maybe not

1683
02:10:55,840 --> 02:10:58,840
 really play as we thought.

1684
02:10:58,840 --> 02:11:00,840
 He'd probably not go this way.

1685
02:11:00,840 --> 02:11:03,840
 He'd probably go another direction.

1686
02:11:03,840 --> 02:11:08,840
 Then we need to adjust accordingly.

1687
02:11:08,840 --> 02:11:15,840
 But it's just like the first movement indicates whatever.

1688
02:11:15,840 --> 02:11:17,840
 We guide by this.

1689
02:11:17,840 --> 02:11:19,840
 OK.

1690
02:11:19,840 --> 02:11:21,840
 So that's all.

1691
02:11:21,840 --> 02:11:24,840
 Everybody know how to use minimax?

1692
02:11:24,840 --> 02:11:25,840
 OK.

1693
02:11:25,840 --> 02:11:34,840
 Then yes, that's very nice if the space can be fully stored or exploded in the computer

1694
02:11:34,840 --> 02:11:35,840
 and then stored there.

1695
02:11:35,840 --> 02:11:40,840
 We can also have a very good utility function to evaluate.

1696
02:11:40,840 --> 02:11:42,840
 Then we can apply this.

1697
02:11:42,840 --> 02:11:48,840
 But we probably don't have such kind of luck.

1698
02:11:48,840 --> 02:11:56,840
 That's why we probably have to come up with another more efficient method on top of the

1699
02:11:56,840 --> 02:11:57,840
 minimax.

1700
02:11:57,840 --> 02:11:59,840
 So that's alpha beta pruning.

1701
02:11:59,840 --> 02:12:00,840
 OK.

1702
02:12:00,840 --> 02:12:06,840
 So this is the last algorithm I'm going to talk about it before end of this session.

1703
02:12:06,840 --> 02:12:07,840
 OK.

1704
02:12:07,840 --> 02:12:12,840
 So we still use exactly the minimax tree or graph.

1705
02:12:12,840 --> 02:12:15,840
 And then the end results should be exactly the same.

1706
02:12:15,840 --> 02:12:16,840
 OK.

1707
02:12:16,840 --> 02:12:22,840
 Meaning, for example, if I decide this is a max and should go this branch, if you use

1708
02:12:22,840 --> 02:12:26,840
 pruning, non-pruning should give us the same answer.

1709
02:12:26,840 --> 02:12:27,840
 That's ideal.

1710
02:12:27,840 --> 02:12:30,840
 Otherwise, it's not the efficient model.

1711
02:12:30,840 --> 02:12:35,840
 It's not improved version, improved algorithm.

1712
02:12:35,840 --> 02:12:41,840
 And then the good thing is actually they can enable us to prune out certain amount of the

1713
02:12:41,840 --> 02:12:45,840
 states or significant amounts, say 50%, that would be nice.

1714
02:12:45,840 --> 02:12:48,840
 You can totally abandon them.

1715
02:12:48,840 --> 02:12:51,840
 You don't need to go into those branches.

1716
02:12:51,840 --> 02:12:53,840
 That's a key idea.

1717
02:12:53,840 --> 02:12:54,840
 OK.

1718
02:12:54,840 --> 02:12:55,840
 Anything I can say?

1719
02:12:55,840 --> 02:13:03,840
 So it's an advanced minimax by pruning, OK, by good pruning strategy and pruning without

1720
02:13:03,840 --> 02:13:05,840
 losing any information.

1721
02:13:05,840 --> 02:13:06,840
 OK.

1722
02:13:06,840 --> 02:13:12,840
 So that is the alpha beta pruning.

1723
02:13:12,840 --> 02:13:13,840
 OK.

1724
02:13:13,840 --> 02:13:16,840
 Two kind of pruning.

1725
02:13:16,840 --> 02:13:18,840
 One is called alpha pruning.

1726
02:13:18,840 --> 02:13:20,840
 The other one is beta pruning.

1727
02:13:20,840 --> 02:13:23,840
 But pruning is a cutoff certain branch.

1728
02:13:23,840 --> 02:13:24,840
 OK.

1729
02:13:24,840 --> 02:13:25,840
 So how to cut?

1730
02:13:25,840 --> 02:13:31,840
 They attach a value to maximizer or minimizer.

1731
02:13:31,840 --> 02:13:32,840
 OK.

1732
02:13:32,840 --> 02:13:39,840
 The value you attach on the symbol we like to attach to a maximizer, we use alpha.

1733
02:13:39,840 --> 02:13:40,840
 OK.

1734
02:13:40,840 --> 02:13:43,840
 Alpha to relate it to the maximizer.

1735
02:13:43,840 --> 02:13:47,840
 Beta related to the minimizer.

1736
02:13:47,840 --> 02:13:48,840
 OK.

1737
02:13:48,840 --> 02:13:50,840
 So alpha, beta.

1738
02:13:50,840 --> 02:13:51,840
 OK.

1739
02:13:51,840 --> 02:13:55,840
 Then this is one pruning here.

1740
02:13:55,840 --> 02:14:02,840
 So if the grandparents here is the minimizer, OK, mini.

1741
02:14:02,840 --> 02:14:07,840
 So you have a value called beta attached to it, right?

1742
02:14:07,840 --> 02:14:10,840
 And then you have the children.

1743
02:14:10,840 --> 02:14:14,840
 So this children, because you are the mini, the children definitely is a max, right?

1744
02:14:14,840 --> 02:14:16,840
 So the children have max.

1745
02:14:16,840 --> 02:14:19,840
 So alpha attached to max.

1746
02:14:19,840 --> 02:14:27,840
 So now you compare the relationship between the alpha and beta.

1747
02:14:27,840 --> 02:14:28,840
 OK.

1748
02:14:28,840 --> 02:14:42,840
 So if the alpha value actually is greater than the beta value in the parents or in the

1749
02:14:42,840 --> 02:14:52,840
 sisters, then you can prune away those branches below the alpha nodes.

1750
02:14:52,840 --> 02:14:57,840
 That's a pruning.

1751
02:14:57,840 --> 02:15:06,840
 So that is a relationship between the, OK, if you say these are the kids, then this is

1752
02:15:06,840 --> 02:15:10,840
 a parent, then this is a grandparents, right?

1753
02:15:10,840 --> 02:15:19,840
 So if based on one of the children, you already can set the value for your parents as an alpha

1754
02:15:19,840 --> 02:15:29,840
 value, tentative alpha value, then this alpha value already greater than your grandparents

1755
02:15:29,840 --> 02:15:33,840
 beta value.

1756
02:15:33,840 --> 02:15:43,840
 So if under this condition, you don't need to care what is your sibling's value.

1757
02:15:43,840 --> 02:15:45,840
 Prune away.

1758
02:15:45,840 --> 02:15:47,840
 No need to visit.

1759
02:15:47,840 --> 02:15:48,840
 OK.

1760
02:15:48,840 --> 02:15:51,840
 I'll show you why later, but just remember this.

1761
02:15:51,840 --> 02:15:52,840
 OK.

1762
02:15:52,840 --> 02:15:53,840
 This is a relationship.

1763
02:15:53,840 --> 02:15:57,840
 So you have children, parents, grandparents.

1764
02:15:57,840 --> 02:15:58,840
 OK.

1765
02:15:58,840 --> 02:16:01,840
 So these three, three pairs, two.

1766
02:16:01,840 --> 02:16:03,840
 Is that considered as two or three?

1767
02:16:03,840 --> 02:16:07,840
 So you have n, n plus one, n plus two there.

1768
02:16:07,840 --> 02:16:08,840
 OK.

1769
02:16:08,840 --> 02:16:11,840
 And this is a relationship.

1770
02:16:11,840 --> 02:16:14,840
 So this is alpha greater than beta.

1771
02:16:14,840 --> 02:16:16,840
 Beta is a minimizer.

1772
02:16:16,840 --> 02:16:17,840
 OK.

1773
02:16:17,840 --> 02:16:22,840
 What if the grandparents is alpha?

1774
02:16:22,840 --> 02:16:24,840
 It's a maximizer.

1775
02:16:24,840 --> 02:16:25,840
 OK.

1776
02:16:25,840 --> 02:16:29,840
 So if your grandparents is a maximizer, parents is a minimizer.

1777
02:16:30,840 --> 02:16:36,840
 If your children already give the parents a tentative beta value, which already show

1778
02:16:36,840 --> 02:16:46,840
 the beta value less than the grandparents alpha value, that means don't care.

1779
02:16:46,840 --> 02:16:50,840
 You don't need to evaluate your siblings.

1780
02:16:50,840 --> 02:16:51,840
 OK.

1781
02:16:51,840 --> 02:16:53,840
 So this is the idea.

1782
02:16:53,840 --> 02:17:01,840
 So I try to use, draw the graph to help us to understand these words here about this

1783
02:17:01,840 --> 02:17:04,840
 cutting, OK, about this cutting.

1784
02:17:04,840 --> 02:17:06,840
 So this is called alpha cut.

1785
02:17:06,840 --> 02:17:08,840
 Previously called beta cut.

1786
02:17:08,840 --> 02:17:09,840
 OK.

1787
02:17:09,840 --> 02:17:14,840
 Because this beta here, but doesn't matter you call it what cut, but just know it's cut.

1788
02:17:14,840 --> 02:17:15,840
 OK.

1789
02:17:15,840 --> 02:17:17,840
 But the relationship is important.

1790
02:17:17,840 --> 02:17:28,840
 If this is a max, this is mini, your current value already show greater than the mini,

1791
02:17:28,840 --> 02:17:33,840
 you see the mini meaning they will choose a minimum value.

1792
02:17:33,840 --> 02:17:34,840
 Right.

1793
02:17:34,840 --> 02:17:42,840
 So your tentative value already show this whole branch have a tendency of greater than

1794
02:17:42,840 --> 02:17:47,840
 the mini value in the parent, in the grandparents.

1795
02:17:47,840 --> 02:17:48,840
 OK.

1796
02:17:48,840 --> 02:17:55,840
 Your parents already show their value, the alpha value already greater than their grandparents

1797
02:17:55,840 --> 02:17:56,840
 mini value.

1798
02:17:56,840 --> 02:18:00,840
 Do you think you still have chance to be visited?

1799
02:18:00,840 --> 02:18:04,840
 This branch is totally will be ignored.

1800
02:18:04,840 --> 02:18:05,840
 Right.

1801
02:18:05,840 --> 02:18:11,840
 So that is why, that is why no point to check what's the value here.

1802
02:18:11,840 --> 02:18:13,840
 That's the whole thing.

1803
02:18:13,840 --> 02:18:14,840
 OK.

1804
02:18:14,840 --> 02:18:19,840
 Because you see mini, mini meaning they want to choose a branch with a minimum value.

1805
02:18:19,840 --> 02:18:23,840
 So your tentative value already show you are too big.

1806
02:18:23,840 --> 02:18:24,840
 You are a little big.

1807
02:18:24,840 --> 02:18:26,840
 This branch already too big.

1808
02:18:26,840 --> 02:18:28,840
 They will not come to here.

1809
02:18:28,840 --> 02:18:29,840
 They will not come to here.

1810
02:18:29,840 --> 02:18:32,840
 So why bother these things?

1811
02:18:32,840 --> 02:18:33,840
 Right.

1812
02:18:33,840 --> 02:18:34,840
 That's the idea.

1813
02:18:34,840 --> 02:18:35,840
 OK.

1814
02:18:35,840 --> 02:18:41,840
 So if you are a little bit smaller, if it's a max and your value already show you are

1815
02:18:41,840 --> 02:18:49,840
 so small, you see your beta value already very small than your parent's alpha value.

1816
02:18:49,840 --> 02:18:53,840
 So they will not come to this branch.

1817
02:18:53,840 --> 02:18:57,840
 They will move to other branch which have a high potential.

1818
02:18:57,840 --> 02:18:59,840
 They are taking the maximum value.

1819
02:18:59,840 --> 02:19:00,840
 So you are too small.

1820
02:19:00,840 --> 02:19:02,840
 This branch is too small.

1821
02:19:02,840 --> 02:19:04,840
 That's why no chance.

1822
02:19:04,840 --> 02:19:05,840
 No water.

1823
02:19:05,840 --> 02:19:08,840
 No need to bother.

1824
02:19:08,840 --> 02:19:10,840
 OK.

1825
02:19:10,840 --> 02:19:12,840
 That's a key principle.

1826
02:19:12,840 --> 02:19:13,840
 Need to remember.

1827
02:19:13,840 --> 02:19:16,840
 Have this picture in your mind.

1828
02:19:16,840 --> 02:19:19,840
 You know, that's the relationship.

1829
02:19:19,840 --> 02:19:20,840
 OK.

1830
02:19:20,840 --> 02:19:21,840
 That's all.

1831
02:19:21,840 --> 02:19:23,840
 I think we can put together.

1832
02:19:23,840 --> 02:19:24,840
 We are just now separate.

1833
02:19:24,840 --> 02:19:29,840
 But I put together in one slide so it helps us to visualize it.

1834
02:19:29,840 --> 02:19:36,840
 Also, this is talking about, you know, we have basically have to have n, n plus 1, n plus

1835
02:19:36,840 --> 02:19:38,840
 2, at least have three layers.

1836
02:19:38,840 --> 02:19:43,840
 Then you can actually see the relationship among them.

1837
02:19:43,840 --> 02:19:44,840
 OK.

1838
02:19:44,840 --> 02:19:46,840
 Now let's do it.

1839
02:19:46,840 --> 02:19:47,840
 OK.

1840
02:19:47,840 --> 02:19:49,840
 Apply this rule.

1841
02:19:49,840 --> 02:20:02,840
 Do you have this version?

1842
02:20:02,840 --> 02:20:05,840
 I already show you the cut.

1843
02:20:05,840 --> 02:20:07,840
 I already show you the cut.

1844
02:20:07,840 --> 02:20:08,840
 Your slides.

1845
02:20:08,840 --> 02:20:12,840
 Do you see your slides have this cut or not?

1846
02:20:12,840 --> 02:20:13,840
 Already have.

1847
02:20:13,840 --> 02:20:14,840
 OK.

1848
02:20:14,840 --> 02:20:15,840
 OK.

1849
02:20:15,840 --> 02:20:16,840
 They are online.

1850
02:20:16,840 --> 02:20:17,840
 OK.

1851
02:20:17,840 --> 02:20:19,840
 You don't know which one cut.

1852
02:20:19,840 --> 02:20:20,840
 OK.

1853
02:20:20,840 --> 02:20:21,840
 Let's do it.

1854
02:20:21,840 --> 02:20:22,840
 OK.

1855
02:20:22,840 --> 02:20:30,840
 So for minimax, we go all the way to the terminal and then we go one level up and backwards

1856
02:20:30,840 --> 02:20:32,840
 to get the utility value.

1857
02:20:32,840 --> 02:20:39,840
 For this alpha beta pruning, we can say we want to go for the steps first, DFS.

1858
02:20:39,840 --> 02:20:40,840
 OK.

1859
02:20:40,840 --> 02:20:45,840
 Either from left, most left to the right, or right to left.

1860
02:20:45,840 --> 02:20:46,840
 You can specify.

1861
02:20:46,840 --> 02:20:47,840
 OK.

1862
02:20:47,840 --> 02:20:52,840
 This will not give you the same answer, but you can have preference.

1863
02:20:52,840 --> 02:20:55,840
 So let's start from left to right.

1864
02:20:55,840 --> 02:20:56,840
 OK.

1865
02:20:56,840 --> 02:20:57,840
 DFS from left to right.

1866
02:20:57,840 --> 02:21:01,840
 So if we don't say anything, normally it's left to right.

1867
02:21:01,840 --> 02:21:02,840
 So we left to right.

1868
02:21:02,840 --> 02:21:03,840
 DFS, DFS.

1869
02:21:03,840 --> 02:21:04,840
 OK.

1870
02:21:04,840 --> 02:21:05,840
 So that first.

1871
02:21:05,840 --> 02:21:06,840
 So I go.

1872
02:21:06,840 --> 02:21:07,840
 OK.

1873
02:21:07,840 --> 02:21:08,840
 I need to.

1874
02:21:08,840 --> 02:21:15,840
 I probably should say the initial value of the initial value.

1875
02:21:16,840 --> 02:21:21,840
 Or for the alpha, we should all set as a minus infinity.

1876
02:21:21,840 --> 02:21:22,840
 OK.

1877
02:21:22,840 --> 02:21:25,840
 Because the alpha value can only increase.

1878
02:21:25,840 --> 02:21:28,840
 Where is my?

1879
02:21:28,840 --> 02:21:29,840
 OK.

1880
02:21:29,840 --> 02:21:30,840
 Good.

1881
02:21:30,840 --> 02:21:31,840
 OK.

1882
02:21:31,840 --> 02:21:35,840
 So this is the alpha player, right?

1883
02:21:35,840 --> 02:21:36,840
 This is the alpha.

1884
02:21:36,840 --> 02:21:41,840
 Where is my pen?

1885
02:21:41,840 --> 02:21:42,840
 OK.

1886
02:21:43,840 --> 02:21:47,840
 I cannot see it on my screen.

1887
02:21:47,840 --> 02:21:49,840
 I can only see from here.

1888
02:21:49,840 --> 02:21:50,840
 OK.

1889
02:21:50,840 --> 02:21:53,840
 So this is the alpha player.

1890
02:21:53,840 --> 02:21:56,840
 This is the beta value.

1891
02:21:56,840 --> 02:22:01,840
 And then alpha value and beta value.

1892
02:22:01,840 --> 02:22:08,840
 And then initially, all the alpha should start from very, very small.

1893
02:22:08,840 --> 02:22:11,840
 Then all the beta should be very, very big.

1894
02:22:11,840 --> 02:22:17,840
 Because beta always have to be decreased.

1895
02:22:17,840 --> 02:22:20,840
 Alpha value always need to be increased.

1896
02:22:20,840 --> 02:22:21,840
 OK.

1897
02:22:21,840 --> 02:22:25,840
 So this is the minus infinity.

1898
02:22:25,840 --> 02:22:28,840
 So that means for all this level, all the nodes.

1899
02:22:28,840 --> 02:22:29,840
 OK.

1900
02:22:29,840 --> 02:22:32,840
 And then we go left to right and DFS.

1901
02:22:32,840 --> 02:22:35,840
 So we hit this terminal.

1902
02:22:35,840 --> 02:22:37,840
 And this is value two.

1903
02:22:37,840 --> 02:22:40,840
 And that means we should update the alpha value.

1904
02:22:40,840 --> 02:22:48,840
 So the alpha value from minus would be two now.

1905
02:22:48,840 --> 02:22:49,840
 OK.

1906
02:22:49,840 --> 02:22:54,840
 Then we can compare these two to this beta value.

1907
02:22:54,840 --> 02:22:55,840
 OK.

1908
02:22:55,840 --> 02:22:56,840
 Because we have the alpha value.

1909
02:22:56,840 --> 02:22:57,840
 This is our beta value.

1910
02:22:57,840 --> 02:23:04,840
 So beta value, are we too big?

1911
02:23:04,840 --> 02:23:06,840
 Are we too big?

1912
02:23:06,840 --> 02:23:07,840
 So ignore these three.

1913
02:23:07,840 --> 02:23:11,840
 Initial value is a positive infinity.

1914
02:23:11,840 --> 02:23:12,840
 Are we too big?

1915
02:23:12,840 --> 02:23:15,840
 Are we bigger than positive infinity?

1916
02:23:15,840 --> 02:23:16,840
 No.

1917
02:23:16,840 --> 02:23:17,840
 Right?

1918
02:23:17,840 --> 02:23:18,840
 No.

1919
02:23:18,840 --> 02:23:19,840
 Meaning what?

1920
02:23:19,840 --> 02:23:23,840
 Meaning we should continue checking this branch.

1921
02:23:23,840 --> 02:23:24,840
 OK.

1922
02:23:24,840 --> 02:23:26,840
 So we should check this branch.

1923
02:23:26,840 --> 02:23:29,840
 This branch is value is three.

1924
02:23:29,840 --> 02:23:30,840
 So three.

1925
02:23:30,840 --> 02:23:31,840
 We are alpha.

1926
02:23:31,840 --> 02:23:34,840
 At moments alpha value equal to two.

1927
02:23:34,840 --> 02:23:35,840
 Now it's three.

1928
02:23:35,840 --> 02:23:37,840
 Should we update?

1929
02:23:37,840 --> 02:23:38,840
 Yes.

1930
02:23:38,840 --> 02:23:39,840
 Update.

1931
02:23:39,840 --> 02:23:41,840
 Now we get three.

1932
02:23:41,840 --> 02:23:42,840
 OK.

1933
02:23:42,840 --> 02:23:43,840
 We get three.

1934
02:23:43,840 --> 02:23:46,840
 And now this whole branch, is that done?

1935
02:23:46,840 --> 02:23:47,840
 We are done.

1936
02:23:47,840 --> 02:23:48,840
 We are done.

1937
02:23:48,840 --> 02:23:53,840
 That means these three can be used to update this value.

1938
02:23:53,840 --> 02:23:54,840
 OK.

1939
02:23:54,840 --> 02:23:56,840
 Before was positive infinity.

1940
02:23:56,840 --> 02:24:00,840
 So now become three.

1941
02:24:00,840 --> 02:24:01,840
 OK.

1942
02:24:01,840 --> 02:24:03,840
 So this is just tentative three.

1943
02:24:03,840 --> 02:24:04,840
 This is tentative.

1944
02:24:04,840 --> 02:24:08,840
 Then we can compare these three with the beta value.

1945
02:24:08,840 --> 02:24:09,840
 Oh, sorry.

1946
02:24:09,840 --> 02:24:10,840
 Alpha value.

1947
02:24:10,840 --> 02:24:11,840
 Because this is the beta value.

1948
02:24:11,840 --> 02:24:12,840
 Alpha value.

1949
02:24:12,840 --> 02:24:13,840
 OK.

1950
02:24:13,840 --> 02:24:19,840
 Are we, what's the relationship between beta and alpha?

1951
02:24:19,840 --> 02:24:22,840
 Are we too small?

1952
02:24:22,840 --> 02:24:25,840
 Are we too small?

1953
02:24:25,840 --> 02:24:26,840
 This is negative.

1954
02:24:26,840 --> 02:24:27,840
 This is three.

1955
02:24:27,840 --> 02:24:29,840
 Are we too small?

1956
02:24:29,840 --> 02:24:30,840
 No.

1957
02:24:30,840 --> 02:24:33,840
 So meaning what?

1958
02:24:33,840 --> 02:24:36,840
 Can we prune this away?

1959
02:24:36,840 --> 02:24:37,840
 Cannot.

1960
02:24:37,840 --> 02:24:39,840
 We must do checking.

1961
02:24:39,840 --> 02:24:40,840
 OK.

1962
02:24:40,840 --> 02:24:43,840
 So we go that first branch base.

1963
02:24:43,840 --> 02:24:46,840
 So this way we get five.

1964
02:24:46,840 --> 02:24:51,840
 This used to be negative infinity.

1965
02:24:51,840 --> 02:24:52,840
 Right?

1966
02:24:52,840 --> 02:24:55,840
 To start, every, every, every notes here is negative infinity.

1967
02:24:55,840 --> 02:24:56,840
 So now it's five.

1968
02:24:56,840 --> 02:24:58,840
 So we should update it.

1969
02:24:58,840 --> 02:25:00,840
 So now this is five.

1970
02:25:00,840 --> 02:25:01,840
 OK.

1971
02:25:01,840 --> 02:25:02,840
 My.

1972
02:25:02,840 --> 02:25:03,840
 OK.

1973
02:25:03,840 --> 02:25:06,840
 So it was negative.

1974
02:25:06,840 --> 02:25:11,840
 Now update become five.

1975
02:25:11,840 --> 02:25:12,840
 OK.

1976
02:25:12,840 --> 02:25:15,840
 Now watch.

1977
02:25:15,840 --> 02:25:19,840
 Now we need to decide whether we can prune away or we should check in.

1978
02:25:19,840 --> 02:25:20,840
 Right?

1979
02:25:20,840 --> 02:25:21,840
 OK.

1980
02:25:21,840 --> 02:25:26,840
 So what we need to do is we need to compare these five, the value here with the beta value

1981
02:25:26,840 --> 02:25:27,840
 here.

1982
02:25:27,840 --> 02:25:29,840
 What is the beta value now?

1983
02:25:29,840 --> 02:25:30,840
 Three.

1984
02:25:30,840 --> 02:25:33,840
 What is my value now?

1985
02:25:33,840 --> 02:25:34,840
 Five.

1986
02:25:34,840 --> 02:25:36,840
 Am I too big?

1987
02:25:36,840 --> 02:25:37,840
 Yes.

1988
02:25:37,840 --> 02:25:38,840
 Yeah.

1989
02:25:38,840 --> 02:25:42,840
 No chance to come to this branch because I'm five already.

1990
02:25:42,840 --> 02:25:43,840
 This is only three.

1991
02:25:43,840 --> 02:25:45,840
 So definitely go other branch.

1992
02:25:45,840 --> 02:25:47,840
 So do I need to check this one?

1993
02:25:47,840 --> 02:25:48,840
 No.

1994
02:25:48,840 --> 02:25:49,840
 No.

1995
02:25:49,840 --> 02:25:50,840
 Prune.

1996
02:25:50,840 --> 02:25:51,840
 OK.

1997
02:25:51,840 --> 02:25:53,840
 Prune away this branch.

1998
02:25:53,840 --> 02:25:57,840
 You don't care what is the new value here.

1999
02:25:58,840 --> 02:26:01,840
 That's the alpha beta pruning we are talking about.

2000
02:26:01,840 --> 02:26:03,840
 We finally prune away something.

2001
02:26:03,840 --> 02:26:05,840
 OK.

2002
02:26:05,840 --> 02:26:09,840
 And then these five now we are done with this.

2003
02:26:09,840 --> 02:26:12,840
 So these five values should be used to update this one.

2004
02:26:12,840 --> 02:26:13,840
 OK.

2005
02:26:13,840 --> 02:26:15,840
 So this is a mini.

2006
02:26:15,840 --> 02:26:16,840
 This is five.

2007
02:26:16,840 --> 02:26:17,840
 This is three.

2008
02:26:17,840 --> 02:26:19,840
 Any update?

2009
02:26:19,840 --> 02:26:20,840
 No need.

2010
02:26:20,840 --> 02:26:21,840
 Right?

2011
02:26:21,840 --> 02:26:22,840
 Because I'm five.

2012
02:26:22,840 --> 02:26:23,840
 I'm too big.

2013
02:26:23,840 --> 02:26:24,840
 So you just keep us three.

2014
02:26:24,840 --> 02:26:27,840
 So now this whole branch is done.

2015
02:26:27,840 --> 02:26:31,840
 So we should propagate this value to the top.

2016
02:26:31,840 --> 02:26:36,840
 So the three will be used to update this negative infinity.

2017
02:26:36,840 --> 02:26:38,840
 So now it's three.

2018
02:26:38,840 --> 02:26:40,840
 Actually it's this three here.

2019
02:26:40,840 --> 02:26:41,840
 OK.

2020
02:26:41,840 --> 02:26:43,840
 Then come to this branch.

2021
02:26:43,840 --> 02:26:45,840
 Come to this branch.

2022
02:26:45,840 --> 02:26:48,840
 Zero, then zero, then zero.

2023
02:26:48,840 --> 02:26:50,840
 Then zero here.

2024
02:26:50,840 --> 02:26:51,840
 Zero one.

2025
02:26:51,840 --> 02:26:52,840
 This is the beta value.

2026
02:26:52,840 --> 02:26:53,840
 This is the alpha value.

2027
02:26:53,840 --> 02:26:54,840
 Am I too small?

2028
02:26:54,840 --> 02:26:55,840
 Too small.

2029
02:26:55,840 --> 02:26:56,840
 Prune.

2030
02:26:56,840 --> 02:26:57,840
 OK.

2031
02:26:57,840 --> 02:26:58,840
 Prune.

2032
02:26:58,840 --> 02:26:59,840
 Prune.

2033
02:26:59,840 --> 02:27:01,840
 This branch no need to check.

2034
02:27:01,840 --> 02:27:04,840
 And then this is zero.

2035
02:27:04,840 --> 02:27:05,840
 So zero.

2036
02:27:05,840 --> 02:27:06,840
 This is three.

2037
02:27:06,840 --> 02:27:07,840
 And this is alpha.

2038
02:27:07,840 --> 02:27:08,840
 So no update.

2039
02:27:08,840 --> 02:27:09,840
 Right?

2040
02:27:09,840 --> 02:27:11,840
 Because so keep us three.

2041
02:27:11,840 --> 02:27:13,840
 Then I go another branch.

2042
02:27:13,840 --> 02:27:14,840
 That's how we do it.

2043
02:27:14,840 --> 02:27:16,840
 So this branch and then you have two.

2044
02:27:16,840 --> 02:27:18,840
 So you have two.

2045
02:27:18,840 --> 02:27:21,840
 Previously was negative infinity.

2046
02:27:22,840 --> 02:27:25,840
 Then we update to become two.

2047
02:27:25,840 --> 02:27:27,840
 And then we can compare with this value.

2048
02:27:27,840 --> 02:27:30,840
 This value was positive infinity.

2049
02:27:30,840 --> 02:27:32,840
 So I'm not too big.

2050
02:27:36,840 --> 02:27:37,840
 Right?

2051
02:27:37,840 --> 02:27:38,840
 So I cannot.

2052
02:27:38,840 --> 02:27:40,840
 I cannot prune away.

2053
02:27:40,840 --> 02:27:41,840
 So I need to check.

2054
02:27:41,840 --> 02:27:44,840
 So I'm checking this one and then update.

2055
02:27:44,840 --> 02:27:46,840
 Then they update this alpha player.

2056
02:27:46,840 --> 02:27:48,840
 I mean maximizer.

2057
02:27:48,840 --> 02:27:50,840
 So you cannot update.

2058
02:27:50,840 --> 02:27:51,840
 This is two.

2059
02:27:51,840 --> 02:27:52,840
 So this one.

2060
02:27:52,840 --> 02:27:54,840
 So keep the two.

2061
02:27:54,840 --> 02:27:55,840
 Then back.

2062
02:27:55,840 --> 02:27:57,840
 So this whole branch finish already.

2063
02:27:57,840 --> 02:27:59,840
 Then you can update.

2064
02:27:59,840 --> 02:28:00,840
 OK.

2065
02:28:00,840 --> 02:28:02,840
 So that's why this become two.

2066
02:28:02,840 --> 02:28:04,840
 You get two.

2067
02:28:04,840 --> 02:28:07,840
 And then compare two with this top.

2068
02:28:07,840 --> 02:28:11,840
 So this is a beta value and alpha value.

2069
02:28:11,840 --> 02:28:13,840
 Am I too small?

2070
02:28:13,840 --> 02:28:15,840
 You are too small.

2071
02:28:15,840 --> 02:28:16,840
 Cut.

2072
02:28:16,840 --> 02:28:17,840
 Cut.

2073
02:28:17,840 --> 02:28:18,840
 OK.

2074
02:28:18,840 --> 02:28:19,840
 Done.

2075
02:28:20,840 --> 02:28:24,840
 So this is how we do it.

2076
02:28:24,840 --> 02:28:28,840
 So you see, neither we prune away how many nodes are.

2077
02:28:28,840 --> 02:28:34,840
 We prune away this whole branch and then this whole branch and this branch.

2078
02:28:34,840 --> 02:28:36,840
 Not bad.

2079
02:28:36,840 --> 02:28:37,840
 OK.

2080
02:28:37,840 --> 02:28:39,840
 Although it's a very tiny tree.

2081
02:28:39,840 --> 02:28:43,840
 But imagine it's a big tree.

2082
02:28:43,840 --> 02:28:45,840
 It will be very useful.

2083
02:28:45,840 --> 02:28:46,840
 Right?

2084
02:28:46,840 --> 02:28:47,840
 OK.

2085
02:28:47,840 --> 02:28:48,840
 That's all.

2086
02:28:48,840 --> 02:28:53,840
 That's prune this one.

2087
02:28:53,840 --> 02:28:55,840
 And then the name.

2088
02:28:55,840 --> 02:28:57,840
 Call alpha or call beta.

2089
02:28:57,840 --> 02:29:00,840
 And then I draw this for you.

2090
02:29:00,840 --> 02:29:05,840
 So it's just basically, you know, suppose I already have an alpha here.

2091
02:29:05,840 --> 02:29:10,840
 So this I need to check, you know, whether my value is too small.

2092
02:29:10,840 --> 02:29:13,840
 So if it's too small, then I prune away.

2093
02:29:13,840 --> 02:29:19,840
 You know, if here, then this value, the relationship between this value and this value.

2094
02:29:19,840 --> 02:29:22,840
 So if I'm too big, then prune away.

2095
02:29:22,840 --> 02:29:23,840
 OK.

2096
02:29:23,840 --> 02:29:25,840
 So visualization.

2097
02:29:25,840 --> 02:29:26,840
 OK.

2098
02:29:26,840 --> 02:29:27,840
 Drawing.

2099
02:29:27,840 --> 02:29:30,840
 And then that is a detailed algorithm.

2100
02:29:30,840 --> 02:29:31,840
 OK.

2101
02:29:31,840 --> 02:29:32,840
 Read it.

2102
02:29:32,840 --> 02:29:36,840
 So basically just say something like this.

2103
02:29:36,840 --> 02:29:37,840
 OK.

2104
02:29:37,840 --> 02:29:40,840
 Exactly what we are doing.

2105
02:29:40,840 --> 02:29:42,840
 Search can be stopped below.

2106
02:29:42,840 --> 02:29:50,840
 We're using MIDI notes having a beta value less than or equal to the alpha value of his max ancestor.

2107
02:29:50,840 --> 02:29:51,840
 OK.

2108
02:29:51,840 --> 02:29:53,840
 So that is draw.

2109
02:29:53,840 --> 02:29:55,840
 Try to draw this out.

2110
02:29:55,840 --> 02:29:56,840
 OK.

2111
02:29:56,840 --> 02:29:59,840
 So similarly, these two are the key thing.

2112
02:29:59,840 --> 02:30:01,840
 The pruning.

2113
02:30:01,840 --> 02:30:04,840
 OK.

2114
02:30:04,840 --> 02:30:10,840
 And also, yeah, I think we can have one more example before I stop.

2115
02:30:11,840 --> 02:30:15,840
 Again, this one I already set the initial value as we said.

2116
02:30:15,840 --> 02:30:21,840
 All the alpha set the minus negative and all the beta set positive infinity.

2117
02:30:21,840 --> 02:30:22,840
 OK.

2118
02:30:22,840 --> 02:30:23,840
 And then we have this right.

2119
02:30:23,840 --> 02:30:24,840
 OK.

2120
02:30:24,840 --> 02:30:25,840
 Left to right.

2121
02:30:25,840 --> 02:30:28,840
 And then that DFS.

2122
02:30:28,840 --> 02:30:29,840
 So three.

2123
02:30:29,840 --> 02:30:31,840
 Then a whole branch gets.

2124
02:30:31,840 --> 02:30:36,840
 So I'm canceling this value away and I get three.

2125
02:30:36,840 --> 02:30:37,840
 Right.

2126
02:30:37,840 --> 02:30:39,840
 So this is compared with this negative.

2127
02:30:39,840 --> 02:30:42,840
 I'm not too, what?

2128
02:30:42,840 --> 02:30:44,840
 Too small.

2129
02:30:44,840 --> 02:30:45,840
 Yeah.

2130
02:30:45,840 --> 02:30:48,840
 So I can, I should continue this.

2131
02:30:48,840 --> 02:30:49,840
 OK.

2132
02:30:49,840 --> 02:30:50,840
 So I get this.

2133
02:30:50,840 --> 02:30:52,840
 And this is 12.

2134
02:30:52,840 --> 02:30:54,840
 I back, go back to 12.

2135
02:30:54,840 --> 02:30:56,840
 But this is three.

2136
02:30:56,840 --> 02:30:58,840
 And this is a minimizer.

2137
02:30:58,840 --> 02:31:00,840
 So no need to take the 12.

2138
02:31:00,840 --> 02:31:01,840
 Keep us three.

2139
02:31:01,840 --> 02:31:02,840
 Right.

2140
02:31:02,840 --> 02:31:04,840
 Then next branch, eight.

2141
02:31:04,840 --> 02:31:05,840
 Also too big.

2142
02:31:05,840 --> 02:31:06,840
 I mean, this is three.

2143
02:31:06,840 --> 02:31:08,840
 So we should keep the three.

2144
02:31:08,840 --> 02:31:09,840
 OK.

2145
02:31:09,840 --> 02:31:11,840
 Now the three can be used to update here.

2146
02:31:11,840 --> 02:31:12,840
 Right.

2147
02:31:12,840 --> 02:31:15,840
 So I get my first three for the eight.

2148
02:31:15,840 --> 02:31:17,840
 I'm done with this branch.

2149
02:31:17,840 --> 02:31:19,840
 Nothing pruned it here.

2150
02:31:19,840 --> 02:31:20,840
 OK.

2151
02:31:20,840 --> 02:31:22,840
 Then second branch, I get two.

2152
02:31:22,840 --> 02:31:23,840
 Yeah.

2153
02:31:23,840 --> 02:31:29,840
 So the two will be used for this C. And then two compared to this.

2154
02:31:29,840 --> 02:31:30,840
 Huh.

2155
02:31:30,840 --> 02:31:32,840
 Am I too small?

2156
02:31:32,840 --> 02:31:34,840
 Too small.

2157
02:31:34,840 --> 02:31:35,840
 What?

2158
02:31:35,840 --> 02:31:44,840
 The mini under this beta value pruned.

2159
02:31:44,840 --> 02:31:45,840
 Right.

2160
02:31:45,840 --> 02:31:46,840
 Pruned away.

2161
02:31:46,840 --> 02:31:48,840
 No need to check.

2162
02:31:48,840 --> 02:31:49,840
 OK.

2163
02:31:49,840 --> 02:31:54,840
 So then these two should be back to update this part.

2164
02:31:54,840 --> 02:31:55,840
 Right.

2165
02:31:55,840 --> 02:31:56,840
 But this is a max.

2166
02:31:56,840 --> 02:31:59,840
 So two is smaller than three.

2167
02:31:59,840 --> 02:32:00,840
 So keep the three.

2168
02:32:00,840 --> 02:32:01,840
 OK.

2169
02:32:01,840 --> 02:32:02,840
 So we are done with this branch.

2170
02:32:02,840 --> 02:32:03,840
 Then come here.

2171
02:32:03,840 --> 02:32:04,840
 So we get 14.

2172
02:32:04,840 --> 02:32:05,840
 So we have 14.

2173
02:32:05,840 --> 02:32:10,840
 So we have 14 first.

2174
02:32:10,840 --> 02:32:11,840
 OK.

2175
02:32:11,840 --> 02:32:15,840
 Then 14 compared to the three.

2176
02:32:15,840 --> 02:32:19,840
 Am I too small?

2177
02:32:19,840 --> 02:32:20,840
 No.

2178
02:32:20,840 --> 02:32:21,840
 I'm big actually.

2179
02:32:21,840 --> 02:32:23,840
 So this cannot be pruned away.

2180
02:32:23,840 --> 02:32:25,840
 So I need to check.

2181
02:32:25,840 --> 02:32:26,840
 So this is five.

2182
02:32:26,840 --> 02:32:27,840
 So five.

2183
02:32:27,840 --> 02:32:29,840
 I'm a minimizer.

2184
02:32:29,840 --> 02:32:31,840
 So I should update.

2185
02:32:31,840 --> 02:32:33,840
 Become five.

2186
02:32:33,840 --> 02:32:34,840
 Smaller.

2187
02:32:34,840 --> 02:32:35,840
 Right.

2188
02:32:35,840 --> 02:32:36,840
 And then five.

2189
02:32:36,840 --> 02:32:39,840
 Is that still too small?

2190
02:32:39,840 --> 02:32:44,840
 Am I too small?

2191
02:32:44,840 --> 02:32:45,840
 No.

2192
02:32:45,840 --> 02:32:47,840
 So that means third one.

2193
02:32:47,840 --> 02:32:48,840
 OK.

2194
02:32:48,840 --> 02:32:49,840
 I get two.

2195
02:32:49,840 --> 02:32:51,840
 So I get two.

2196
02:32:51,840 --> 02:32:52,840
 Oops.

2197
02:32:52,840 --> 02:32:54,840
 That's how I get two here.

2198
02:32:54,840 --> 02:32:55,840
 OK.

2199
02:32:55,840 --> 02:33:01,840
 So if no green pattern, the version you have, then we are done.

2200
02:33:01,840 --> 02:33:02,840
 So these two.

2201
02:33:02,840 --> 02:33:04,840
 And then this is maximizer.

2202
02:33:04,840 --> 02:33:07,840
 So we just keep it.

2203
02:33:07,840 --> 02:33:08,840
 Yes.

2204
02:33:08,840 --> 02:33:12,840
 Suppose I'm adding another branch.

2205
02:33:12,840 --> 02:33:14,840
 I'm adding another branch here.

2206
02:33:14,840 --> 02:33:19,840
 It's the D4 with utility value one.

2207
02:33:19,840 --> 02:33:24,840
 So this is two here.

2208
02:33:24,840 --> 02:33:31,840
 Should I prune here?

2209
02:33:31,840 --> 02:33:35,840
 Yes or no?

2210
02:33:35,840 --> 02:33:36,840
 Yes.

2211
02:33:36,840 --> 02:33:38,840
 Because my value now is two.

2212
02:33:38,840 --> 02:33:41,840
 Two is small.

2213
02:33:41,840 --> 02:33:45,840
 So this one should be pruned away.

2214
02:33:45,840 --> 02:33:46,840
 Right.

2215
02:33:46,840 --> 02:33:47,840
 Yeah.

2216
02:33:47,840 --> 02:33:48,840
 OK.

2217
02:33:48,840 --> 02:33:51,840
 So then these two should be used to update this.

2218
02:33:51,840 --> 02:33:53,840
 But this is a maximizer.

2219
02:33:53,840 --> 02:33:55,840
 So don't take my two.

2220
02:33:55,840 --> 02:33:57,840
 So I'm done.

2221
02:33:57,840 --> 02:33:58,840
 OK.

2222
02:33:58,840 --> 02:33:59,840
 Done.

2223
02:33:59,840 --> 02:34:06,840
 So actually another way to represent this is they are using a range.

2224
02:34:06,840 --> 02:34:13,840
 They have alpha beta both from negative to positive infinity and then keep updating both.

2225
02:34:13,840 --> 02:34:18,840
 But I personally feel prefer to have a single value that is quite clear to me.

2226
02:34:18,840 --> 02:34:19,840
 OK.

2227
02:34:19,840 --> 02:34:23,840
 So you can also look at this way to see how they updated.

2228
02:34:23,840 --> 02:34:24,840
 Exactly the same thing.

2229
02:34:24,840 --> 02:34:25,840
 OK.

2230
02:34:25,840 --> 02:34:30,840
 But it's just for each alpha beta value they have a range from negative to positive and

2231
02:34:30,840 --> 02:34:33,840
 then update half of it or both of it.

2232
02:34:33,840 --> 02:34:34,840
 OK.

2233
02:34:34,840 --> 02:34:39,840
 So this is a detailed description provided.

2234
02:34:39,840 --> 02:34:43,840
 You can read this at home.

2235
02:34:43,840 --> 02:34:45,840
 But this is an important slide.

2236
02:34:45,840 --> 02:34:46,840
 OK.

2237
02:34:46,840 --> 02:34:48,840
 So we just now, OK, we just say, oh, OK.

2238
02:34:48,840 --> 02:34:55,840
 We visually, we actually visualize how this prune is going on.

2239
02:34:55,840 --> 02:34:59,840
 So why can we prove mathematically this is not a fact anything?

2240
02:34:59,840 --> 02:35:00,840
 Yeah.

2241
02:35:00,840 --> 02:35:01,840
 So this is a good example.

2242
02:35:01,840 --> 02:35:02,840
 OK.

2243
02:35:02,840 --> 02:35:05,840
 So just now we have this A and BCD, right?

2244
02:35:05,840 --> 02:35:10,840
 There's three branches and no external and no nothing added here.

2245
02:35:10,840 --> 02:35:11,840
 OK.

2246
02:35:11,840 --> 02:35:14,840
 So you can see the value.

2247
02:35:14,840 --> 02:35:16,840
 The A is a maximizer.

2248
02:35:16,840 --> 02:35:18,840
 And BCD is a minimizer.

2249
02:35:18,840 --> 02:35:19,840
 Right?

2250
02:35:19,840 --> 02:35:22,840
 So we can write equation like this from the root.

2251
02:35:22,840 --> 02:35:25,840
 We have a max because the A is a max.

2252
02:35:25,840 --> 02:35:26,840
 Right?

2253
02:35:26,840 --> 02:35:28,840
 And then max among all the three.

2254
02:35:28,840 --> 02:35:29,840
 Yes?

2255
02:35:29,840 --> 02:35:32,840
 So then each of the three is a minimizer.

2256
02:35:32,840 --> 02:35:36,840
 So minimizer among the actual value, the terminal value.

2257
02:35:36,840 --> 02:35:37,840
 Right?

2258
02:35:37,840 --> 02:35:39,840
 Three, 12 and 8.

2259
02:35:39,840 --> 02:35:41,840
 Three, 12 and 8.

2260
02:35:41,840 --> 02:35:46,840
 And then C is among these two.

2261
02:35:46,840 --> 02:35:51,840
 And then you don't care what is the value here because those actually was pruned away.

2262
02:35:51,840 --> 02:35:53,840
 Why we can prune away?

2263
02:35:53,840 --> 02:35:55,840
 So you can use the x, y here.

2264
02:35:55,840 --> 02:35:59,840
 And then the B with this utility value is a minimizer.

2265
02:35:59,840 --> 02:36:00,840
 Right?

2266
02:36:00,840 --> 02:36:01,840
 OK.

2267
02:36:01,840 --> 02:36:03,840
 Then next we just replace.

2268
02:36:03,840 --> 02:36:06,840
 So among these we know the minimizer value is three.

2269
02:36:06,840 --> 02:36:10,840
 Among these we know we can take the z.

2270
02:36:10,840 --> 02:36:13,840
 Suppose z is actually less than or equal to two.

2271
02:36:13,840 --> 02:36:14,840
 Right?

2272
02:36:14,840 --> 02:36:16,840
 We will take because the minimum value.

2273
02:36:16,840 --> 02:36:17,840
 Minimum value.

2274
02:36:17,840 --> 02:36:18,840
 Yeah?

2275
02:36:18,840 --> 02:36:21,840
 So it has to be less or equal to two.

2276
02:36:21,840 --> 02:36:22,840
 Then we take the z.

2277
02:36:22,840 --> 02:36:26,840
 And then this side we take the value which is minimum value two.

2278
02:36:26,840 --> 02:36:28,840
 And then we need to select the maximum.

2279
02:36:28,840 --> 02:36:33,840
 So the maximum, the z actually is less or equal to two.

2280
02:36:33,840 --> 02:36:35,840
 Then why we care about this?

2281
02:36:35,840 --> 02:36:36,840
 Right?

2282
02:36:36,840 --> 02:36:38,840
 Definitely we will take the other value which is.

2283
02:36:38,840 --> 02:36:43,840
 So let's show us, we prune away this will not affect performance at all.

2284
02:36:43,840 --> 02:36:45,840
 We are not losing information.

2285
02:36:45,840 --> 02:36:46,840
 OK?

2286
02:36:46,840 --> 02:36:51,840
 That's a whole working principle behind the alpha beta pruning.

2287
02:36:51,840 --> 02:36:52,840
 OK?

2288
02:36:52,840 --> 02:36:57,840
 So, yeah, you can imagine this is something like this maximizer.

2289
02:36:57,840 --> 02:36:58,840
 Yeah.

2290
02:36:58,840 --> 02:37:01,840
 So your minimizer, although you just show you are too small.

2291
02:37:01,840 --> 02:37:04,840
 So it will not come to this branch at all.

2292
02:37:04,840 --> 02:37:07,840
 So let's go other branch.

2293
02:37:07,840 --> 02:37:11,840
 That is exactly the working principle.

2294
02:37:11,840 --> 02:37:12,840
 Yeah.

2295
02:37:12,840 --> 02:37:14,840
 Can go home with this exercise.

2296
02:37:14,840 --> 02:37:20,840
 And then we will discuss the exercise in the last lecture, OK, in week five.

2297
02:37:20,840 --> 02:37:22,840
 So you still have a bit time.

2298
02:37:22,840 --> 02:37:24,840
 I think this one take a while to digest.

2299
02:37:24,840 --> 02:37:31,840
 Although, although it looks very simple, just two rules that you need to, you need to run it here.

2300
02:37:31,840 --> 02:37:32,840
 OK?

2301
02:37:32,840 --> 02:37:39,840
 I think with, you know, alpha beta concept, then you also need to see the initial value

2302
02:37:39,840 --> 02:37:41,840
 and how to update.

2303
02:37:41,840 --> 02:37:46,840
 And remember you only update when the whole branch finish, then you can update the parents.

2304
02:37:46,840 --> 02:37:47,840
 OK?

2305
02:37:47,840 --> 02:37:49,840
 Also keep that in mind.

2306
02:37:49,840 --> 02:37:53,840
 And then when you check the parents relationship, the alpha beta is always checked with your

2307
02:37:53,840 --> 02:37:55,840
 grandparents, OK?

2308
02:37:55,840 --> 02:37:57,840
 Not your immediate parents.

2309
02:37:57,840 --> 02:37:58,840
 OK?

2310
02:37:58,840 --> 02:38:01,840
 So this is about everything.

2311
02:38:01,840 --> 02:38:09,840
 And then, yeah, the property is just try to say, actually, this can cut down the complexity

2312
02:38:09,840 --> 02:38:12,840
 a lot, but still not good enough.

2313
02:38:12,840 --> 02:38:13,840
 OK?

2314
02:38:13,840 --> 02:38:17,840
 So like game like a goal, still not feasible.

2315
02:38:17,840 --> 02:38:18,840
 OK?

2316
02:38:18,840 --> 02:38:20,840
 That's why this is purely for your information.

2317
02:38:20,840 --> 02:38:21,840
 OK?

2318
02:38:21,840 --> 02:38:24,840
 Definitely I'm not going into this at all.

2319
02:38:24,840 --> 02:38:29,840
 And, but this is how, actually, previously, the symbolic AI tried to address.

2320
02:38:29,840 --> 02:38:32,840
 Actually, it can have a hybrid system.

2321
02:38:32,840 --> 02:38:38,840
 And either they totally rely on statistics or actually they rely on combination.

2322
02:38:38,840 --> 02:38:39,840
 OK?

2323
02:38:39,840 --> 02:38:42,840
 Use neural network to train some data.

2324
02:38:42,840 --> 02:38:47,840
 Now, after that, they give you the statistical value and then attach with the value as a

2325
02:38:47,840 --> 02:38:51,840
 terminal evaluation value and decide what to do.

2326
02:38:51,840 --> 02:38:52,840
 OK?

2327
02:38:52,840 --> 02:38:57,840
 So that is a Monte Carlo tree search method.

2328
02:38:57,840 --> 02:38:59,840
 And that is the whole purpose.

2329
02:38:59,840 --> 02:39:07,840
 I say maybe you can still consider this traditional method with deep neural network.

2330
02:39:07,840 --> 02:39:09,840
 Design a hybrid system.

2331
02:39:09,840 --> 02:39:10,840
 OK?

2332
02:39:10,840 --> 02:39:11,840
 Yeah.

2333
02:39:11,840 --> 02:39:14,840
 So this is a summary, quick summary.

2334
02:39:14,840 --> 02:39:18,840
 So Minimax and alpha beta pruning.

2335
02:39:18,840 --> 02:39:21,840
 So you have something like this in your mind, OK?

2336
02:39:21,840 --> 02:39:23,840
 The alpha beta relationship.

2337
02:39:23,840 --> 02:39:25,840
 Hopefully that will help.

2338
02:39:25,840 --> 02:39:26,840
 OK.

2339
02:39:26,840 --> 02:39:28,840
 So that's all.

2340
02:39:28,840 --> 02:39:29,840
 Oh, OK.

2341
02:39:29,840 --> 02:39:33,840
 Still have extra exercise or extra homework for you.

2342
02:39:33,840 --> 02:39:34,840
 OK?

2343
02:39:34,840 --> 02:39:37,840
 So that is, I already show you exercise one.

2344
02:39:37,840 --> 02:39:43,840
 And then heuristics game tree, I will give you another one, maybe end of this week.

2345
02:39:43,840 --> 02:39:49,840
 And then the quiz, as I said, this is still need to be confirmed.

2346
02:39:49,840 --> 02:39:54,840
 OK, no need to take picture because I hope it's not delayed further.

2347
02:39:54,840 --> 02:39:55,840
 OK?

2348
02:39:55,840 --> 02:39:59,840
 But most likely, definitely will not be in week five, looks like.

2349
02:39:59,840 --> 02:40:00,840
 OK?

2350
02:40:00,840 --> 02:40:02,840
 So it will be week six, week six.

2351
02:40:02,840 --> 02:40:06,840
 And the time don't have idea yet, about 45 minutes.

2352
02:40:06,840 --> 02:40:07,840
 OK?

2353
02:40:07,840 --> 02:40:08,840
 Record a lecture.

2354
02:40:08,840 --> 02:40:10,840
 I think our class is OK.

2355
02:40:10,840 --> 02:40:14,840
 But for another group Friday, they said they have issues.

2356
02:40:14,840 --> 02:40:17,840
 Always have a black screen for a while or something.

2357
02:40:17,840 --> 02:40:18,840
 Is that?

2358
02:40:18,840 --> 02:40:19,840
 OK.

2359
02:40:19,840 --> 02:40:22,840
 So I'm reporting to CSIT already.

2360
02:40:22,840 --> 02:40:24,840
 I don't know why.

2361
02:40:24,840 --> 02:40:25,840
 OK.

2362
02:40:25,840 --> 02:40:29,840
 I think they have some setting, time out setting probably in the computer.

2363
02:40:29,840 --> 02:40:34,840
 And then this is the one for the project later, mini project.

2364
02:40:34,840 --> 02:40:35,840
 OK.

2365
02:40:35,840 --> 02:40:37,840
 So this is for your information.

2366
02:40:37,840 --> 02:40:38,840
 OK.

2367
02:40:38,840 --> 02:40:41,840
 See you next week for the data mining.

2368
02:40:41,840 --> 02:40:43,840
 Thank you.

2369
02:40:43,840 --> 02:40:55,840
 Where is?

2370
02:40:55,840 --> 02:40:56,840
 Off.

2371
02:40:56,840 --> 02:40:57,840
 Off.

2372
02:41:07,840 --> 02:41:08,840
 Off.

2373
02:41:37,840 --> 02:41:38,840
 Off.

2374
02:42:07,840 --> 02:42:08,840
 Off.

2375
02:42:37,840 --> 02:42:38,840
 Off.

2376
02:43:07,840 --> 02:43:08,840
 Off.

2377
02:43:37,840 --> 02:43:38,840
 Off.

2378
02:44:07,840 --> 02:44:08,840
 Off.

2379
02:44:37,840 --> 02:44:38,840
 Off.

2380
02:45:07,840 --> 02:45:08,840
 Off.

2381
02:45:37,840 --> 02:45:38,840
 Off.

2382
02:46:07,840 --> 02:46:08,840
 Off.

2383
02:46:37,840 --> 02:46:38,840
 Off.

2384
02:47:07,840 --> 02:47:08,840
 Off.

2385
02:47:37,840 --> 02:47:38,840
 Off.

2386
02:48:07,840 --> 02:48:08,840
 Off.

2387
02:48:37,840 --> 02:48:38,840
 Off.

2388
02:49:07,840 --> 02:49:08,840
 Off.

2389
02:49:37,840 --> 02:49:38,840
 Off.

2390
02:50:07,840 --> 02:50:08,840
 Off.

2391
02:50:37,840 --> 02:50:38,840
 Off.

2392
02:51:07,840 --> 02:51:08,840
 Off.

2393
02:51:37,840 --> 02:51:38,840
 Off.

2394
02:52:07,840 --> 02:52:08,840
 Off.

2395
02:52:37,840 --> 02:52:38,840
 Off.

2396
02:53:07,840 --> 02:53:08,840
 Off.

2397
02:53:37,840 --> 02:53:38,840
 Off.

2398
02:54:07,840 --> 02:54:08,840
 Off.

2399
02:54:37,840 --> 02:54:38,840
 Off.

2400
02:55:07,840 --> 02:55:08,840
 Off.

2401
02:55:37,840 --> 02:55:38,840
 Off.

2402
02:56:07,840 --> 02:56:08,840
 Off.

2403
02:56:37,840 --> 02:56:38,840
 Off.

2404
02:57:07,840 --> 02:57:08,840
 Off.

2405
02:57:37,840 --> 02:57:44,840
 Off.

2406
02:58:07,840 --> 02:58:29,840
 Off.

2407
02:58:29,840 --> 02:58:30,840
 Off.

2408
02:58:59,840 --> 02:59:00,840
 Off.

2409
02:59:29,840 --> 02:59:30,840
 Off.

